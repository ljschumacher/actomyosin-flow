(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1184740,      21641]
NotebookOptionsPosition[   1181288,      21546]
NotebookOutlinePosition[   1181712,      21564]
CellTagsIndexPosition[   1181669,      21561]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"SetOptions", "[", 
  RowBox[{
   RowBox[{"EvaluationNotebook", "[", "]"}], ",", 
   RowBox[{"CellEpilog", "\[RuleDelayed]", 
    RowBox[{"SelectionMove", "[", 
     RowBox[{
      RowBox[{"EvaluationNotebook", "[", "]"}], ",", "Next", ",", "Cell"}], 
     "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.753175115967492*^9, 3.7531751159685163`*^9}}],

Cell["Variables used in model", "Text",
 CellChangeTimes->{{3.750930558568857*^9, 3.7509305695025043`*^9}, {
  3.7522493104640083`*^9, 3.752249312474337*^9}},
 Background->RGBColor[1, 0.9, 0.8],
 ExpressionUUID -> "17e714c2-83ab-4c0c-bf59-36c7aa88a14f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"variables", " ", "and", " ", "parameters", " ", "at", " ", 
    RowBox[{"(", "homogeneous", ")"}], " ", "steady", " ", "state"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ssvars", " ", "=", " ", 
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"\[Xi]", "\[Rule]", " ", "0.1"}], ",", " ", 
       RowBox[{"koff", "\[Rule]", "0.1"}], ",", " ", 
       RowBox[{"kon", "\[Rule]", " ", "1"}], ",", " ", 
       RowBox[{"D\[Mu]", "\[Rule]", "1"}], ",", " ", 
       RowBox[{"Dc", "\[Rule]", " ", "10"}], ",", " ", 
       RowBox[{"\[Beta]", "\[Rule]", "1000"}], ",", " ", 
       RowBox[{"\[Alpha]", "\[Rule]", "1000"}], " ", ",", 
       RowBox[{"kd", "\[Rule]", "  ", "0.1"}], " ", ",", 
       RowBox[{"R", "\[Rule]", " ", "10"}], ",", " ", 
       RowBox[{"\[Mu]0", "\[Rule]", "10000"}], ",", " ", 
       RowBox[{"Pe", "\[Rule]", " ", "2500"}], ",", " ", 
       RowBox[{"\[Zeta]", "\[Rule]", " ", 
        RowBox[{
         RowBox[{"-", "Pe"}], "*", "\[Xi]", "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Dc", "*", "koff"}], " ", "+", " ", 
              RowBox[{"D\[Mu]", "*", "kon"}]}], ")"}], "/", "kon"}], ")"}], 
          "/", "\[Mu]0"}]}]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"startc", " ", "=", " ", 
     RowBox[{
      RowBox[{"koff", "*", 
       RowBox[{"\[Mu]0", "/", "kon"}]}], "//.", "ssvars"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"start\[Mu]", " ", "=", " ", 
     RowBox[{"\[Mu]0", "//.", "ssvars"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kappa", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Tend", " ", "=", " ", "150"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.750928826990018*^9, 3.75092883388697*^9}, 
   3.7509288950395937`*^9, {3.750928942644445*^9, 3.750929049262429*^9}, {
   3.750929131603867*^9, 3.7509292278031607`*^9}, {3.7509298074574614`*^9, 
   3.7509298297241488`*^9}, {3.750930196349386*^9, 3.750930200677423*^9}, {
   3.750931724353319*^9, 3.75093172464811*^9}, {3.750932066598722*^9, 
   3.750932067154975*^9}, {3.750933364444005*^9, 3.750933365129571*^9}, {
   3.750933595182103*^9, 3.750933595791924*^9}, {3.751362659895322*^9, 
   3.751362663405984*^9}, 3.751362888347498*^9, {3.7516349043662024`*^9, 
   3.7516349324634647`*^9}, 3.7522508188625727`*^9, {3.752250965164315*^9, 
   3.7522509658497562`*^9}, {3.752251274340069*^9, 3.752251275339913*^9}, {
   3.752252342771117*^9, 3.7522523555723743`*^9}, {3.75225314197715*^9, 
   3.752253152798245*^9}, {3.752253191938737*^9, 3.752253192533622*^9}, {
   3.752299095750527*^9, 3.75229909634562*^9}, {3.752299310008008*^9, 
   3.7522993101302557`*^9}, {3.752316278497814*^9, 3.752316279072235*^9}, {
   3.752320144831791*^9, 3.75232014722589*^9}, {3.752320333134595*^9, 
   3.752320333460122*^9}, {3.75232077339688*^9, 3.7523207738672237`*^9}, 
   3.752320991649108*^9, {3.75232126259552*^9, 3.752321262875434*^9}, {
   3.752321300676312*^9, 3.752321301789625*^9}, {3.752321885604889*^9, 
   3.752321908272127*^9}, {3.7524810914279623`*^9, 3.752481091430204*^9}, {
   3.752481127767754*^9, 3.752481148074378*^9}, 3.752481185123118*^9, {
   3.7524812439784517`*^9, 3.752481253515473*^9}, {3.752491545249988*^9, 
   3.752491546264407*^9}, {3.752492011588531*^9, 3.752492012456379*^9}, {
   3.752492105966689*^9, 3.752492113369927*^9}, {3.752492763784946*^9, 
   3.752492764775428*^9}, {3.752492815905867*^9, 3.752492816029189*^9}, {
   3.7524929004787693`*^9, 3.7524929274835157`*^9}, {3.752492995472389*^9, 
   3.7524929956355543`*^9}, 3.752493041170871*^9, {3.752493078375093*^9, 
   3.752493079264173*^9}, 3.752493131494809*^9, {3.752494935751192*^9, 
   3.7524949367720423`*^9}, 3.7530926280580263`*^9, {3.7530928816941557`*^9, 
   3.753092882368325*^9}, {3.753092930016048*^9, 3.753092930614767*^9}, {
   3.753093291105941*^9, 3.7530932911923923`*^9}, {3.753093616431972*^9, 
   3.753093617148904*^9}, {3.75309387523118*^9, 3.7530939052519073`*^9}, {
   3.7530939394380703`*^9, 3.753093939749085*^9}, {3.776151909293436*^9, 
   3.7761519373025208`*^9}},
 ExpressionUUID -> "e2e678f3-5cad-4f77-804b-69dcb19d5278"],

Cell[" solver for 1D cell", "Text",
 CellChangeTimes->{{3.750930549264431*^9, 3.750930552290935*^9}, {
   3.750934169147369*^9, 3.750934193965061*^9}, 3.751036671969446*^9},
 Background->RGBColor[1, 0.9, 1],
 ExpressionUUID -> "a19b1b14-b9b4-4005-b19d-c0c7418f15fd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pdeSolve", "[", "rdvariables_", "]"}], " ", ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "sol", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"sol", " ", "=", " ", 
      RowBox[{"NDSolve", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              SubscriptBox["\[PartialD]", "t"], 
              RowBox[{"\[Delta]\[Rho]", "[", 
               RowBox[{"\[Theta]", ",", " ", "t"}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "/", "R"}], ")"}], "*", 
              RowBox[{
               SubscriptBox["\[PartialD]", "\[Theta]"], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "+", 
                   RowBox[{"\[Delta]\[Rho]", "[", 
                    RowBox[{"\[Theta]", ",", " ", "t"}], "]"}]}], ")"}], " ", 
                 "*", 
                 RowBox[{"v", "[", 
                  RowBox[{"\[Theta]", ",", " ", "t"}], "]"}]}], ")"}]}]}]}], 
            "\[Equal]", " ", 
            RowBox[{
             RowBox[{"-", "kd"}], "*", 
             RowBox[{"\[Delta]\[Rho]", "[", 
              RowBox[{"\[Theta]", ",", " ", "t"}], "]"}]}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             SubscriptBox["\[PartialD]", "\[Theta]"], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Zeta]"}], "*", 
                RowBox[{"\[Mu]", "[", 
                 RowBox[{"\[Theta]", ",", " ", "t"}], "]"}]}], " ", "-", 
               RowBox[{"\[Alpha]", "*", 
                RowBox[{"\[Delta]\[Rho]", "[", 
                 RowBox[{"\[Theta]", ",", " ", "t"}], "]"}]}], " ", "+", " ", 
               
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"\[Beta]", "/", 
                  RowBox[{"R", "^", "2"}]}], ")"}], "*", 
                RowBox[{
                 SubscriptBox["\[PartialD]", 
                  RowBox[{"\[Theta]", ",", "\[Theta]"}]], 
                 RowBox[{"\[Delta]\[Rho]", "[", 
                  RowBox[{"\[Theta]", ",", " ", "t"}], "]"}]}]}]}], ")"}]}], 
            " ", "\[Equal]", 
            RowBox[{"\[Xi]", " ", "*", "R", " ", "*", 
             RowBox[{"v", "[", 
              RowBox[{"\[Theta]", ",", " ", "t"}], "]"}]}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             SubscriptBox["\[PartialD]", "t"], 
             RowBox[{"c", "[", 
              RowBox[{"\[Theta]", ",", " ", "t"}], "]"}]}], "\[Equal]", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"Dc", "/", 
                RowBox[{"R", "^", "2"}]}], ")"}], "*", " ", 
              RowBox[{
               SubscriptBox["\[PartialD]", 
                RowBox[{"\[Theta]", ",", "\[Theta]"}]], 
               RowBox[{"c", "[", 
                RowBox[{"\[Theta]", ",", " ", "t"}], "]"}]}]}], "-", 
             RowBox[{"kon", "*", 
              RowBox[{"c", "[", 
               RowBox[{"\[Theta]", ",", " ", "t"}], "]"}]}], "+", 
             RowBox[{"koff", "*", 
              RowBox[{"\[Mu]", "[", 
               RowBox[{"\[Theta]", ",", " ", "t"}], "]"}]}]}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{
              SubscriptBox["\[PartialD]", "t"], 
              RowBox[{"\[Mu]", "[", 
               RowBox[{"\[Theta]", ",", " ", "t"}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "/", "R"}], ")"}], "*", " ", 
              RowBox[{
               SubscriptBox["\[PartialD]", "\[Theta]"], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Mu]", "[", 
                  RowBox[{"\[Theta]", ",", " ", "t"}], "]"}], "*", 
                 RowBox[{"v", "[", 
                  RowBox[{"\[Theta]", ",", " ", "t"}], "]"}]}], ")"}]}]}]}], 
            "\[Equal]", " ", 
            RowBox[{
             RowBox[{"kon", "*", 
              RowBox[{"c", "[", 
               RowBox[{"\[Theta]", ",", " ", "t"}], "]"}]}], "-", 
             RowBox[{"koff", "*", 
              RowBox[{"\[Mu]", "[", 
               RowBox[{"\[Theta]", ",", " ", "t"}], "]"}]}], " ", "+", " ", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"D\[Mu]", "/", 
                RowBox[{"R", "^", "2"}]}], ")"}], "*", 
              RowBox[{
               SubscriptBox["\[PartialD]", 
                RowBox[{"\[Theta]", ",", "\[Theta]"}]], 
               RowBox[{"\[Mu]", "[", 
                RowBox[{"\[Theta]", ",", "t"}], "]"}]}]}]}]}], ",", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"c", "[", 
             RowBox[{"\[Theta]", ",", " ", "0"}], "]"}], "\[Equal]", " ", 
            RowBox[{"startc", " ", "+", " ", 
             RowBox[{"kappa", "*", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "-", "Pi"}], "]"}]}]}]}], " ", ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"\[Mu]", "[", 
             RowBox[{"\[Theta]", ",", " ", "0"}], "]"}], " ", "\[Equal]", 
            "  ", 
            RowBox[{"start\[Mu]", " ", "+", " ", 
             RowBox[{"kappa", "*", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "-", "Pi"}], "]"}]}]}]}], " ", ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"\[Delta]\[Rho]", "[", 
             RowBox[{"\[Theta]", ",", "0"}], "]"}], "\[Equal]", 
            RowBox[{"kappa", "*", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "-", "Pi"}], "]"}]}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"\[Theta]", ",", "0"}], "]"}], " ", "==", " ", 
            RowBox[{"kappa", "*", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ",", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"\[Mu]", "[", 
             RowBox[{
              RowBox[{"-", "Pi"}], ",", " ", "t"}], "]"}], "\[Equal]", 
            RowBox[{"\[Mu]", "[", 
             RowBox[{"Pi", ",", " ", "t"}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"c", "[", 
             RowBox[{
              RowBox[{"-", "Pi"}], ",", " ", "t"}], "]"}], "\[Equal]", 
            RowBox[{"c", "[", 
             RowBox[{"Pi", ",", " ", "t"}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"\[Delta]\[Rho]", "[", 
             RowBox[{
              RowBox[{"-", "Pi"}], ",", " ", "t"}], "]"}], "\[Equal]", 
            RowBox[{"\[Delta]\[Rho]", "[", 
             RowBox[{"Pi", ",", " ", "t"}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{
              RowBox[{"-", "Pi"}], ",", "t"}], "]"}], "\[Equal]", 
            RowBox[{"v", "[", 
             RowBox[{"Pi", ",", "t"}], "]"}]}]}], "\[IndentingNewLine]", 
          "}"}], "//.", "rdvariables"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\[Mu]", ",", " ", "c", ",", " ", "\[Delta]\[Rho]", ",", " ", "v"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", 
          RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", " ", "0", ",", "Tend"}], "}"}], ",", " ", 
        RowBox[{"MaxStepFraction", "\[Rule]", 
         RowBox[{"1", "/", "100"}]}], ",", 
        RowBox[{"Method", "\[Rule]", "Automatic"}]}], "]"}]}], ";", " ", 
     RowBox[{"Return", "[", "sol", "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.750933991769415*^9, 3.750934003122684*^9}, {
   3.750934043377795*^9, 3.750934134207999*^9}, {3.7509342927637033`*^9, 
   3.750934296654788*^9}, {3.750934531716732*^9, 3.750934536823978*^9}, {
   3.750934778444345*^9, 3.750934780273574*^9}, {3.750935103245782*^9, 
   3.750935183013891*^9}, 3.750935803645979*^9, {3.7509364181457367`*^9, 
   3.75093642263478*^9}, {3.7509368488753347`*^9, 3.7509368642392693`*^9}, {
   3.751035802043852*^9, 3.751036034135483*^9}, {3.751036080361825*^9, 
   3.75103612458755*^9}, {3.751036430312879*^9, 3.751036473199161*^9}, {
   3.751036663941065*^9, 3.751036708974576*^9}, {3.751037354831237*^9, 
   3.751037363995221*^9}, {3.751037454847097*^9, 3.751037510647808*^9}, {
   3.751121379169528*^9, 3.751121380328711*^9}, {3.751121439454002*^9, 
   3.751121449445285*^9}, {3.751121493026382*^9, 3.751121499264246*^9}, {
   3.7511930408089657`*^9, 3.751193044998343*^9}, {3.751193563743341*^9, 
   3.7511935708439693`*^9}, {3.751198380780973*^9, 3.751198392349489*^9}, {
   3.751206836189707*^9, 3.751206838237269*^9}, {3.751207986161408*^9, 
   3.751208004579986*^9}, {3.751208035624799*^9, 3.751208036432434*^9}, {
   3.7512080792214813`*^9, 3.7512080804242268`*^9}, {3.751208115973798*^9, 
   3.751208116269308*^9}, {3.751208166990217*^9, 3.751208202150011*^9}, 
   3.7512089240713*^9, {3.751209087666746*^9, 3.7512091067063723`*^9}, {
   3.751209138871256*^9, 3.751209146279283*^9}, {3.751209568869347*^9, 
   3.751209579175315*^9}, {3.7512098774930143`*^9, 3.751209906855278*^9}, {
   3.751210089528202*^9, 3.751210091976221*^9}, 3.751210129942281*^9, {
   3.751211166194048*^9, 3.751211170639443*^9}, 3.751211203877791*^9, {
   3.7512119350884542`*^9, 3.7512119783016233`*^9}, {3.751212167383025*^9, 
   3.7512121707922707`*^9}, {3.751212220379532*^9, 3.751212220619741*^9}, 
   3.751212369992353*^9, {3.751356688075605*^9, 3.751356752924267*^9}, {
   3.7513627265806227`*^9, 3.7513627272425947`*^9}, {3.751362809318701*^9, 
   3.751362815952793*^9}, {3.751633660420993*^9, 3.75163367414664*^9}, {
   3.751633929023411*^9, 3.751633929794711*^9}, {3.75163409647666*^9, 
   3.751634102184226*^9}, {3.751634432665674*^9, 3.751634441028022*^9}, {
   3.7516346596637383`*^9, 3.751634673921015*^9}, {3.7516347123897133`*^9, 
   3.7516347138719263`*^9}, {3.751635736375454*^9, 3.751635736605434*^9}, {
   3.751638195327776*^9, 3.751638196014703*^9}, {3.751638257442766*^9, 
   3.751638266463418*^9}, {3.751638329514365*^9, 3.751638333289583*^9}, 
   3.751638425788044*^9, {3.751638476441702*^9, 3.751638482331358*^9}, {
   3.75163879833766*^9, 3.751638798614915*^9}, 3.751640922746956*^9, {
   3.7517982402834578`*^9, 3.7517982432978783`*^9}, {3.751798512346634*^9, 
   3.75179851262049*^9}, {3.751798561267394*^9, 3.751798564064343*^9}, {
   3.751798606559897*^9, 3.751798610536375*^9}, 3.751798682884233*^9, 
   3.75179876759809*^9, {3.751798831244523*^9, 3.7517988313752823`*^9}, 
   3.7517988999759912`*^9, 3.751799268806633*^9, {3.751799422888788*^9, 
   3.75179945399434*^9}, {3.751799497205044*^9, 3.751799559091947*^9}, {
   3.751799590185358*^9, 3.751799591327701*^9}, {3.75179985834723*^9, 
   3.751799941880954*^9}, 3.7517999777827272`*^9, 3.751800054937764*^9, {
   3.751800429068735*^9, 3.751800513057086*^9}, {3.751800551950944*^9, 
   3.751800572900218*^9}, {3.7518028880097027`*^9, 3.751802888327425*^9}, {
   3.751804385965384*^9, 3.7518044492289743`*^9}, {3.751804722776676*^9, 
   3.751804729990067*^9}, {3.751804791901801*^9, 3.7518047988548613`*^9}, {
   3.751804835596224*^9, 3.751804835919239*^9}, {3.751804910410677*^9, 
   3.751804912421597*^9}, {3.7518049438379498`*^9, 3.75180494507139*^9}, {
   3.751805497836576*^9, 3.751805584725898*^9}, {3.751805628603993*^9, 
   3.751805657549321*^9}, {3.7518058434404373`*^9, 3.7518059327916803`*^9}, {
   3.751806074625853*^9, 3.751806138946868*^9}, {3.7518065390144663`*^9, 
   3.751806546130103*^9}, {3.751806597848477*^9, 3.751806604548428*^9}, {
   3.7518069086835012`*^9, 3.751806909274898*^9}, {3.751806946961791*^9, 
   3.75180694711383*^9}, {3.751807140990403*^9, 3.751807146923876*^9}, {
   3.751807195197994*^9, 3.751807203838172*^9}, {3.751807806935301*^9, 
   3.751807810637063*^9}, 3.7518093036285067`*^9, 3.7518793348363247`*^9, 
   3.751879399618973*^9, 3.751883796478772*^9, {3.751884154587479*^9, 
   3.7518841566427107`*^9}, {3.752251962192256*^9, 3.752251970482579*^9}, 
   3.752252287219267*^9, {3.752253200173626*^9, 3.752253202616816*^9}, {
   3.752253363008896*^9, 3.752253366292013*^9}, {3.7522534515917788`*^9, 
   3.752253474484109*^9}, {3.7522983799583187`*^9, 3.752298380306055*^9}, {
   3.752298576679006*^9, 3.752298577713863*^9}, {3.752298621534782*^9, 
   3.752298621698226*^9}, {3.7522987644916153`*^9, 3.752298805846191*^9}, {
   3.75229887106503*^9, 3.752298881830244*^9}, 3.752299010422764*^9, {
   3.7522990775297213`*^9, 3.752299079350173*^9}, 3.752299139547504*^9, {
   3.7522992270171623`*^9, 3.752299228995562*^9}, {3.752299303708325*^9, 
   3.752299304798485*^9}, {3.7522997013659983`*^9, 3.75229970838428*^9}, {
   3.752299831826489*^9, 3.752299870217699*^9}, {3.752299990843567*^9, 
   3.7522999914711733`*^9}, {3.7523001923657913`*^9, 
   3.7523002289842873`*^9}, {3.752300462772533*^9, 3.75230046918368*^9}, {
   3.752300609101307*^9, 3.752300644089759*^9}, {3.752300728365534*^9, 
   3.75230075272071*^9}, {3.752301445501721*^9, 3.752301447694705*^9}, 
   3.752301502281777*^9, {3.752301717304186*^9, 3.752301718473792*^9}, 
   3.752302285569504*^9, {3.752302809508348*^9, 3.752302811104014*^9}, {
   3.752303373542898*^9, 3.752303373620186*^9}, {3.752303723005803*^9, 
   3.752303733083117*^9}, {3.752304962990115*^9, 3.752304964225028*^9}, {
   3.752314121963339*^9, 3.752314123445478*^9}, {3.75231912554233*^9, 
   3.752319126933248*^9}, {3.752319597887433*^9, 3.752319626134153*^9}, {
   3.752319897183508*^9, 3.752319929256462*^9}, 3.752319968892654*^9, {
   3.752320032567738*^9, 3.752320061445386*^9}, {3.752320106716752*^9, 
   3.75232015051229*^9}, {3.752320259628544*^9, 3.752320321851063*^9}, {
   3.752320390343492*^9, 3.752320412279278*^9}, {3.752320443567066*^9, 
   3.752320555279251*^9}, 3.752320618495679*^9, 3.7523207362951727`*^9, {
   3.7523208791260757`*^9, 3.752320880503254*^9}, {3.7523209206826067`*^9, 
   3.752320923416121*^9}, 3.752321085644072*^9, 3.752321138439908*^9, {
   3.752321212297513*^9, 3.752321240409915*^9}, {3.752321744712628*^9, 
   3.7523217451251793`*^9}, {3.752321792376861*^9, 3.752321835946207*^9}, {
   3.752321867358317*^9, 3.752321879045466*^9}, {3.752481051753862*^9, 
   3.752481051790901*^9}, {3.752481091408168*^9, 3.752481091411293*^9}, {
   3.752481127747418*^9, 3.752481185107444*^9}, {3.7524812639850073`*^9, 
   3.752481274917864*^9}, {3.752481383174376*^9, 3.752481387349539*^9}, {
   3.752481419421088*^9, 3.7524814201467457`*^9}, {3.752481459998493*^9, 
   3.752481460831627*^9}, {3.7524890664126368`*^9, 3.752489066583221*^9}, {
   3.752489108063195*^9, 3.752489201119351*^9}, {3.752489313074691*^9, 
   3.75248931473637*^9}, {3.7524913569302692`*^9, 3.75249144254909*^9}, {
   3.752491519671549*^9, 3.7524915349627666`*^9}, {3.752491588510747*^9, 
   3.752491632035081*^9}, {3.752491839407465*^9, 3.752491876909501*^9}, {
   3.752491960539032*^9, 3.752491961659851*^9}, {3.752492120705728*^9, 
   3.7524921207806263`*^9}, {3.7524921558849382`*^9, 3.7524921682204*^9}, {
   3.752493103881146*^9, 3.75249310433978*^9}, {3.75249315725379*^9, 
   3.752493160011579*^9}, {3.752494733606843*^9, 3.7524947350383453`*^9}, {
   3.752494860018202*^9, 3.752494863466083*^9}, {3.752495057475265*^9, 
   3.7524950846517267`*^9}, {3.7524953632935762`*^9, 3.752495457401115*^9}, {
   3.752495535166596*^9, 3.752495578364026*^9}, {3.752495616846696*^9, 
   3.7524956899024563`*^9}, {3.752840138545988*^9, 3.7528403054315453`*^9}, {
   3.7528404568912153`*^9, 3.7528405358028307`*^9}, {3.7528405842444267`*^9, 
   3.752840584495267*^9}, {3.752840866732685*^9, 3.752840867781588*^9}, {
   3.752840931671857*^9, 3.752840934363658*^9}, 3.7530926730465508`*^9, {
   3.753092704422517*^9, 3.7530927300949593`*^9}, {3.753092838019575*^9, 
   3.753092844721696*^9}, {3.753093769507298*^9, 3.753093774091477*^9}, {
   3.758452335955641*^9, 3.758452339455308*^9}},
 ExpressionUUID -> "505284ca-8900-4f63-8755-604c955ce4d9"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"alternatively", " ", "can", " ", "try", " ", "Method"}], 
   "\[Rule]", 
   RowBox[{"{", 
    RowBox[{"\"\<MethodOfLines\>\"", ",", 
     RowBox[{"\"\<SpatialDiscretization\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<TensorProductGrid\>\"", ",", 
        RowBox[{"\"\<MinPoints\>\"", "\[Rule]", "nx"}], ",", 
        RowBox[{"\"\<MaxPoints\>\"", "\[Rule]", "nx"}]}], "}"}]}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<IDA\>\"", ",", 
        RowBox[{"\"\<ImplicitSolver\>\"", "\[Rule]", 
         RowBox[{"{", "\"\<GMRES\>\"", "}"}]}]}], "}"}]}]}], "}"}]}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.752320813923888*^9, 3.752320845204424*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "set", " ", "up", " ", "some", " ", "functions", " ", "for", " ", 
    "plotting"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"plotSolVel", "[", 
     RowBox[{"tMin_", ",", "tMax_", ",", "plInt_", ",", "soln_"}], "]"}], ":=", 
    RowBox[{"Quiet", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Labeled", "[", 
        RowBox[{
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"v", "[", 
                RowBox[{"\[Theta]", ",", " ", "t"}], "]"}], "/.", "soln"}], "/.", 
              RowBox[{"t", "\[Rule]", "i"}]}], "//.", "ssvars"}], "]"}], ",", 
           
           RowBox[{"{", 
            RowBox[{"\[Theta]", ",", 
             RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"RGBColor", "[", 
             RowBox[{"0.61", ",", "0.79", ",", "0.47"}], "]"}]}], ",", " ", 
           RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
           RowBox[{"PlotLegends", "\[Rule]", 
            RowBox[{"{", "\"\<vel\>\"", "}"}]}]}], "]"}], ",", 
         RowBox[{"\"\< t:\>\"", "<>", 
          RowBox[{"ToString", "@", "i"}]}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "tMin", ",", "tMax", ",", "plInt"}], "}"}]}], "]"}],
      "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotSolrhoMu", "[", 
     RowBox[{"tMin_", ",", "tMax_", ",", "plInt_", ",", "soln_"}], "]"}], ":=", 
    RowBox[{"Quiet", "[", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Labeled", "[", 
        RowBox[{
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Delta]\[Rho]", "[", 
                 RowBox[{"\[Theta]", ",", "t"}], "]"}], ",", " ", 
                RowBox[{
                 RowBox[{"\[Mu]", "[", 
                  RowBox[{"\[Theta]", ",", "t"}], "]"}], "*", "0.0001"}]}], 
               "}"}], "/.", "soln"}], "/.", 
             RowBox[{"t", "\[Rule]", "i"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Theta]", ",", 
             RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"RGBColor", "[", 
               RowBox[{"0.84", ",", "0.28", ",", "0.62"}], "]"}], ",", 
              RowBox[{"RGBColor", "[", 
               RowBox[{"0.96", ",", "0.7", ",", "0.3"}], "]"}]}], "}"}]}], 
           ",", " ", 
           RowBox[{"PlotLegends", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "\"\<\[Delta]\[Rho]\>\"", ",", " ", 
              "\"\<\[Mu](\!\(\*SuperscriptBox[\(10\), \(4\)]\))\>\""}], 
             "}"}]}]}], "]"}], ",", 
         RowBox[{"\"\< t:\>\"", "<>", 
          RowBox[{"ToString", "@", "i"}]}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "tMin", ",", "tMax", ",", "plInt"}], "}"}]}], "]"}],
      "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotSolc", "[", 
     RowBox[{"tMin_", ",", "tMax_", ",", "plInt_", ",", "soln_"}], "]"}], ":=", 
    RowBox[{"Quiet", "[", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Labeled", "[", 
        RowBox[{
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"c", "[", 
              RowBox[{"\[Theta]", ",", "t"}], "]"}], "/.", "soln"}], "/.", 
            RowBox[{"t", "\[Rule]", "i"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Theta]", ",", 
             RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", " ", 
            RowBox[{"RGBColor", "[", 
             RowBox[{"0.32", ",", "0.67", ",", "0.78"}], "]"}]}], ",", " ", 
           RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
           RowBox[{"PlotLegends", "\[Rule]", 
            RowBox[{"{", "\"\<c\>\"", "}"}]}]}], "]"}], ",", 
         RowBox[{"\"\< t:\>\"", "<>", 
          RowBox[{"ToString", "@", "i"}]}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "tMin", ",", "tMax", ",", "plInt"}], "}"}]}], "]"}],
      "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.751036524146531*^9, 3.75103663324194*^9}, {
   3.751206815038631*^9, 3.751206827044856*^9}, {3.751634478434596*^9, 
   3.751634491581564*^9}, {3.751798221292478*^9, 3.75179823604418*^9}, {
   3.751798271667573*^9, 3.7517984196811647`*^9}, {3.751798647778928*^9, 
   3.7517986538400173`*^9}, {3.7517989330584*^9, 3.751798943278021*^9}, 
   3.751798979724594*^9, {3.7517997599156837`*^9, 3.75179978374069*^9}, {
   3.751804459877091*^9, 3.751804463791667*^9}, {3.751806176558025*^9, 
   3.751806187236706*^9}, {3.75180952556034*^9, 3.7518095505024757`*^9}, {
   3.751809660802046*^9, 3.7518096697067347`*^9}, 3.752252615664337*^9, {
   3.75225284757465*^9, 3.752252847886804*^9}, {3.7522536799349537`*^9, 
   3.752253702681038*^9}, 3.752253784853894*^9, {3.752481051798628*^9, 
   3.752481051809157*^9}, 3.752481091418891*^9, {3.752481127759651*^9, 
   3.7524811851154203`*^9}, {3.7524812761238823`*^9, 3.752481284696142*^9}, {
   3.7524813440450068`*^9, 3.752481345130426*^9}, {3.7524901340117617`*^9, 
   3.752490153272389*^9}, {3.752490221727496*^9, 3.752490230182857*^9}, 
   3.752490263638871*^9, {3.752490415635289*^9, 3.752490436103176*^9}, 
   3.752840562660026*^9, 3.753095087485076*^9, {3.753101131629334*^9, 
   3.753101133786026*^9}, {3.753101183200008*^9, 3.7531012227916594`*^9}, {
   3.753101272346517*^9, 3.753101273855928*^9}, {3.7531013639058733`*^9, 
   3.753101366141912*^9}, {3.753423456576276*^9, 3.753423480302156*^9}, {
   3.753423511165051*^9, 3.7534235228079967`*^9}, {3.776151793486087*^9, 
   3.776151794427031*^9}},
 ExpressionUUID -> "30e32f68-98f3-4259-aa01-cd8db77bd807"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"now", " ", "solve", " ", "from", " ", "steady", " ", "state"}], 
     " ", "+", " ", 
     RowBox[{
     "small", " ", "perturbation", " ", "to", " ", "check", " ", "for", " ", 
      "pattern"}], "-", 
     RowBox[{"formation", " ", 
      RowBox[{"instability", ".", " ", "Ignore"}], " ", "stability", " ", 
      "warnings"}]}], ",", " ", 
    RowBox[{
    "an", " ", "instability", " ", "is", " ", "what", " ", "we", " ", "are", 
     " ", "looking", " ", "for", " ", "in", " ", "pattern", " ", 
     "formation"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"solss", " ", "=", " ", 
    RowBox[{"pdeSolve", "[", "ssvars", "]"}]}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.751798423333712*^9, 3.751798475101194*^9}, {
   3.751798515634892*^9, 3.751798524329732*^9}, {3.751798703313366*^9, 
   3.751798717734498*^9}, {3.751798798362844*^9, 3.75179884715809*^9}, {
   3.751799600343885*^9, 3.751799638255609*^9}, {3.7517996721338797`*^9, 
   3.751799709059733*^9}, {3.751799947994217*^9, 3.751799957865356*^9}, {
   3.751800003052452*^9, 3.751800011888834*^9}, {3.7518048051672297`*^9, 
   3.7518048173402023`*^9}, {3.752249495632682*^9, 3.752249503491034*^9}, 
   3.752251227158104*^9, {3.752251327507133*^9, 3.752251356846857*^9}, {
   3.7522520707444057`*^9, 3.752252086840959*^9}, {3.752252169856228*^9, 
   3.752252185853384*^9}, {3.752252450602932*^9, 3.75225248857052*^9}, {
   3.752252652530505*^9, 3.7522526594596243`*^9}, {3.752252702907889*^9, 
   3.752252712863591*^9}, {3.752298010006543*^9, 3.7522980219733257`*^9}, 
   3.752302872834773*^9, 3.753094890689719*^9, {3.776151993303652*^9, 
   3.7761520483753357`*^9}},
 ExpressionUUID -> "2d75d1c3-9e3a-4483-9003-fbd3cfe2f16c"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "pdord"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Some of the functions have zero differential order, so the \
equations will be solved as a system of differential-algebraic equations. \\!\
\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/pdord\\\", \
ButtonNote -> \\\"NDSolve::pdord\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.752494946183148*^9, 3.752495070777372*^9, {3.752495339243576*^9, 
   3.752495415401963*^9}, {3.752495447945414*^9, 3.752495464446669*^9}, {
   3.752495551322095*^9, 3.752495586311595*^9}, {3.752495631665134*^9, 
   3.752495697913639*^9}, {3.752840569753274*^9, 3.7528405917082243`*^9}, {
   3.7528408487751217`*^9, 3.752840874779251*^9}, 3.752840938183728*^9, 
   3.753092743443371*^9, 3.7530928492028017`*^9, 3.75309288935397*^9, 
   3.75309293462131*^9, 3.753093321894436*^9, 3.753093630426002*^9, 
   3.7530938786009502`*^9, 3.753093909006721*^9, 3.753093942855991*^9, 
   3.753094899313192*^9, 3.7531003066194077`*^9, 3.753102011324686*^9, 
   3.753102449622566*^9, 3.753175131430414*^9, 3.7531788426768827`*^9, 
   3.753179096757359*^9, 3.7531843903173523`*^9, 3.753184535663369*^9, 
   3.753186030609303*^9, 3.7531865267592087`*^9, 3.753187212696534*^9, 
   3.753189742855591*^9, 3.753189946276115*^9, 3.7534209790313463`*^9, 
   3.753421398253281*^9, 3.7534220576733427`*^9, 3.7534234846485357`*^9, 
   3.7537702260765457`*^9, 3.753773407103209*^9, 3.75377355708811*^9, 
   3.753773969421085*^9, 3.753774054045054*^9, 3.753774859487339*^9, 
   3.753782504016827*^9, 3.7537911013072557`*^9, 3.754153265160453*^9, 
   3.754291037220834*^9, 3.756556092850395*^9, 3.758452593938725*^9, 
   3.7588943709540243`*^9, 3.7588959409478807`*^9, 3.758977335934617*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ivres"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NDSolve has computed initial values that give a zero \
residual for the differential-algebraic system, but some components are \
different from those specified. If you need them to be satisfied, giving \
initial conditions for all dependent variables and their derivatives is \
recommended. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \\\"NDSolve::ivres\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.752494946183148*^9, 3.752495070777372*^9, {3.752495339243576*^9, 
   3.752495415401963*^9}, {3.752495447945414*^9, 3.752495464446669*^9}, {
   3.752495551322095*^9, 3.752495586311595*^9}, {3.752495631665134*^9, 
   3.752495697913639*^9}, {3.752840569753274*^9, 3.7528405917082243`*^9}, {
   3.7528408487751217`*^9, 3.752840874779251*^9}, 3.752840938183728*^9, 
   3.753092743443371*^9, 3.7530928492028017`*^9, 3.75309288935397*^9, 
   3.75309293462131*^9, 3.753093321894436*^9, 3.753093630426002*^9, 
   3.7530938786009502`*^9, 3.753093909006721*^9, 3.753093942855991*^9, 
   3.753094899313192*^9, 3.7531003066194077`*^9, 3.753102011324686*^9, 
   3.753102449622566*^9, 3.753175131430414*^9, 3.7531788426768827`*^9, 
   3.753179096757359*^9, 3.7531843903173523`*^9, 3.753184535663369*^9, 
   3.753186030609303*^9, 3.7531865267592087`*^9, 3.753187212696534*^9, 
   3.753189742855591*^9, 3.753189946276115*^9, 3.7534209790313463`*^9, 
   3.753421398253281*^9, 3.7534220576733427`*^9, 3.7534234846485357`*^9, 
   3.7537702260765457`*^9, 3.753773407103209*^9, 3.75377355708811*^9, 
   3.753773969421085*^9, 3.753774054045054*^9, 3.753774859487339*^9, 
   3.753782504016827*^9, 3.7537911013072557`*^9, 3.754153265160453*^9, 
   3.754291037220834*^9, 3.756556092850395*^9, 3.758452593938725*^9, 
   3.7588943709540243`*^9, 3.7588959409478807`*^9, 3.758977336124217*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "eerr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Warning: scaled local spatial error estimate of \[NoBreak]\
\\!\\(\\*RowBox[{\\\"1055.6167624703962`\\\"}]\\)\[NoBreak] at \
\[NoBreak]\\!\\(\\*RowBox[{\\\"t\\\"}]\\)\[NoBreak] = \
\[NoBreak]\\!\\(\\*RowBox[{\\\"150.`\\\"}]\\)\[NoBreak] in the direction of \
independent variable \[NoBreak]\\!\\(\\*RowBox[{\\\"\[Theta]\\\"}]\\)\
\[NoBreak] is much greater than the prescribed error tolerance. Grid spacing \
with \[NoBreak]\\!\\(\\*RowBox[{\\\"101\\\"}]\\)\[NoBreak] points may be too \
large to achieve the desired accuracy or precision. A singularity may have \
formed or a smaller grid spacing can be specified using the MaxStepSize or \
MinPoints method options. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/eerr\\\", ButtonNote -> \
\\\"NDSolve::eerr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.752494946183148*^9, 3.752495070777372*^9, {3.752495339243576*^9, 
   3.752495415401963*^9}, {3.752495447945414*^9, 3.752495464446669*^9}, {
   3.752495551322095*^9, 3.752495586311595*^9}, {3.752495631665134*^9, 
   3.752495697913639*^9}, {3.752840569753274*^9, 3.7528405917082243`*^9}, {
   3.7528408487751217`*^9, 3.752840874779251*^9}, 3.752840938183728*^9, 
   3.753092743443371*^9, 3.7530928492028017`*^9, 3.75309288935397*^9, 
   3.75309293462131*^9, 3.753093321894436*^9, 3.753093630426002*^9, 
   3.7530938786009502`*^9, 3.753093909006721*^9, 3.753093942855991*^9, 
   3.753094899313192*^9, 3.7531003066194077`*^9, 3.753102011324686*^9, 
   3.753102449622566*^9, 3.753175131430414*^9, 3.7531788426768827`*^9, 
   3.753179096757359*^9, 3.7531843903173523`*^9, 3.753184535663369*^9, 
   3.753186030609303*^9, 3.7531865267592087`*^9, 3.753187212696534*^9, 
   3.753189742855591*^9, 3.753189946276115*^9, 3.7534209790313463`*^9, 
   3.753421398253281*^9, 3.7534220576733427`*^9, 3.7534234846485357`*^9, 
   3.7537702260765457`*^9, 3.753773407103209*^9, 3.75377355708811*^9, 
   3.753773969421085*^9, 3.753774054045054*^9, 3.753774859487339*^9, 
   3.753782504016827*^9, 3.7537911013072557`*^9, 3.754153265160453*^9, 
   3.754291037220834*^9, 3.756556092850395*^9, 3.758452593938725*^9, 
   3.7588943709540243`*^9, 3.7588959409478807`*^9, 3.758977336471463*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Mu]", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.141592653589793`"}], ",", 
                    "3.141592653589793`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "150.`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.141592653589793`"}], ",", 
                    "3.141592653589793`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "150.`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"6", ",", "3"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"True", ",", "False"}], "}"}], "SummaryItem"]}]}},
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "InterpolatingFunction[{{\[Ellipsis], -3.14159, 3.14159, \
\[Ellipsis]}, {0., 150.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"c", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.141592653589793`"}], ",", 
                    "3.141592653589793`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "150.`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.141592653589793`"}], ",", 
                    "3.141592653589793`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "150.`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"6", ",", "3"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"True", ",", "False"}], "}"}], "SummaryItem"]}]}},
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "InterpolatingFunction[{{\[Ellipsis], -3.14159, 3.14159, \
\[Ellipsis]}, {0., 150.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"\[Delta]\[Rho]", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.141592653589793`"}], ",", 
                    "3.141592653589793`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "150.`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.141592653589793`"}], ",", 
                    "3.141592653589793`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "150.`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"6", ",", "3"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"True", ",", "False"}], "}"}], "SummaryItem"]}]}},
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "InterpolatingFunction[{{\[Ellipsis], -3.14159, 3.14159, \
\[Ellipsis]}, {0., 150.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"v", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.141592653589793`"}], ",", 
                    "3.141592653589793`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "150.`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.141592653589793`"}], ",", 
                    "3.141592653589793`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "150.`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"6", ",", "3"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"True", ",", "False"}], "}"}], "SummaryItem"]}]}},
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "InterpolatingFunction[{{\[Ellipsis], -3.14159, 3.14159, \
\[Ellipsis]}, {0., 150.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.752481316134503*^9, 3.75248140239048*^9, {3.7524814668918123`*^9, 
   3.7524814751313972`*^9}, 3.752488969402008*^9, 3.7524890901597137`*^9, {
   3.752489144655244*^9, 3.752489171119425*^9}, 3.752489206483755*^9, 
   3.752489320823854*^9, {3.752491368636724*^9, 3.752491410749467*^9}, {
   3.752491516933405*^9, 3.752491559444466*^9}, {3.752491602989118*^9, 
   3.752491626525738*^9}, {3.752491836661697*^9, 3.7524918660348387`*^9}, {
   3.7524919466609*^9, 3.752491971849786*^9}, 3.752492024920508*^9, {
   3.7524921248822193`*^9, 3.752492172852708*^9}, 3.7524927759950314`*^9, 
   3.75249282549609*^9, {3.752492911396707*^9, 3.752492940622229*^9}, 
   3.752493003594098*^9, {3.752493061138103*^9, 3.752493139095479*^9}, 
   3.7524932826881943`*^9, {3.75249474848722*^9, 3.752494760076415*^9}, 
   3.752494870881714*^9, 3.752494946278021*^9, 3.752495070853537*^9, {
   3.752495339327466*^9, 3.7524954154812937`*^9}, {3.7524954480255013`*^9, 
   3.7524954645278587`*^9}, {3.7524955514226027`*^9, 3.752495586392477*^9}, {
   3.7524956317631207`*^9, 3.752495698000492*^9}, {3.75284056976623*^9, 
   3.7528405917154016`*^9}, {3.7528408487883997`*^9, 3.752840874786417*^9}, 
   3.752840971407476*^9, {3.753092832658698*^9, 3.753092849683427*^9}, 
   3.75309288990593*^9, 3.753092935222218*^9, 3.7530933225665913`*^9, 
   3.7530936311610107`*^9, 3.7530938792261887`*^9, 3.7530939095765553`*^9, 
   3.753093943538623*^9, 3.753094899987694*^9, 3.753100306991963*^9, 
   3.753102011693643*^9, 3.753102450054698*^9, 3.753175132100247*^9, 
   3.753178842930409*^9, 3.7531790972406273`*^9, 3.753184390648169*^9, 
   3.753184536030939*^9, 3.753186030997571*^9, 3.7531865270951233`*^9, 
   3.7531872131543217`*^9, 3.753189743206724*^9, 3.753189946742447*^9, 
   3.753420980838121*^9, 3.753421398679206*^9, 3.7534220580701427`*^9, 
   3.7534234853152847`*^9, 3.753770230191204*^9, 3.7537734078341293`*^9, 
   3.753773557461011*^9, 3.753773969793983*^9, 3.7537740544726954`*^9, 
   3.753774859944602*^9, 3.753782504472611*^9, 3.753791101713662*^9, 
   3.7541532657796173`*^9, 3.754291037829937*^9, 3.756556093498653*^9, 
   3.7584525942663193`*^9, 3.758894371590899*^9, 3.758895941570282*^9, 
   3.758977336548918*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"rhomuplot", " ", "=", " ", 
  RowBox[{"plotSolrhoMu", "[", 
   RowBox[{"0", ",", "Tend", ",", 
    RowBox[{"Tend", "/", "5"}], ",", "solss"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"velplot", " ", "=", " ", 
  RowBox[{"plotSolVel", "[", 
   RowBox[{"0", ",", "Tend", ",", 
    RowBox[{"Tend", "/", "5"}], ",", "solss"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"cplot", " ", "=", " ", 
  RowBox[{"plotSolc", "[", 
   RowBox[{"0", ",", "Tend", ",", 
    RowBox[{"Tend", "/", "5"}], ",", "solss"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.752320079030208*^9, 3.752320084518197*^9}, {
  3.752320154438191*^9, 3.7523201716500387`*^9}, {3.752322397461857*^9, 
  3.752322443486677*^9}, {3.752322527433387*^9, 3.752322529266245*^9}, {
  3.752322573389974*^9, 3.752322592829039*^9}, {3.752481051815159*^9, 
  3.752481051822404*^9}, {3.752481330761826*^9, 3.752481337848415*^9}, {
  3.752488985463834*^9, 3.752488987720388*^9}, {3.752490168254809*^9, 
  3.7524901988713093`*^9}, {3.7524902447350683`*^9, 3.752490246906316*^9}, {
  3.752491113448448*^9, 3.752491120229034*^9}, {3.753092750179923*^9, 
  3.75309277812866*^9}, {3.7530928696889677`*^9, 3.753092869833871*^9}, {
  3.75309489192894*^9, 3.753094893464244*^9}, {3.756556254914521*^9, 
  3.756556257301022*^9}, {3.7761518054626017`*^9, 3.77615180600807*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{TemplateBox[{
       GraphicsBox[{{{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.84, 0.28, 0.62]], 
            LineBox[CompressedData["
1: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
             "]]}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.96, 0.7, 0.3]], 
            LineBox[CompressedData["
1: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
             
             "]]}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, 
         PlotRange -> {All, All}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Delta]\[Rho]\"", 
           "\"\[Mu](\\!\\(\\*SuperscriptBox[\\(10\\), \\(4\\)]\\))\""}, 
          "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.84, 0.28, 0.62]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.84, 0.28, 0.62]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.96, 0.7, 0.3]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.96, 0.7, 0.3]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.84, 0.28, 0.62], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.56, 0.1866666666666667, 0.41333333333333333`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.84, 0.28, 0.62]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.84, 0.28, 0.62]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.84, 0.28, 0.62], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.96, 0.7, 0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.64, 0.4666666666666667, 0.2], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.96, 0.7, 0.3]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.96, 0.7, 0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.96, 0.7, 0.3], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
      DisplayFunction -> (GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ), 
      InterpretationFunction -> (RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
     "\" t:0\""},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TemplateBox[{
       GraphicsBox[{{{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.84, 0.28, 0.62]], 
            LineBox[CompressedData["
1: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
             "]]}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.96, 0.7, 0.3]], 
            LineBox[CompressedData["
1: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
ux9B//9+5H8bcoZG
             "]]}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, 
         PlotRange -> {All, All}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Delta]\[Rho]\"", 
           "\"\[Mu](\\!\\(\\*SuperscriptBox[\\(10\\), \\(4\\)]\\))\""}, 
          "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.84, 0.28, 0.62]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.84, 0.28, 0.62]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.96, 0.7, 0.3]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.96, 0.7, 0.3]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.84, 0.28, 0.62], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.56, 0.1866666666666667, 0.41333333333333333`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.84, 0.28, 0.62]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.84, 0.28, 0.62]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.84, 0.28, 0.62], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.96, 0.7, 0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.64, 0.4666666666666667, 0.2], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.96, 0.7, 0.3]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.96, 0.7, 0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.96, 0.7, 0.3], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
      DisplayFunction -> (GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ), 
      InterpretationFunction -> (RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
     "\" t:30\""},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TemplateBox[{
       GraphicsBox[{{{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.84, 0.28, 0.62]], 
            LineBox[CompressedData["
1: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
             "]]}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.96, 0.7, 0.3]], 
            LineBox[CompressedData["
1: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

             "]]}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, 
         PlotRange -> {All, All}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Delta]\[Rho]\"", 
           "\"\[Mu](\\!\\(\\*SuperscriptBox[\\(10\\), \\(4\\)]\\))\""}, 
          "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.84, 0.28, 0.62]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.84, 0.28, 0.62]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.96, 0.7, 0.3]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.96, 0.7, 0.3]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.84, 0.28, 0.62], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.56, 0.1866666666666667, 0.41333333333333333`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.84, 0.28, 0.62]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.84, 0.28, 0.62]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.84, 0.28, 0.62], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.96, 0.7, 0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.64, 0.4666666666666667, 0.2], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.96, 0.7, 0.3]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.96, 0.7, 0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.96, 0.7, 0.3], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
      DisplayFunction -> (GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ), 
      InterpretationFunction -> (RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
     "\" t:60\""},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TemplateBox[{
       GraphicsBox[{{{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.84, 0.28, 0.62]], 
            LineBox[CompressedData["
1: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

             "]]}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.96, 0.7, 0.3]], 
            LineBox[CompressedData["
1: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
b/n/z2Mi3PT/ncf8P6Ssigg=
             "]]}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, 
         PlotRange -> {All, All}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Delta]\[Rho]\"", 
           "\"\[Mu](\\!\\(\\*SuperscriptBox[\\(10\\), \\(4\\)]\\))\""}, 
          "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.84, 0.28, 0.62]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.84, 0.28, 0.62]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.96, 0.7, 0.3]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.96, 0.7, 0.3]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.84, 0.28, 0.62], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.56, 0.1866666666666667, 0.41333333333333333`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.84, 0.28, 0.62]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.84, 0.28, 0.62]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.84, 0.28, 0.62], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.96, 0.7, 0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.64, 0.4666666666666667, 0.2], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.96, 0.7, 0.3]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.96, 0.7, 0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.96, 0.7, 0.3], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
      DisplayFunction -> (GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ), 
      InterpretationFunction -> (RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
     "\" t:90\""},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TemplateBox[{
       GraphicsBox[{{{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.84, 0.28, 0.62]], 
            LineBox[CompressedData["
1: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
Ffvpek6kalMS3JPjPzD5kIrNTPXbWW37CJFDEoeMPKmYlJVbMYdUIujbSj9O
9SbXxyD+zjGFBEC/rP6u96VieM2hss6D8TAgd2JU2o+KTapVb3mA4uCnmfpe
qRdUTP/AfOU3jRiwjq1X6wqgYr6f/HZc0IkGfFhzQ8RrKpa3Y+v9qXNR8MC8
iO9YIBXbJqAp9d/Vd3DK3/aOdjAV+ygEq0EVEbDvfUvDlxAqxsPWl/S7KQxo
rwrOU8OomMMkjwF3dwjMriSPHwynYi2dB+nqo0HAulcr1jCCiqFqk6+PFgLh
60ZnW4tIKhaT53s1j+0NRBsoahu/o2Jrkr9yz/O8Aqct6Uj1PRWzDWXmyIv6
w1Olk0e4oqhYAv/a2jbt57CwanM2n/Stscsyutefguv5hjvG0VRMuSLFu9jF
G94n6ET1k6YnsnQqB3hASldLq2EMFYta+8Hx2hlXELcNFc8mfaD4lPRpNwd4
K99lS42lYm+pnXD7/E14+HxnqRxp934d3QDjC3DwHK+MNuks3N2K8zNCiUJn
QvVIj8So0bjCTJG/4GXRo6S7gty1Nr63R5s3h8SJktZubwvae8cJLa0oKXWQ
47UFiE5ERbujyMl3jX6k+TJ+vd3t54mW4PyDHaTVmu8dznL0QUG5vHLx5Pzd
liT+HDF+htj6Usf4SLe8sPzZs/0lyp1RzTUnv/+d96rCSRsCkInJ7JsEcr3W
pa23tOd+jW7fk3tQS65n4s/R3P2sgUjd3M2ph1zv4w1F65Zm36KXOv7e3eR+
dPSGm+QPBSPRU6cSysn9EuI8xTjVEI7+bhKSuxRKxVJFt13iLYtEEQ/zIqjk
fksIL58fbH+HWKWOSAUEkfW2s+5DSl0U4tTsj7J/Q9ZjKtLjr4pGD/tX3+Kv
qNglpY9LDqUxqG1bU8a8P1nPmh6nD+XFoT6xlw92PSfrvW54LjwrHnFFf9+7
9RkV8ze6GEVJS0Bfz6mJ0J6S58V273RhfCLy0hyJ8/aiYiYBRIiO/yfy/+Sp
bY9dqBh1yVN64t1ndJnu/t+be1Ss+osgoa6fgsbbj+FPHKiYnWiuzaBZKnI4
uegvYUvFUkYZL/c8TkMeZ58t/UeeX/fthvqr3F9Rrdfw9tvk+da5+Fm8OvAr
ujxPEQ6/SMXGCs6l2seloxMmfPdjz1CxvYFRtV8LM5HquOmZJxgVo5RNh3hp
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
57FHWw3+Lz//P+kIwHw=
             "]]}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.96, 0.7, 0.3]], 
            LineBox[CompressedData["
1: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
             "]]}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, 
         PlotRange -> {All, All}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Delta]\[Rho]\"", 
           "\"\[Mu](\\!\\(\\*SuperscriptBox[\\(10\\), \\(4\\)]\\))\""}, 
          "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.84, 0.28, 0.62]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.84, 0.28, 0.62]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.96, 0.7, 0.3]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.96, 0.7, 0.3]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.84, 0.28, 0.62], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.56, 0.1866666666666667, 0.41333333333333333`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.84, 0.28, 0.62]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.84, 0.28, 0.62]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.84, 0.28, 0.62], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.96, 0.7, 0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.64, 0.4666666666666667, 0.2], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.96, 0.7, 0.3]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.96, 0.7, 0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.96, 0.7, 0.3], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
      DisplayFunction -> (GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ), 
      InterpretationFunction -> (RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
     "\" t:120\""},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TemplateBox[{
       GraphicsBox[{{{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.84, 0.28, 0.62]], 
            LineBox[CompressedData["
1:eJwt23k4Vc//APB7r+VeJSFJpRKlRZS0kJgjEomkPiVLlkpkraQFWUoUKpQo
Ucia7CXb+1hD9uzLvYVk3/f1O/2e31/3eT3nnjNzZt4zZ+Z53rPV1FbnKo1C
oUiyUSj/fk+q8yjPb+UiBa/Xf9P6yoK1Fi4jjM1cpKLkDUNN7F9eI+8EN3CR
XrujWzWwP8WYaGwT5CLJ0KpDJ7HvlNTOSPNzkZbWKjfUsI/1KEchHi7SkdfI
VxWbh5F+VnMFF/k82MFXBTvyxOvP5jQukn3T72MEtu01hoHDEoOclS5aUMA+
4nmP69Ecg7zFKoyQx64p1r8SNsYgXdeV5B3CXjousqGhg0FGsD27swe79Krf
904mg2RIqNbtwn7pQbs92sIgBd62Su7AlijqquL+ySDHKrmZW7F1VWI9lAsY
5NpEdb112GJXNsicAQY5HalcLIA99ND716UsBpldYSXHj+1RYC1/P5VBUrtv
ya7C1u5k9ngmMkjVkJCiFdjCbNqBr+IZ5AGtJwYM7L+iecoR0Qyyd+zlIgd2
yrH9o0kRDHJIbSGGDdvZNCI0N4xBWr3f8ouKreYucKr8LYNcn2fYQcEWCPeY
bX7NIIX3Cf9Z/sICVt5U1N8ABukjuvRnCTvu97Vzk88Z5M+ijx2L2A7UZiqb
D4OkqH9pWsDmVsoy2PyIQXbaJUbPYTca71mxx5VBOrdMOM5ih7u++yrnxCDD
jhsTM9g273munrjLID+t/jI2hS1HuvD/Z88glYyKX0xis/8aAVM7BpmeYiM0
gV29bGJtZ8UgeQzfeo5hmyGVEu8rDLIvxENgGFvaKP12sDGDbLW5KTWIvfBA
XCzaAPfXc5Wd/dgloa+r03Rx/a6qUnqxA3IZD/LPMUixuKa0buxLzHsS1dq4
v8xvqXRh717qa2o/xSDvjkcl/MYmFSpkZlUYZN7eIHobto+h4m9OJQYprTc9
2YR9wTnxmYACg5yPlvlWjz2U7de79yCDTHiWnlmJ/a2N9lpBmkG6ZzhOl2E/
WriloiHJIG9St3J+x9YW/jOquwv336a93fnYG4+eDzPbziCvRWu+zsW+bLf7
zJatDJK4fOnLN+z4yCVakzCD/BByySwVe7ypNu2FEIOsfxkAn7DlV0WbqQsw
SIng6KGP2PrMack9bLi+16qIJ9hvXYOzR3/RSYfI69c1/pVX1NbsFEIn73Kb
e1am4/Jmk7wPBtFJX/q1YyXY8ZIeCkMBdNIuznAuD1s+UPKDkTed1L1H+S8d
W//aA/Nj9+mkkoCT8VvsiLc6G+Zv00nGVNbnl9j9VeLlqTfo5PlRuQ5fbEfZ
qr3bLejk9jqBIRfst1wi03RdOnnU+7yOKXanwkQMeZZOnmjY9FAPW+Jmid69
03RS4saShw52Votdbp8qnXxxOGVOCZtt9XG7iGN0siNyn4UctobyelEDRTrp
LrU1Yh92a3yeR8VBOpl/T91+M7bYr1eHH0vTyXuO+lxrsS0FrvcqStLJ5w9e
XV2JPe/Er5m0jU5y7B+zm07D7aN1WSBgDZ0Mn/MQK8UO8srUf7maTha2X3LN
wRYs4It4tZJOem3TzkzG5pUlpYPY6GTu0FhlMDan6KbT78Y5Sbfs1dnm2COT
DU+if3KS6Rymj9iwi9+dXM4K4CTD/Ev+HkllgUrTB9Wc55xktXupw17sPP5Z
31xvfH18Yk4MO9szWjjvISf5zOJ7Ezd28g32I8W3OMkbhx59bE9hQcjxXPvq
s5zk1oPe7vewN7iuza45zUkGl7w9ZYX9OtOK7acGJzmmrNd7Cdt/70b/emVO
cjyW8koZ23P93cQWGU6SNdHqtwL75qB0X9caTvJ5dbKydzL+f/t5pbnVnGT/
/vrhe9gpFY5Bq7k5Se/iHHtz7NGEItUj7Jzkpr0JfMex7WwuRjyf4CAfzD6t
W0jC8++wq8GReg4SxR4lzLGtRqsqnwdykN8Pv1orn4jH1++J7R/9OUjPrYsq
u7A/1ax3znzGQc5a5Zitw+5Pvizx5zEHqcYffWf8Mwuu35z2PHKHg6wXcPCJ
w7YY36z05wIH6bbp6hN+bK9O5aC5sxzk0bGi8qUEFsT8NB9erc1Bir9V/9WH
3ZOa8u6IGgc5+sr5Rj62ub3q3HNZXF8jDUFbbLNJ69Qj6znIhVY1p+xPLKDN
TfLMC3CQbVpe/R+ww5acr2fxcpCho2winthN9GdbjzI4SIOVZKc29skNn58r
TLOTK1JmRTviWSCFhiyJenZSUF8MFuNYMO1ls03Vj51UVbjxZVcs/p74Trlw
+rKTC2vK1q/C3uf/oLXYi53cvPaL0UgMft+3z/xPuLKT/WtKH3/Bbkv4TFG3
ZSc5B3gGCGyydqhNQ5OdXEcuBGpE4/cXtn11houdlNhMhm37yAK9Hfcf63Gw
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

             "]]}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.96, 0.7, 0.3]], 
            LineBox[CompressedData["
1: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
HiMhsbBHqtep8zGmGAGa7HUSsuFbowt1ycOcgmmns7dJqDLZ90s/dR6GTybc
D6chI/W8vH22NLmYieAhj/17yMihlbo/gzYbKze99X6CTEaiPOGkFeYsLCrX
t531ABnpBog+C+XIxLqtvmge4CejKod7+7/xZWAnY0+JjgqS0fLimIWZ4CeM
47TgszQhMjph5ljLeCIdmwtVGLh7goz8NT9aXpVIxRL3aqtriJER/l2q8e+l
j5j3VdVbX06T0YJC6yEnSME2g/yNNs6QkcaFtZb/FJOxkxotE5IXyMgn0+/o
/TtJmAOOVM9dIqPyo4ftF+8lYvK8P5pJUmQkyHXzxCn9eGxtk2/GX5aMPpGw
nfDmWCx5f1rAUURGbPSjGT+6ojFXrbXzSXJkZLXApskyFIk9oTwZIFwho+6/
lwg3ZsKxkXKbANWrZAStBvlv1sOwdwx9Uu7XyCi53Ee/nP4dZlhs8y9Onoz2
fM5nWWMLwVbb7njHXyej51G/S87yBmGCnbHHPRXIKJVzb1uvsj+m0VNTrn6D
jF7OPhRVeeSNnXV5cJNZkYykm7Pda+3cMa4VzubUXRPSaf5KB7tihSt9l0Vv
klHi3jRro7sO2Hz9j09hu75Qe0vktqMVpovOEEZ3/Z76L/ZK3RQ7/5+J2sFb
ZOQ8dkclWO8+xsO/LwR2XYQ7mzFlAfwSWK+8tuvpZAU65mhDULSdHDyz64Fw
Z6UDCS+gi3xumWHXyn294actKfBO6/B6xe74vcG884lJzrB46tSs4a45vjS8
P+nnBp8YaH9N7s5X4ZeNTJG1J6R2vSjQ3rXjptDgZT1fIAvZu+ft/m93gEnV
8JFAsF9WVprbjYdlghw5Y18w/Oq6wkTaNWsej8kLllCYGuyvOLQbv/SqmdLz
tGHg8qXrJddufK/9rGHdXHkPda/3HJzezUf/SIxBxWQENHW6NGbu5ovEdIt4
62cMJAwqC/3bzW8Or6AWe2MclMVHdmsCGQmRt9Qn+uLB6yDP+0KZ3Xo73p6W
3Z4IId6OEkKSu/WYA6qc35LgzkjFgYsXyUhL8tOmVX0yfJqaIIuf363nm663
pcpTQJcuRKdLfLfe26dWY4o+wlnCt0z3U2QUpPMgkSovFUhRz4/wntxdL89P
L1V/TIfSQnn/zWNkZBD8J/JOUCaw1o70hfCSEfWmm8h8/G5CHjY7XthHRq25
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
Y0SdrWP/3u36/+/vIyvv/7u//z9enE1T
             "]]}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, 
         PlotRange -> {All, All}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Delta]\[Rho]\"", 
           "\"\[Mu](\\!\\(\\*SuperscriptBox[\\(10\\), \\(4\\)]\\))\""}, 
          "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.84, 0.28, 0.62]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.84, 0.28, 0.62]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.96, 0.7, 0.3]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.96, 0.7, 0.3]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.84, 0.28, 0.62], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.56, 0.1866666666666667, 0.41333333333333333`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.84, 0.28, 0.62]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.84, 0.28, 0.62]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.84, 0.28, 0.62], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.96, 0.7, 0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.64, 0.4666666666666667, 0.2], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.96, 0.7, 0.3]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.96, 0.7, 0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.96, 0.7, 0.3], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
      DisplayFunction -> (GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ), 
      InterpretationFunction -> (RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
     "\" t:150\""},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{
  3.752319958213903*^9, 3.75231998892281*^9, 3.752320053924498*^9, {
   3.7523200867792253`*^9, 3.752320134586351*^9}, 3.7523201821620827`*^9, {
   3.7523202685587187`*^9, 3.752320292991703*^9}, {3.752320328634531*^9, 
   3.7523203566319113`*^9}, 3.752320504755625*^9, 3.752320603106841*^9, 
   3.752320732098002*^9, 3.7523207982305117`*^9, {3.752320889223524*^9, 
   3.752320912450539*^9}, 3.752321253516602*^9, 3.7523212837019176`*^9, 
   3.752321318071669*^9, 3.752321369818326*^9, 3.752321753968668*^9, 
   3.752321812479745*^9, 3.752321850509863*^9, 3.752321922480194*^9, {
   3.752322446827376*^9, 3.752322465921739*^9}, {3.752322582058992*^9, 
   3.7523225940890713`*^9}, 3.752481356385798*^9, 3.752481478577919*^9, {
   3.752488975282551*^9, 3.752488995333014*^9}, {3.752489148568166*^9, 
   3.7524891761539087`*^9}, 3.752489210518301*^9, 3.752489325289981*^9, {
   3.752490206218266*^9, 3.752490249672962*^9}, {3.752490372248768*^9, 
   3.752490386933861*^9}, 3.752490440463286*^9, 3.752491121222312*^9, 
   3.7524913752772284`*^9, 3.7524914205399847`*^9, 3.7524915805407143`*^9, 
   3.752492029530768*^9, {3.752492127668788*^9, 3.752492175300931*^9}, 
   3.752492778985752*^9, 3.752492833855753*^9, 3.752492913852371*^9, 
   3.752492943951811*^9, 3.7524930075301933`*^9, {3.7524930664592123`*^9, 
   3.752493142244748*^9}, 3.752493286339967*^9, {3.752494752555896*^9, 
   3.752494761355472*^9}, 3.752494876836205*^9, 3.752494950252049*^9, 
   3.752495077511828*^9, 3.752495591371134*^9, 3.752840972640461*^9, {
   3.753092854022542*^9, 3.753092890862644*^9}, 3.753092936323403*^9, 
   3.753093329026698*^9, 3.753093631641162*^9, {3.753093880328156*^9, 
   3.7530939101735067`*^9}, 3.753093944021249*^9, 3.753094906670826*^9, 
   3.753095093569524*^9, 3.75310031142242*^9, 3.753101138214121*^9, 
   3.753101197275313*^9, {3.753101350925694*^9, 3.753101370125792*^9}, 
   3.7531020148904963`*^9, 3.7531024507465754`*^9, 3.753175136677162*^9, 
   3.753178845455201*^9, 3.753179098125248*^9, 3.753184391476821*^9, 
   3.753184537110992*^9, 3.753186036994556*^9, 3.75318652958635*^9, 
   3.753187213913907*^9, 3.753189743944647*^9, 3.753189947551135*^9, 
   3.7534209818426657`*^9, 3.7534213992538357`*^9, 3.753422059695402*^9, 
   3.7534234872570667`*^9, 3.753423526920788*^9, 3.753770233452092*^9, 
   3.753773408703002*^9, 3.7537735597943583`*^9, 3.753773972912734*^9, 
   3.7537740551351767`*^9, 3.753774860897767*^9, 3.7537825052105913`*^9, 
   3.7537911046002417`*^9, 3.7541532663015327`*^9, 3.754291038528327*^9, 
   3.756556095976844*^9, 3.758452596560069*^9, 3.7588943735205593`*^9, 
   3.758895943681838*^9, 3.7589773376525707`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{TemplateBox[{
       GraphicsBox[{{{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.61, 0.79, 0.47]], 
            LineBox[CompressedData["
1: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
fNpuddsSf66n0DHN5de/0La346xwX00h98STkm20QV0q+mdAoWb3pS19tPXs
bHf4LaXQrp/WwlHa6nVUJ1uDQjyx5qBx2vPsMvxDFSkUeLLaepi2oNZeQkyG
Qjt36J7spj1oK7gXJUGhXk9qsJH2z9rMZQuEXBQ416wM0f5iu7Mkns1FwGi4
O532m1rhdrUhLvI4RBwMp51lm92e1s1FVEmH4X7aCbWOJ5b/4iLBuIGzIe1I
WxHRvG9cZOeo2cygHVibE2daxUUlH0qzPtPn52nrtKSsnIt63sk3XKe9u1as
yPINF+1wWmtvTdvK9vmWqjwucjTcSIrSNql1bt2RxUUqMRa2L+n7RdpKHGtJ
4aIES8taN9pytXnT+xO46Co6mi5JW9zWNaYnhotcxWrr/6PrYaJGinksgots
s6/stKTdUHPAMiiAi7JDvFx86Poqt5nzfcaXiz5U1XZO0vWXV/PK6+ph+v1f
ZuEg2rdq5l2L20X//vjjF07R9WtTU/L1mSEXnX6+W0GTrv+1Nl6HjJdz0d37
+/aco/OhW7OI/YbJRUWMk6ONdJ5m13grfVrARaPV13RO03n7VK14oHOYg+rX
Lag6SpLw9faK0SO9HMR+rtrwkCBhZvXxsJE2DvLi/Tb8QOf5avX7DEE1B+07
HCo6m867ZfXpQYWnHHTBW9hho0bCJKclWXppHOT3a0nrQVUScru/H7Z6yEHN
X371naD7Sc706t9nrnEQzu+xuUj3H3l9RkPjUQ4qEtfQ95Cn67Ek7+bgIQ76
suFMl70cff83H9om7sJBe5x3vjCTJeF5tw+VRts5qEL6zR1qAQl7b18vitXl
oD4mFQPnkhCqW/hnkxzUcNFmgcQcEj7IHjEoV+UgrbLjTz9Ik9C2wiF7bC4H
dcnsMFotScKiSaVH9kNTqK75SGyXCF0vezLC5udOoSB53xabKQJ2du0GWk+m
UMXnt7rv6f6+9oSUYF3SFLL9bv3YdIKAo5FHz/jenEJ3Y5IH59HzYe+blUeq
j08hw81qihf76HmmVmYTrT+FPtgkKYT8JGBN53cliTw2kl+U3FxbQkDNBNv2
0/+xUYEjrAul55u/zYe0P8lstM6vWm1JEQFVXxfqvb3JRib6e8o96Pnoc+OO
pf8xNnKUPbE25T8CSpg5nOjUZqNtml/ipOh5C27UfCxLmkSvdleopnsSMHbD
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
             
             "]]}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, 
         PlotRange -> {All, All}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"vel\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.61, 0.79, 0.47]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.61, 0.79, 0.47]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.61, 0.79, 0.47], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4066666666666667, 0.5266666666666667, 
                    0.31333333333333335`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.61, 0.79, 0.47]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.61, 0.79, 0.47]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.61, 0.79, 0.47], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
      DisplayFunction -> (GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ), 
      InterpretationFunction -> (RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
     "\" t:0\""},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TemplateBox[{
       GraphicsBox[{{{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.61, 0.79, 0.47]], 
            LineBox[CompressedData["
1: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
             
             "]]}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, 
         PlotRange -> {All, All}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"vel\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.61, 0.79, 0.47]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.61, 0.79, 0.47]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.61, 0.79, 0.47], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4066666666666667, 0.5266666666666667, 
                    0.31333333333333335`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.61, 0.79, 0.47]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.61, 0.79, 0.47]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.61, 0.79, 0.47], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
      DisplayFunction -> (GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ), 
      InterpretationFunction -> (RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
     "\" t:30\""},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TemplateBox[{
       GraphicsBox[{{{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.61, 0.79, 0.47]], 
            LineBox[CompressedData["
1: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
             
             "]]}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, 
         PlotRange -> {All, All}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"vel\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.61, 0.79, 0.47]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.61, 0.79, 0.47]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.61, 0.79, 0.47], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4066666666666667, 0.5266666666666667, 
                    0.31333333333333335`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.61, 0.79, 0.47]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.61, 0.79, 0.47]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.61, 0.79, 0.47], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
      DisplayFunction -> (GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ), 
      InterpretationFunction -> (RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
     "\" t:60\""},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TemplateBox[{
       GraphicsBox[{{{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.61, 0.79, 0.47]], 
            LineBox[CompressedData["
1:eJwtmHk4VP8Xx1ExKpKEUCRL0oJoIc6gVGRJm7QIbZYkIqKUKFuRJKGUJdkq
0VckRypUlkglSr5CtjH3zsydsfvd7/P8/prn9Xzmzj3nfM77fc4zS11O2x8T
ERISOicsJPTfp+V2SfPxpeKVQkJM3URrJ5OFbiEEY4l4pcq+Y0nfePugM4K4
J6sgXqmz89Gdat4JOFfbPKIrLV7Zynyg+5p3DjK33nlyUkS8cvfgh0fPeddg
aouKwrcuRuXvh8P+t3l34LmZHvksg1F5X3fNJ3VeNihu2pt2XJ1RaTQ7vdOV
UwKKNq4ytxaIVQY9DxRmDdaCD0t3oHuBaKV+iPMRr8BmOE6dKjJcNKvyZQ3v
eJ59K0Qonb69U3xmZV/ievPddzpAuEm39fqcGZXHGXcqqrS74HFm6droEeFK
tZdvBjzW9QCr80lozIBQZbjg8G1X+T5YsOfT0eO/prHMmzeq9HgAsjXeUgav
JnF1jWSXvTELHKQlnEyKJnF5oOu/wRYsmD21t9YibxK1Ms07021Z4Pl1IHlf
yiR2zTKp7nJmgU6YNDMwaBKdFxkk6F5lwct/naPKjSZRs/HuUtEGFtSmCimb
l08gPtY7dMRxGPqlTbbZvR7HzdnnlJyOsuG327KmSy/G8az56kOrPdnwtZLh
WFgwjntaty4Z8WXDG68vHtL3x7HeVV0k6Aob7n48GdtycRw31u0/Y5zOhu2h
t745MMdRwyz6Y0EHG3LIvqPOb8dQpt7e4ZIWAWnbGlg3X43hVBPVLbaKgNtp
Rf5VRWMofma/ZowOAZetL0YsyxxDhXjbsqj1BOzPWZDfEzaGeTrsm05bCBB3
NuG6WYxhu1/bS9cjBLh9vnXZ58Mosi3ZnYW3CHCwgwWjlaO48Nk9I/E7BGz7
PJAZ8nIURQpmcQ8kE6Dx2bQ2JnsU5fMUDnAfENDdyJbMDh9FQdUz8/4CAo40
WqW2m47iVoHn8EA1AXa2glUuG0fR7kZsCu8DAdCYjn06o3jQfmLlaB0BSxpH
uyjlUWzZsfwXp5mA9oZsLampEfzH+Nmt7A4C9jbMKNlcNoKpcZGb5lEEWNg8
3fapcAQ3b2w99lZAgEGDY9vOnBG0PB9InBkjQKahcPJw0ggeD48Tq5gmoLne
aXOgP33eQFjNn02Cdf2rpgK9Ecxa/iosdTEJm6xPuOqvGMF1keQTjjIJK+ul
qbKlI2ghcbPATJWE2fVu8rVSI6iZnTHZqEFCbZ2cU9ewAIdnrxJKW0PC5jrf
Idk8AX5AN29RJgn3HdRzVmcIMMA24V6LKQkj3d+OWaQIMOoAtz/VnIT8yY2/
/aIF2C89743iVhIWrhFqbvEQINX3NqbJmgTvV4U3hlwFqJJQ9f20LQkft7pa
zTwoQFLurwhjJwkXj1S/W7tDgHHiJT/Ud5PQezOmJH6lAN93TjyWdSSBucTk
bK6aAL3CWmWuHCAhOZetU6UkwJaJAZX+gyTYvLXPJecKMOZz1uhDJxJKePL3
7Fh8HPPLrXp/lATpyx/3n+zhY9wzBcupYyR4SgTLXvrFx9wNwjo6J0hQ0fgd
+7Sej09nbuOHuJEQsS8rVPIJH3v0W8IbTpHQ9WcvaDzio6HwMoUmL7q+3owJ
4/t8nBHT/rHuNAlEhIffqRt8vFDofOTpGRIsFy7WC7/KRwubJP1EHxIyHzYM
p17ko+/sOTP9fUnYX6Z7ss6Lj92zvXxV/Egotvij1n2cj+++vBEZpFnyS8K/
44f5eE9jkecTfxKqBgWO2rZ8lP+blKccQIJSQI6c+VY+vj6jfqaeZv+ZB1oc
gY+OGhfZvoEkrFhcYR21ho8lXkep3PMkhOWcnp2uSecrd8jTKIiEDoOlNaXK
fEwMGTn/juYNVc1XmuTo8/rliyyCSbhlE8bsn8fHwNoQk0qah9sMJoUYfFy9
OqdL7wIJ2078LZUX4qPojqOT92ieCLFcu42g8Ltist+hiyTsnTvBduqjUGTH
w6pCmp8lFeSf66RwS9auY1M0z1Z3cottpXD7PyF7zENIOFoopZH9mcKYT4Ko
SzRXGFd1VdRSmKIdP/mCZvmPvmnfKil8v0sr6w/NPnvVDw6/pPCUQWqg+CUS
6ru+yYsWUtjq2+CjSbNKkk2H72MKg8YMxYDms9bVGf+mUVj07NkOa5prRUzc
bO9QKFbN3mBPs9LLF6tf36Bw087KN/+de59axVtxlcIlhZyf/z3/VjWrNOkC
hauGnS4tp1m2VSlE1I/C1YsHHorR7H49YfNZTwpTq4LX//ovfrO5s7tcKZxc
J7E+h+b5I1cabQ9QuHhuSqLHf/kWjCe8tqdQ3VdnhxrNL118HbUt6Xwzuqy/
0PWZKz+ofNeUQjPz5psBNDvVu/SIbqSwvUFbUobm56FtuWd1KGycsbw0i66/
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
             
             "]]}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, 
         PlotRange -> {All, All}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"vel\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.61, 0.79, 0.47]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.61, 0.79, 0.47]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.61, 0.79, 0.47], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4066666666666667, 0.5266666666666667, 
                    0.31333333333333335`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.61, 0.79, 0.47]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.61, 0.79, 0.47]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.61, 0.79, 0.47], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
      DisplayFunction -> (GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ), 
      InterpretationFunction -> (RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
     "\" t:90\""},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TemplateBox[{
       GraphicsBox[{{{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.61, 0.79, 0.47]], 
            LineBox[CompressedData["
1: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
79Acr0Rnxck26v8PCBgj4g==
             "]]}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, 
         PlotRange -> {All, All}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"vel\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.61, 0.79, 0.47]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.61, 0.79, 0.47]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.61, 0.79, 0.47], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4066666666666667, 0.5266666666666667, 
                    0.31333333333333335`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.61, 0.79, 0.47]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.61, 0.79, 0.47]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.61, 0.79, 0.47], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
      DisplayFunction -> (GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ), 
      InterpretationFunction -> (RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
     "\" t:120\""},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TemplateBox[{
       GraphicsBox[{{{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.61, 0.79, 0.47]], 
            LineBox[CompressedData["
1:eJwtmXk0Ve/3xwm5MqQSSqXJEE2iErEvpaSilEJk+JQMGRIaKJKipCQpQxJS
ioRGYSNlzlwyZ06GO7r3HNPvfNf6/XXWa+2zz3me/X7v8+y1zipHT/PTcwQE
BDIEBQT+dzXZJ7VrcpVYkYDAYxFdzRv6i10CGbQVYkV0xa3Z7vPtoDuM8UR2
qVhRXW5uovx8T7hQ3sDXWChW9PKJps2oVCCk7n30xnmOWFG+yYPNzVL3YMZo
5dKfPbSijGMLSlDqKeQYbmG+TaEVOVu+OhAllQUKO489dVKiFaX27U6flkRQ
MP1P5sEi0aKnnr/fd6+vA+9RjeG+RXOLUiIOnmYKt4AT1z1XZ4lIUV4kjRuS
3QVhyzwfHhYTLvo9WddeOtMLgvUaLRHiQkUW2h+7WC2D8DL1s2Y4X7BINbcj
K2P6H4x2vwm+MyxQ9KbMoDxUkAGLLKpOOXXMol9NtXPBbya8UP7K3fplGi9L
HiFpNWz4u1Df+FDBJOb6rAvcFcEFl7oH17wrCCxTfpQ2rMYDy0OwiCgicEZC
9EuyBg+M64ZTAz8RqO2g2nZcmwfKdQbld14QmPDQds1nIx701Y5LvbhBoGN3
2MLj9jywr92f0GZA4NL861pkNA+O/RD6uDuPjz8O/+1Mm+TBHtMs46psPkJS
xQqWIB+2/rBuPZzOx5iVRy7uoPFB5kf29MnHfEwQKj+aL8OHhhq73Zf8+Lg4
piDn/gY+HKz5Up+5hY9CnnLh3if5sLv6/Ijsax4q9UyOluTzIdFSKX1jCg+t
1yT6KJTwgd/38/SeeB6yYi5Ze5bxIWN6R5dvOA8f5hvIijXwYfEmgYYmNx4K
3TWjCQ3yYeD+nY9R63l4tvu74VxpAsKOPw+WejOBczYeOzRiS0BP7zFQTpvA
PQr18NiRgJ1etCm9xAncLuM9qHeGAEaYm6/73QkUOPNQ0c+LAKs8Dedqjwkk
qmNdHwcToLa88ODtTRPoYdd19uFzAmp6fsrPzebi7bLlVaP9BKx8bNp5/iUX
X7jf6pn+S4DPwe8pf55yUVk/+5PQGAHLPr3fWHCXi8PfZFQZXAJcI6J3+5zl
Yr7W+BtjERIKDSXm9fzHxWt+QdZCYiQs4F+vNTvBxYJs8YocCRI+OZ63Vjfh
YlLKGtfxRSTM1Tb36lHhom9ghnD7KhKsRyu2HlLkYt7i6YU7lEjITDaYLJDl
4mmJzcG3VEk4KqlxM1aEixtu0RKEN5GQ3DM/4VAvB6/3WnHtdUmYeBTqUNjK
QeOuIKXj+iTsOzirvL6Bgz/XPu8GAxIYH8eyRYs56J7++8TQHhIgoqasMJGD
fZPFc+8fJiHK0ChifQwHRf6ObpE7SsIAL988LoKDyz54Pr97jIS7jhkdvgEc
LFnckH3oBAk9cmtTes9z8KRzCifOloStNfHOh904qPTodW2zHQnt28PZ6605
+KD3e9yyUyRsHp3zOe4wB9811WxSdSLhevLlq7R9HAw8yU5b40yCmqSrWN92
Dm65OjforxsJF3uMFeMXU/c3MB+89iah+lFRH02Sg3KtNaObfUhQPKj9yk+Y
g55LLqel+pLw/aPKVnM2G6277rkcu0jCUvenJA6z0WP4jGT0JRLcV8sVbehh
o1b9mCFeJkEmYu5+sXo20lMTIjsCSHA2vCp9oZyNUfkn9euukPCFx23uQzb2
WdDSs66SIJXpHm/+kY2tNXpx/oEkODr22xe9YeOq2Y1tmkEkfJCzVd6YxsbV
Hx5rtVA8r6bpX/wTNgrv/O7hfI2Ek8EHssUesnGSF3W4j+Ls7aV+F+6wcVz5
bOr+YBJMLH+dkAxh40nevPYEinsuDtNT/Nk4nbq9+TfF/rHTSjvOs1GHRrea
c51af560eK0rG/eWLtSQpTijdQ3jlCMbK3caKC2m2GhyWzNpxcZrTwVnZqj8
TgWTvMjDbOwU1LjeSLHfTtunyvvYmBBlERBFsZStV0g+nY1Hu5Le6lL84sp1
F3NtNs5uYA38oNZLT4wxHdrExoDhlv79FLcUpmteVWGjiOqj8znUfr268uVl
FNn4YtvaY3MoFhOom06XZeNguuYOXapeySt7e0CKjaE7jRpsqHrqGEyUNYuw
0aAxbeEZqt4NDmKZbtMsbGkvRitKD7fgZVGCXBbORH5J1PInQThl04VHIyzk
Xb3gw6P0TPhqaLOhj4U2OnEiyZTeWn0WBl/bWCirfEdW6wIJNcIuylaNLPS3
DXDLpPwxY3SPEVLCwloBGvMo5acYp+TmpXks1JadfRnsRcKm0Pd5b7NZmOeZ
kxvjQYJ9eVtIexILDaLUfni5ksAfGnPxfsxCz/nCp7ZRfr0vNseMFsnCv7WV
ln9Ok1BiorpEK5CF2VcWug7YU/3spjtT4cfC5ket4vSTJLDDTXvtPFi47Zey
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
             "]]}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, 
         PlotRange -> {All, All}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"vel\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.61, 0.79, 0.47]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.61, 0.79, 0.47]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.61, 0.79, 0.47], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4066666666666667, 0.5266666666666667, 
                    0.31333333333333335`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.61, 0.79, 0.47]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.61, 0.79, 0.47]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.61, 0.79, 0.47], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
      DisplayFunction -> (GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ), 
      InterpretationFunction -> (RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
     "\" t:150\""},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{
  3.752319958213903*^9, 3.75231998892281*^9, 3.752320053924498*^9, {
   3.7523200867792253`*^9, 3.752320134586351*^9}, 3.7523201821620827`*^9, {
   3.7523202685587187`*^9, 3.752320292991703*^9}, {3.752320328634531*^9, 
   3.7523203566319113`*^9}, 3.752320504755625*^9, 3.752320603106841*^9, 
   3.752320732098002*^9, 3.7523207982305117`*^9, {3.752320889223524*^9, 
   3.752320912450539*^9}, 3.752321253516602*^9, 3.7523212837019176`*^9, 
   3.752321318071669*^9, 3.752321369818326*^9, 3.752321753968668*^9, 
   3.752321812479745*^9, 3.752321850509863*^9, 3.752321922480194*^9, {
   3.752322446827376*^9, 3.752322465921739*^9}, {3.752322582058992*^9, 
   3.7523225940890713`*^9}, 3.752481356385798*^9, 3.752481478577919*^9, {
   3.752488975282551*^9, 3.752488995333014*^9}, {3.752489148568166*^9, 
   3.7524891761539087`*^9}, 3.752489210518301*^9, 3.752489325289981*^9, {
   3.752490206218266*^9, 3.752490249672962*^9}, {3.752490372248768*^9, 
   3.752490386933861*^9}, 3.752490440463286*^9, 3.752491121222312*^9, 
   3.7524913752772284`*^9, 3.7524914205399847`*^9, 3.7524915805407143`*^9, 
   3.752492029530768*^9, {3.752492127668788*^9, 3.752492175300931*^9}, 
   3.752492778985752*^9, 3.752492833855753*^9, 3.752492913852371*^9, 
   3.752492943951811*^9, 3.7524930075301933`*^9, {3.7524930664592123`*^9, 
   3.752493142244748*^9}, 3.752493286339967*^9, {3.752494752555896*^9, 
   3.752494761355472*^9}, 3.752494876836205*^9, 3.752494950252049*^9, 
   3.752495077511828*^9, 3.752495591371134*^9, 3.752840972640461*^9, {
   3.753092854022542*^9, 3.753092890862644*^9}, 3.753092936323403*^9, 
   3.753093329026698*^9, 3.753093631641162*^9, {3.753093880328156*^9, 
   3.7530939101735067`*^9}, 3.753093944021249*^9, 3.753094906670826*^9, 
   3.753095093569524*^9, 3.75310031142242*^9, 3.753101138214121*^9, 
   3.753101197275313*^9, {3.753101350925694*^9, 3.753101370125792*^9}, 
   3.7531020148904963`*^9, 3.7531024507465754`*^9, 3.753175136677162*^9, 
   3.753178845455201*^9, 3.753179098125248*^9, 3.753184391476821*^9, 
   3.753184537110992*^9, 3.753186036994556*^9, 3.75318652958635*^9, 
   3.753187213913907*^9, 3.753189743944647*^9, 3.753189947551135*^9, 
   3.7534209818426657`*^9, 3.7534213992538357`*^9, 3.753422059695402*^9, 
   3.7534234872570667`*^9, 3.753423526920788*^9, 3.753770233452092*^9, 
   3.753773408703002*^9, 3.7537735597943583`*^9, 3.753773972912734*^9, 
   3.7537740551351767`*^9, 3.753774860897767*^9, 3.7537825052105913`*^9, 
   3.7537911046002417`*^9, 3.7541532663015327`*^9, 3.754291038528327*^9, 
   3.756556095976844*^9, 3.758452596560069*^9, 3.7588943735205593`*^9, 
   3.758895943681838*^9, 3.758977338156582*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{TemplateBox[{
       GraphicsBox[{{{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.32, 0.67, 0.78]], 
            LineBox[CompressedData["
1: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
             
             "]]}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 999.99}, 
         DisplayFunction :> Identity, 
         Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, 
         PlotRange -> {All, All}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"c\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.32, 0.67, 0.78]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.32, 0.67, 0.78]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.32, 0.67, 0.78], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.21333333333333335`, 0.4466666666666667, 0.52], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.32, 0.67, 0.78]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.32, 0.67, 0.78]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.32, 0.67, 0.78], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
      DisplayFunction -> (GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ), 
      InterpretationFunction -> (RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
     "\" t:0\""},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TemplateBox[{
       GraphicsBox[{{{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.32, 0.67, 0.78]], 
            LineBox[CompressedData["
1:eJwt2Xc8Vt8fAHDjGVfJSsjMLJs0rNxTMktRkchKpIWIsiIrxeUxEklmCBnJ
lnvJiOyQ7ORrJRHKit/xev3+el7v1/N67nPOvZ9zPp/PPcJXnM7ZMdDR0UXT
09Ftf+rrsWiuCzMRw4+NGdj2YGDPdd95RJCJCOBpRrc9GjKfyMXLRPyMFl3Z
dm6WzSkxLiYid8RGmgP63seuFUUOJsKqJfDrbugTU5oZKAsTkccdxsAFzYIU
nzfYwUQY3LqXwQP9db8EvTmFidiw0a7ng07XeZbnwMBEBPusWApBO11DLrtv
IgSugLmKQqs+8mAKXEOIx/2MjAegKZkzJZF/EKKjwXyXLHRng/nVpN8I8UQu
Juog9IuJFvY3cwhRdjQ3ShnagaKBV8wghN1y6i4UelNrH2/vGEIkeB24awDd
ZBfZ+H0YIW7vLLYyho4JYnBb6EeIM8N8DRbQ0vXj7cyfEUJppyujM/SfcWMf
3naE+Bhj3e8BXUtqlDrwCSEiCBGZQGjTk6+DND8ghDQmCJ5Di17lVTLC4Xjr
LzBkQM8FhI5aViKEdocp+hY66MNtNc8ihKCV10q2QL89cXChIA0h5M+O42Qu
DPhcSXtZnYQQKsyGpnugdf05T7ckIETcjfs3xaFHav5kTEYjxOVdy/Q60MzH
Ky8LBiJENn7+VwT0F2uZHTJ+CDE2YWaRBp3ql1iq4o0QRjWIdim0CuHLYXwX
IVD5049Goe3Rkx9DryJEqgh3kzI3BhStit3irRGiO2F1pyH0xgMJ0czLCJHO
49B0DTq6GnlQewEh+sz7i+KgiWOtSqsnEcLiaZY2HQ8G+NRNkuzFEWKm3Mh6
AtrWWcpISBghgo6cnabuxUBO+iZDHz9CcFuSGKSg1XZl2utxwvk1eI85QZsP
/5WVYUSIyIoFSwZeDCT4xVctjFIJK9tF9AQfBr6/u+2YPUglPsvr1dyClp4+
vs+2j0q4r090PoOuNJoJ6G6nEkLUgeRf0AMiaqdKq6nEvG3t0it+OL76wa/e
L6hEfaPIbVlBOL7VgtDDcVRC5gnriDV0jmzQsbloKoELV4zEQKvFyqZYhVKJ
3jQRbBPa/NoDhxOeVGJqUv5ZnxAcH9O+v1RTKsEfbm6VKQyvf8aWM3o3lair
83bNF8dAXEiFeQwrlWDuO8oyD831gT3t6U4qcU9CQUxRAgNsyoRiHCOVSAjI
q3kHTREROJu4SCGCpcpqavZjYH6593HmZwrRInSz5bckBhoS9bcqoynE8zG3
ygI5DJzsS9F+H0EhehcYsujkMVDDsYpVh1KIAGcTFiPoqkeZ/DUBFELgPr/u
InThHZJqgyuF6Nd663hMEa4freq7HecpBMYn6z2lhAGXn4oz47spxJb1xcPx
KhiIGjI5vsZKIdi6b9j8gX7b6hXHykwhRGs76S6oYmDhTb22KolC9PyyjGdT
w4Cz46W0iCUykXe7Wz5CHa7vX36XVXvIRMjj/vEUFAO3FtrbImLJxIVUnE5A
G8bf8u0i1b1kwuilqb79BQwwrC2zrHOSiUTHWb4Z6KRNnxuVbGTCjybq7GiM
gT5quLA6QiaavnIl3zfBgD5vXsSxvyTiQKcuX7QpBuTQuZugh0REmio7jF7G
wN8QRzHtSBJxu9UhZcAOAyH8Tk+NmEiE5NnYy2c8MGC23zPYjEwiQvw5WSeh
ZQ4G3bOlJxF9tfyyfp4Y6NBJuOS2ykhk8lzJKfLCALdro0D8NCNxh67/jdAD
DGQ0CWWMNjEStHFS0c4ADNS5d5Q4PWEkzHXH/h3EMEDfqdiH7WQk3jOV65al
YiArvVwpdIWeEN3fuu91LwZ+jub5h83QEWcjvrCKsYWD3cafrtoPbeE5/hvK
Q/rhIFPiw/Lhyn/4K/d7HWhEOJjm0NA1fL+OX3DizknsCgfXO6IfujSt4hze
Jb8Q7ghwssV1livnL17WQe1tvRIBWsd6eSiFy3jmA9aN9tcRoPBonfu9sEX8
IeeHCx+XI0CXRVjl/J0FnDQU77smSAMnjuUHXP87hw/TGMrmNGggVs1scbl4
Bv80TCSxWtGAjtPOCe73EziDXXwApycNIMFXfEdzJvDJzh4vf+jmF+U8r59P
4ITYpNI89Jnma6dU70/g6ToTY81eNHBBvK7gstIE/sXwx1EfHxqwHvD2Snn9
H140+fd5jx8NeOrMsUnHjuOuG/cVLjyigTyhTjUNpzH8jBK/ql80DawxW3Fe
tBzDM+UztQagtdZmZ50MxvA2noM7jsTQwGA38jJFegy35frwfgZ6xxNAR576
hreXHflkGEsD9kv5dZ+sv+E9Kl+usMbTgGBTuMGlc6O4/AmPV8YvaeBGCb+E
y/FRvO1VYFQmdHFa9uYThVGc7UHcoVXo0w8a8qtYRvEldptnCUk0sGS/IQpi
R3CHCfnuwWQaeKM2kNv6aBin8E+xGaXB6/8XVz11YxBX3AFatzLhfBda+KxO
DeL2amP6mlk0kPqPzqNHehDnfCUdGAwtwXVdqXZ2AGdks5Bkfk0DcjoqWQmO
A7i+46AaZzYNHHv9NfKMSz/+iJzhyJ1LA5dv89q98+jDb3E/8pzOp4GXHmdq
pcz68B+hDifFCmhgNMhfKEW1D7fwtW60hL76cuYrtv4FjwnSWemCvtleceaa
zxe8bGyEsawQ3n9Fc2Xeh7347L3fhXeLaCB+OWGnX0g3rjRMni0toQHi1VTo
GftuvHFW+/tP6Cnjw8wCJ7txgeLwQNFSGlAuaWOu2PqML2WM1GHQve70LEvu
n/EDevqqlmU0wLFiz+Zg14WPVDVMzJXTgGpWEe2IZhdumEfvJlRBAzamdOxk
4S48jqDknoUuKItnTx3sxB0TxDjzoc96tHAMnu/Eh/Nzmq9X0kDYmuIewxMd
eNE95Zq2Khp4l/3gqeC+DlxhKf7zKnRJcax0/3o7zrj8GhN7TwPG7k0ynK7t
uJNI9Mp96Ki/cvIhNm24lERNpkA1DTCvrSo5a7TgQQ5FFiY4DWxtRhwDK424
y35ZIrCGBtJrL8XalzXibzQfR6RC6wWL/gq734ibfT7HRkBH7ypN/rrSgIup
UCTWoPfzDzO6rtbjZOuB5Bu1cPwqMs2v1j7geVfoWtQ/wPjZWBZpqfiAD9uU
vTGGjidwr9+eH/A9UXrAEfq7znlZdL0Wz+TrvfcS+p6JJ61vvQa/2FIkvw6t
MUl7w7WG4+tZ5ZWv6mgAbndWtp44/nLZKLMcumu5lK1grRqvWdfTbIW2J424
6q2/x6UeaYQtQocLy6p6b1Ti8s2BNur1NNCXRfz46F2JixnbtRtAiyhcSNzz
rwKv2HL5aQldouFFl/+vHE++saniBz1s3tTwbbMUz3iizIlDH/h++b6cbyle
rTPO0AbtcmNe0murBP9oHJkyCE3x4MY46UrwXQEDcyvQcrF253Xo3+Gmv7I/
yjbQwH2BVVLMwyJc7MTAEVXo2vSwklH6IjxiavKCNrRJUdFeT4a3+FRZULIF
tE8H/WguYwGuK2zvFgItwxPH9Zc5H9/ymlWIgraKkLkdw5GHK3IbJiVA1/kY
87YL5OKxNakxb6D/LE073xLNwR2mQ/lKoCVvPWhkkszG//prG1dDh5tl3j15
KAu3Oy/+rRWa6FT79E0lEy+9fVKpB3pRt0PYF83ACwkp5UFo06OrbeX66fjz
OU2zaejQPEz8omEavnnP5d4v6GpxEe8l41T8T6yVzjK0KOcpSXmbZLyXyXFr
CzqHC9+Ka32Jm30JnSQ10gAbeSr3c98LPFvWxp8J2m2RzYxl/DnO83i2fRd0
/zcVqt6vONzSV6aDHRrtuPIuYC0WT8WFAvZAp1eH2lSTn+JuHPVTPNA73rxj
WWWLxrsu8dHzQzslDFUq8UfiwpHCLYLQWbt3dQ2eCceVW3v1hKFd5i1lztk9
wS+pq3qKQqu3FgQ3egXjhyROWYhDU7MZvqlH+eOTP5BFCejUXa/drxr54FtU
V7UD0EcbT0uffeCG32d5fEQS+hn9N9zV5CZemas/vm2/acNzUdYX8bTXpSel
oMsIv1s781H04H/tF7c9l65LYn5hiyaaRgtseyzOz4Av5Q46yM0Qu/37MyOD
cQp3PdDHZ/lrtv9vMIr/d2qaH5qrNfZyPzRHSfMzWSwQrbh0QX57fLpf7x8r
cw9B40muLmLQDzYkvp+wDkOT+jQcRLbvZ8SNugkxGhr6sIxtH/TdlOPcuXuj
UFrd6E0BaNYinht3WGJQfb8yD17o7LpfVUcYY9EPuUCVG1qrt4F14+8z1MXc
881u6NHJxCs1s/Goaqn9Z1Zorp2nkdO9iWhJ8uWjVOhCflFz9k9JqBbjdTcG
aAnufyY/RpLRpCpZ+3/b8Xag+3VBdyo6vTRh9Xs7HgvR87vb09Dl3SMOs9Dm
qjkbbk3pKF1zrNjEdjyf8j+rVp2BJp0zeNe3He/dP1cSyzJRJ5phSCd0pMWl
VLqiLPSdGj9r8/Z6cVJYrs/MRo9+5DpcAX0lavi5YWQemlD3fSwWmn4jUPp3
cj56Yn+FRxh0x9s9w3qmBeh6aXPxQ2hn/irHH9cK0aOKOQI3oQt+ITS5R0Xo
4faJXBVoP7HLplss71D35R2OMtCGl/L3dcS+Qy1cwrsFoedrjQvvZBSjJS8+
RjJAK8Smdr2rL0V1Il+11sP9ge7T8vMggzLUxdiqohi6Y0vX1qSnDP3POOP0
K2jn678W/46Xo+FPl20CoAvU1feokapQo7vnDdWg4xZmcqyFCTTjt9GJ53C/
owvjZNOzI9DvWeKhgdAOEhp3FV8T6IvADQ9HaGXzSHUGxRr01niP3nHovrqj
rWmgFo0wkysag/stT1zg3IRVHbprIOkdJ7Tfwbxz7Wl16O3eXzarcH+favlS
UjpZh5q4DBQPQZfRS/uGONWjseYFRq+gTW92skr5NqA3eQPNFKDjNAQVb7/8
iIbJDlYchvki2437WMvQRzSA5xYzN3RVLpuetEATKj5Ux7ZC0MA3Xkab6YQm
9MqzNcVyaKm/kzS7+GY08lvSl6PQVfmF8xYxLSjr9O1yCZi/nGkipvu1OlDX
GEnJTzAfrkoLDfdehU4cmU6F9m/kuxoc2IE6jQ1YekLHbHI6//ehAy0yG7I7
AF1+ixqSdqITlSEFTfvBfMugN1sqBLrQ12v4Z1GYj6PpS7h51LpRjce5CYow
3x9Zjfd0suhGDzlH9azD+qB/3meowbcbPVxYUVYPvW9UK82trhs1bJHwMoXO
q+6R+2zQg4qY1v32KIb1o9eyVrh1L7r3+xEiF9YfdH8O3SUF96GugymuXbC+
Sf/J88U8qw895X6APgpa578NlaLmPrR2x2dVI+jw7rotG9avKG/8ytu2PBrg
L7oQisd9RRfQU+X1b+B+5Hw31TOnH93blnooPYcGHGeKOuY7BlHm1Z/JorA+
2zwkVZz5exAVb+zW7M+gAcw3Od6ScwjNGhWPp0HncmJXWi4OoTkid803XtHA
jIb9UubwEGq1UHu8I50GrkXz8FjNDqMEJfLN9VQYzy+r8ycCRtFY/4fNtonw
eemI/r2QNIbWhPEWekXRwIvz53az5I+hmnW/yRLQrNYP5Rurx9Cv8/8JdETC
+uD+yDWV4TE05s3jZ6LQ77MT+gQEvqNaDLXvGiPgemLhrJh4/h3NU6DmkzAa
cO8h+dyPHUfLiHr7c7B+rrGdYHiBTaDkq08Pa8L6O5Xxac5wxwx6vL92ycAS
7jeOxzpDP82h9w/aIboAxjdfXAznpQU0VYUv9vk+mH8BlfWb+yI6L+CrWLkS
AapPLTZecV5GqZw8x/reRgArHuOzV2L+ohHDUzs27SLAuWalPdwxq2h89xaD
s2AEoOYcXfrweB1NEOQ7EPM1HFwxKEyZe/0PXTv10NgrMhyw9GRiba+20Dj7
/PJEo3Agz7pDjGuCDnhyLGyKsocDlU9du44v0QP5pO6w4C8Y+LH6NVZ7ngEc
LRsswjIxIMWQkBW6xAD4yk9/as7AgMOOyxUdKwyAW8nQBIEe5x0eMqNnBDaf
3jYGpmNgUG1MzImDEfia6PIHpGCgxWfm7bNDjKB/2iL/aQIG8ujX26buMwK3
HImw3TTYzzLxU0PpSaD6gZOSJ+wHPXaaBTwik8CDVWPdUdgv+u+K2wpgIoGc
3rkmbehods4Vb3YSkFBM3b3nPgZK9jJPOwqTANK6+KHEDQMbkhvN546TgLYg
Xz7LHdiP6g+G8z4kgSGtJBt2B9jvhr7gyqYjA/UBQ99rFzFA6WMOiCKRQXDt
sX8/YL97S8znlydCBr88LKedoZXfW3w8xUYGzuVPmL1hf9wxJ+j5U4gMgqqK
/Z6dh/30uZQhBZQMmD4bKH4/C/ttnoz0Uh8yEEiXOtqmC+d/lYs9+SEZXMMe
J1tDHywM9gkJIoMDonc8F3UwsKV3zeQSRgb2lUJ+vNBxXgeQ9Rdk8HjfYPdt
LQw0D2ff1Kgig3G9xLeSJ2D//Sr/YP0aGaTYxRT+UcMAz1DVc4YtMvhkv3wk
App+TzMDYKSAhxYKmgeguwPHuyp2UsBB1G/eXBUDnlf3uhbwU0CTd2xykzIG
GkUDihI0KODl+Qr76sMYsE41OeTiTwH6LmcoLAqw/++3fZEfTAEmu9sel8pj
QInjDunnEwqINjGOtYGm+Id2X4umgJygcv1SOQzk2hB3LdIpcBxPRK7LYmBl
n1SxbgMFHG14mDAhhYHIpH+HhXZQwRs6bm49CQxodz5COFmo4EvHPjcEeo2B
YwDhoIIFddLpj+IYuGIv4fd7LxW4n/a7qgd9UPZsc70kFfhU2B43EoPzq0i2
vKVHBd3O+kX3RODznpVStDGgAptZvzQNaHXBYkYTIyrYkyW5iwKd/rApC71E
BbvMlk/HCmPATff3b47rVDBbct23ah8GuHo1H5WHUEFkikSpkBC8/9S2S3lh
VOCx4HdiThADD1RMZdJoVHAzvEvnPfTki1udYXFUUKXjSVyGLrN9ymedRQWt
6W9upAhg4NLCRD7lIxVUX1/MOs6PARbRO/7rn6igQ1DhCzd07YX1C/PtVOD1
tsd3jg+utzLWta9fqCD+oBtIhF57oHzyzSQVTAUU+9JBv2B+0neeigCzi17r
Q3sxECFwyL16JwKSEwXGSqH95YZ3S7Ih4PhX3CYK+prhwbObPAgokBOW0YM+
GNNfnyWFgOoKvrn3PBgQfxVou1seAbLj/okvoHlK5OgfKCHAemnfhBf0vy/+
6ufVEcDKxKepDv2RT7ronwEC/ikXytRxY6BSpsfQ4RwCriV5ZmRC5x3znesy
QYCBbXZ56Pb7TKvPkllWCDj86FyuMbRlmlfyuTsIsDMy/jDPhQHDd+Ia790Q
kB08hnyF1qxvH9jviYBKns3JGugDk6Lc//wRsJf/t8tT6EWpFiwzBgGCcZpV
mtATau7SHPEImPauaFOA7ju9r8k7EQFyeqOegtDVjndJ5zIQMJOpnby+BwMF
voKpVdkIuPsX2/sDOo32Ed2fj4CGrEiZAeiQt/xeG6UICLDtF3oP7fWhgeda
FQIm1cTp8qEdu51LOgkEkDiVPVOgz/+pW8hoQsDqXkItBFqb6hTB3oaAkgOq
Ad7Qyjx7Zb27ELC8EnT1DrSg6m0HowEEBJkmLF2GZj/FTakaQcD7foe089Ck
yzVpEuMI0CKxzepvvx+/dfN45BQClAOj2k5AT/vsGVmfRcD8jwV9NejBcNzb
fgEBO/PlbQ5BtyVd5+1cRsBtUQN2Oeiagt1lamsIOPbwlPn2+/53Ne+NMzYR
MD4mjW6fB2R2XVtkY2QCnFq/qgShn39nj/SiMoGa4NhuXuiwpUq5iZ1MQPy6
SDA3tC/ZvsWQDX4fEd3JCe3CxXajkpMJXPKbKdk+v7i6v4IqsZcJrKXuP8IO
fVH56iuaABNYOn7q7PZ5x//PR8DI/89H/gcZ/O5V
             "]]}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 930.}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, 
         PlotRange -> {All, All}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"c\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.32, 0.67, 0.78]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.32, 0.67, 0.78]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.32, 0.67, 0.78], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.21333333333333335`, 0.4466666666666667, 0.52], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.32, 0.67, 0.78]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.32, 0.67, 0.78]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.32, 0.67, 0.78], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
      DisplayFunction -> (GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ), 
      InterpretationFunction -> (RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
     "\" t:30\""},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TemplateBox[{
       GraphicsBox[{{{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.32, 0.67, 0.78]], 
            LineBox[CompressedData["
1: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
lP8/bwGH/z9v+T+cZgON
             "]]}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 700.}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, 
         PlotRange -> {All, All}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"c\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.32, 0.67, 0.78]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.32, 0.67, 0.78]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.32, 0.67, 0.78], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.21333333333333335`, 0.4466666666666667, 0.52], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.32, 0.67, 0.78]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.32, 0.67, 0.78]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.32, 0.67, 0.78], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
      DisplayFunction -> (GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ), 
      InterpretationFunction -> (RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
     "\" t:60\""},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TemplateBox[{
       GraphicsBox[{{{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.32, 0.67, 0.78]], 
            LineBox[CompressedData["
1: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
hTQGJoaOucKNLP7cX76rKIXTQvOWpStw3FOZe6K1it5ZyZ11nHKFJ51RXtbN
K2igx8uPb9fdwPgSwr+CraDLjTZJ8dzuoNM5nuFRuoL+J+1MiBV3B8lO1ffB
jBW06MPydLeOO/zsmOJi+K2gXCp9267EuMPdjguJg6orqJDaiWs+Jz3AqJ3l
nUb5Mtr3vu9rrponaOnn67QULKORpB+skXqecLL95ufLWcvoHnq5r4+xJwi0
F2zciV1G1bRkm4OontDVZqrhZL+MUj0qe48neIJeW8XH18eX0ZBHJqmji56g
0Wrzb2fOEjrJGTiqXuoFycYHs+TSl9CS4MuSS3VesPzz00OthCXU5t+JtJIO
L8jdOPvVLmgJ7dA67XpzzAsEjzJ19TxdQqOHCOundnnDaETwu0iZJRRhOW6o
5+QNAdczvbnyFtHgJ8RYVW0f+P7DCJGkL6LzTJarkVd9QJlGWj+XvIjGhgXy
zt7zgemAp3aU0EV0xm4mZMDVB26Uy5u3UhdRcbMRHoNCH5DaV633/Ogi6jxD
6BoW94W27592sxcsoArpWWdGOf1ANFZ/2ObVArrV7/zowj4/sNVrTP+WsoBa
IlKOtbJ+IFxaLFcVuoDGP+XyG9X3A4uQaA1b8gJK7JheIEb6AfsZQ9r3Qwto
01h+YdXeZ4CEtDVVJ8+j7f67UNNz/hCpphkiEzOPHv++dWD/JX8YXao0jA+Z
R52FRIxmzfwh1Cz3i53rPPrQgXitJ8Afhk4HzcncnEe/RrrdDej1B8fvOvsT
BOfR+lPVJlXWAVBwut7eIXgOjX7UFVxVGQjnjftu7fCdQ81bb8y8/hgI3x3H
Id1lDr3TUbazcDQQBMp5tndYzKG9lkjPGs9zsFc2SZHUnUPlJ64/Dnj0HBRV
F5t62ebQ8Sse7LGCQVB7/vAeBY9ZlCj6k/DFJxi6TIIrpq1m0IEdr0RX0sKg
93lmyy6LGbRBWuVLckUY9L+rHlQxm0Ef3HnjatwTBl95Z9aCDWfQe3dy3rGw
hMO/hmvKR07MoMb53QpSJ8OBXW5/1b35aVRkZOyIUUI4KG4WVHfZT6O/2v6U
yFhGgNq5fJ8nS5PoGJdTa4pCFMQo3ZxbKB5H53N2/WQJfgnalttHd1WNoqSy
GywvBBIhb/9HJRXL72j38uIVUnwqiPyKrf5tMYRmJ6w/3UdIh7szrXtNLwyh
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
bQ==
             "]]}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 200.}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, 
         PlotRange -> {All, All}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"c\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.32, 0.67, 0.78]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.32, 0.67, 0.78]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.32, 0.67, 0.78], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.21333333333333335`, 0.4466666666666667, 0.52], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.32, 0.67, 0.78]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.32, 0.67, 0.78]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.32, 0.67, 0.78], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
      DisplayFunction -> (GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ), 
      InterpretationFunction -> (RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
     "\" t:90\""},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TemplateBox[{
       GraphicsBox[{{{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.32, 0.67, 0.78]], 
            LineBox[CompressedData["
1:eJwt2nc4V1/8AHD78xEVstJOoZSKhqjPedsrI7Ire29F2Vt2GYnMjLJ9bCH3
JpGyElJKwtfK3tvv83t+v3/ufV7PPc85577P+5znvp/nnjB2UDejoaKiyqBc
/veuqLBPavMEI6645XbHxIAEHFY+c8SjjDjTStasBcWDIXMpnDyM+CH3ENyF
4oIcI6VTnIx4uLh4cwTFjz51rV1iY8Tp5YZpCymWHJd6jfYx4ndpK117Kd5H
rNBQ3sOISwuvHWM0JMEPfj5qfQZG/Mj89q40xVlyL4osaRjxv2/PcoVR7GBB
vOu6Q8R5TefN+igWe+LGGLhBxEX5uqcuGJGA4c1kZfQKEXeINy14RvHXJn3T
tAUiblUglb1BcfJoK2vhDBGPaTjRZ2dMAksGElYzScTzX9TLTFK8I3Ocp3eI
8tzNt3vHhAQtZtHNwwNEXIjReTXelARxQTQu8z+J+DWjWh1RMxIIfhzpYP5G
xG8dTPgZb06ClRFNL54OIr5p/WBbw4IEDXTNZwW+EPHDdldNeCxJoCOdGyT1
gTK/h4VbDVYk4DXlEbmNEXEqvtMi2dYkmAkIH7xfS8TvjTKVPrMhQdAHO3H3
MiJOeKDzNMCOBKWSwvPkTEr7j+SVPicSeBlnptanEfFiq9+p9A9IIO/Pfqs1
iYjvkVdMEX9Igj/vV16PxRLxtf6A7A+uJGCWqL17NJCIm+/5d0zakwTfDc/t
OedLxB/PiFfVepEgwzel6ronEdc+0Fd5w4cE13EfNs2HRJzJfe+6nj8JzJH0
p3BTIp5QmfqNGEqCSwYVLomGRLy3bO/qlzASbHnz8b65S8Q/rCUkJESQILae
6N1wh4in1B80VnlGAvxmm8i6NBHf/t5jfi6BBIduaKWZn6a875jcuYpcEpg4
nr197AQR1ygrJMoUkCA/a4em7zARf1vDqDpYRALxvW/MFdiJeFvi+Pnr5STQ
H1g9f46WiK/XsLY8xEiQ5JtYNz9IwLOvSVlw95FguNzOPu8XAQ/tjHIz6qes
14TEcZM+At5TfVu9coAEtbcnA7o7CDh9bKRTwH8k6D8prlRVT8CbTgufKlik
zO/jrx+eyQT83O1bMTfZEJisk8OvJBBwYX9mdVlOBPnng27OxBJwvgOKt/R5
EIjHn39lEE7AzXgiWPJOItC38LaUdCfg9wvJWL8IgiTG46sEHQL+K3FI5oUO
gkMqJuyxBwj4oVfZYeR8BAkhNfpx+wm4dYoA/wIZAecH1sznTAS8jPXNI1SJ
gEUUv5RAS8Az8m/rbuMIGE4eUU1ZZMCfBjCcJnxHMLfcG/rmGwP+UZgxp5AG
wP6i0NecDorFPqsX0QP8sw7izvvCgPuVfjhdQQQY/SPypuADA65NMNft2QfQ
3/KssaSMAV+h3owwPATQlKK4WxvLgJfGLS+/vgIg3fdK9t1TBpzuPF7CfB3g
Pdt6ZH04A57lNT3z+AZA3ZM3h98HMOAiiYr0ZlIAJU50Yk0PGPCh4udKEbcB
kmXqH3ZqMODlk/4lhx0AnKcvTY4cYMCVmVjWnYsBYn5rSWzsZ8B5ZtGvtDKA
0jaPhP3MDPiuyOu2b1UA84UfZcXoGPCOEutVNRzA0V438+kSPc4R/uPCq68A
DrO+d8V66PFd7qzstGUA2/mO9qfx9PhnPmK3opQERPxdOp0dQ48HcUjwW8pL
QMHXg141UfR4l/pkQKSyBPwrMRH8L5gen0729ZzTlgBr59UnYo/o8SuzPsbc
dhJgtXhU4j9tynj09rOrCRJgvmxXJnaQHpeMvBwquioBNBvL+zbZ6fGYT/LN
s9sSkLbjZV3LQo/T6f/4r4ROEvoIUSduEOnxdxN/NrTYJEGRp+jpzVU6/NFq
GgOfkCQIoRkb6KHDZYoaaEYsJGE1xP6UbDQdztV79aHciCTERa74METS4Sst
bUOuU5JwMca7vymEDq+JTTxQtiQJ1klRMXK+dPg7w/c7t+ml4FdhEZWCAx2+
A/96BPmlAO+a+aWkTIfXsYxU3beTgpDDDs9vM9LhYc5/KoBOGvT43YP16Onw
lxqV7H57peGccNAjE2o6vP5JYHQ7pzR0yiXpuqzT4sa93vzRZ6SB60HzkcQJ
WtzgTFpSpao0vG459nqwhRZ30V4oiE6VhkbXzkqHMFp8f9KBfQxyMhDv1//m
cTAtXqDqLcmsLgOWEaMJfv60+JSb+s8T92SAOWPLPdadFr8/fCzQ44EMaLQJ
oCprWjzk0sGVyXQZGOL1a95RpMXvaUyYtO7IAPXXS32RTLT4p7FUdLFZFtTm
0tokCLS4ULlovFmPLKTu3/dhmYYWH3rTdoU8LAs3VCYL723Q4MMXqD4HUcmB
65eMgPMTNPi+iYo3V8TlYPLjgQttTRSfZhn+UC4H3TXLQcz+NHhimvNx/7fy
cPKniQfuRYNfNBu1SfssD07rXx0futHgt37cEO7tl4d9okX6vxxp8PWDhMZn
O/KgUGF+qcCABudIpuEmyShAffH3X0o3afAOgd+8Sd8VICfrrUj4GjU+LH/P
4zGrEiS6LYtqLFHjxN2/bCWnlSBM5RLp0Bw1vn8+8yRBTAls13Lk88eocevA
R5rMJkpw8VbCvS+91HiZbzfuU6kEbxddnzBVUOMmor9vXTK5BZ8lL/eHO1Hj
BoeLtWh6lKGWy3FQw44aj7lvmyQxrQwFU/n/HbKixkOlty9m0atAVDzvXL4h
NW7ctHC4+6oKaEyy0beqUvpL+l048lIFfkXPCzELUeObi6esVq1UYXqwyD9i
kgqPZ8JoK2LUgL3O7kjKKBXuIJY0LpWuBmIvzlUXDlHhx1XEb/xXqAbBynnT
7T+p8CeJi3EGLWpwvCZbh/ULFZ5oc6/vCvVtuBObLBSfT4Vnb13w9Xl4G2pl
wn6m2VLhNwNqB2Ws1WHouIIL2ZIK37lNa6Tlrg7ELQLLe1MqvFm2471nmDrc
KQ2SGbpLhdsblacw5avDzFE/8illKrwp+x7HlWl1OLn2KDj3PBVe5TIv3+Wi
AQc0v5ia/97FbmX7nD2YeAf0Lu/P/N29i6nF8g5jhXcg/YDG3zutuxh6NXU+
qOEOnOv6eU+qdhebTW27ZDt1B2RVJ7WOJ+5iP3BrxhIJTXiswKjw884udlpH
+iVa0ITfN+XOq7TuYNfbuktabbXh1JFwm48fdjCvbNOLWUHaYL3Vnnujdgdz
pDvxND1VG1ZqtPgE83Ywnm9tX4hftSnnvfkxYsgOlpHkb5NyTQckhYNYG6R2
sIG9tcWMzLrwhu/D8pXabcxljozivumBDtteA1LZNiZG7STpOasHe3a0Psnm
b2MOdxiZw5n0wbZn8qV20jYWf3Wz/Yi0PlwMZAM3j21MryaX92iVPlT/NQqr
E6e0t3ePrM26C5+SqY5J1W1hodt/IhjS74NbiGKIUvkWZqU+lH7t/X04+zBu
XqNgC5vVK1uMH7oPEUoCjabJW9jQkRb9v6cNQG1D1SrYcwtzOhLysKDIAPq0
08pabmxhe76IeOabGsIEG0le7d0mFpgQFeoSYwR/rHi/+lZsYpPej7S+ZhtB
D07UKyncxA4eM86We2sE7+2/2bClbmKPseK7gYNGkPjZ8mm39yZW2/BKWvKi
MSj4x/bqwCa2asYtOd9tDLnz46ZGHzYwvflPOpcum0KafPt0dO0Gpj9V1yig
ZArP08pcG8o2sNetvyuQsSn4KXuH8GZtYP1fOL+3PjMF3dwDBf8FbmDmd3/P
WM6aAqMRadFKdgO7vlrJ1FlqBladsX7OLevYXvHkyUwNC9BRQwfW8XUsX3PJ
T9TJAuQ7J7N8qtcxThp50nqUBfB1SnyKeLOO5Qw4XqT6YgEjHbP73gStY/+l
p+gJyliCYYdScr/EOiak8O2AiKQVaLXTVknXrGGjQ+NXqYxsQFalWP5LyRp2
NKX7SkagDVxp1/t5O3cN0wo488gtxwbY20u27yesYeGyVDQtczbQ1WYg7ea6
hplv8hxcDrAF5bbar4XCa5jKCZW/LeV2IN36YIozfxXLia4RND7hCKk6p3OF
MlcxLnLWoOUVR1gb6TWTTVrF5INLnoQrOELB9vU/LuGrWLFajvxpZ0fguEDV
1W2zirE/nBovanSE0eiIqphzqxijSP6/mw5OEKKd7b+vaAW7ktTb5tjvDEPD
Wojv9QrG53c3VWbRGW44Erdupq5gj0UNisSZHsBciI2LXdQKVsHRLBMh/gB0
ay5ZttqvYNYqBPvGlAdw9ki9ctiFFWzkwivVGsuH0DbUy81QsoyleAWucvK4
wvEElYEHOcvYU27h6z2irvBQuSnzb9oyBtM94++1XeFwdYXQu6hl7ObCn9f8
8a5gHRkn/dB2GfuoMiF9juMRMIiqOw7xL2NLK13uOocfA4psa65PXcKOKaW8
l77tDjGSMpHn4pcwFebL2/dc3WF0tU79ZeQSNpJlRV+c5A5RxgW/XTyXMCnv
kPfro+7w61r44jm9JSxgARsT8/WAx0Pyx5I4lrCT5DzJineeUHKt0fVRxCIm
FakUOmHuA4o63/X3Bi5iJ/s0SjtifGDo8SRkeixieVHCAiv1PsBew8LUYb2I
ZWdtF9Ew+4LrjXtpfAqL2O+C0wZJ5r4gJrHS3EO/iPH8K3nKc9IPGhQFDl72
WcAiQ46FxJf5g56N+E6L6wLWFjFXPNbmD4vhKsMG9gtY4C+R/vvj/nCq7WFh
+L0FzMO+nho/EgDBqu8lhsUXsFGugm31sABQvKNnHbM2jxluDhWNWQdC172I
2jmneSxVI3ZCSCkYesKyv3BZz2OVWqxX/S2Doa+qvp9kPI91jdZxbAUFwx/W
+c0I9XksdEDpqun7YJj6qHnjjMg8livRG71H7AkwCB17Z7Q0h70t3HulWzgE
xHZK6rtc57B87YuHvaXC4Kbgl/Z1+zksp/C0+ZJZGIDOyMBxizlMX/+4dXxI
GMiVcu7aa89h8djCzfvtYXDH3AMxic5hAgKl+tR3w6E/OdT3ycIstiMlHVjp
EwGSN4sDrFZnsGs3CfoDE1EgPmFXYTI6gzWO6at4cTyFy8/Pjd3rmcG6mac3
7kg8Bf7pXEX1shnsn7oUT3HiU2BOyWIVd5jBeGSbpEP5nsH3rcQ05rFprLWy
d0P3zzOwrQusLe6dwlqlb2jxWMRAvLje4nLFJObz8xztROdzMKM67cH2ehKT
MpqWujL1HC5/nKW5ED+J7XwsD08ixMNXlSA2S9dJjHArllhJigdmY/Kln1cn
Mep2p8ATRfHgH8LgWF81gWlpBl5ojn4B9j2lU8Fvx7ELqRXS320SQc6BaZTr
3SjWeJP4IdYsBYqOfRUnOQxhdWof4ypdMuHofwn149a/sPza4HhfmRwwnG89
ZKD0C7O7rrA4qJUDGdtUbj2CvzBbG56v1y1zgI/TSqRhqh+zD4wJ6A7LASG5
6zlJ9v2YO13rWm5HDtzM/RGt4vwT60wv/F2pnQt37XjMyt36MBaJd4+tDPMg
1U2l4axeH9ZSX2LzwjEPBoP8j70S68NMjuqnv/XNA9PUyR+Rm9+xB8MDij/T
88Cmo0bFwus7Jijizh06mAful/RFefx6sbki7oe+9/IhcTmJyTekG3t+IFp7
41YB4Nnj4Srm3dgBkWnxvLsFMK55hfmIdDfWQnheK2dbAKKV7cw1u9+wm6rH
VxXDC6DXlXrfkus3rPNpvbb9pwJgWzNnsTTrwloD7x9lRIUQsXGJQ02yE/Pi
M7VLOlwE5Xnez48e78Q4ez4dqzlTBJUV8YI/NzuwF5P2JxuuFoGma8s59gcd
mP++vpRItSKIWRW6EGLUjjVHXjq4P6AImDfWRRxJrZhq9f4LGcNFsLvz9Cas
NWOpqUGCMjHFkNWgG29e3Yzpj6+cKEgqBoVg3tmIx83Y7zu6mltZxRC7tyr9
x1oTZqarx6dTVQz8hwdoH6x/xLSxbJPNn8Wgev3c5+yNDxhdjyFpbh8ZlraW
T7bWfMD+LIhoTbCRIRHHPBbcP2CxG/LevZxkGJbTOI82G7Av4/R/Io6S4ZGW
+7O+zfdYUkI/g9V5MpDGnhVybmDY48JO4z55MlDKEQMTdwxbGXo+te8WGbqW
q1jIG/WUfLrKel2VDOZ0fx4obL7D0n8IsFpqkiHqxHkxz61azP/VnRsXjcjQ
l4P/++RZi33xxqdoTMlw8uKdFI7tGizR8D+GFnMyVJI8qIq332K3k8uNLtiS
YUC/penvThUmEhXLbepKBoHhu4+FfKqw55U3vL4+JoOz9dwZj91K7Onz9ePC
HmRgcOOKZKeqxJZXbrG1+ZBBKN5MQ466HPNscOSxCiHD4yPrdHF+ZVhBGuey
QxgZGrIiKgepyzDd3beTVhFk0CorO+hOU4pt8oxwXntGBq9O6sECWjKWdH6H
cPUFGc5xJ3CuMhdjNt1mcm0JZDB4es4ujq0Iy1Ifp9d5SYZGL02ejiMFmLXo
lSW5FDKsLE042vLmY/ProkcLU8lwxta7mfFMHnZI7XMtfTolPnpvHkpfzsGE
DnPLRWeQAf8q/uXv9TdY+otvFxozybAo33nCB73GOmp4/CezyKBzbb39rWIW
pmKup8f6hgzhRZGntdUyMb7j3L9Yc8hQf/qk55JmBhb97189fS4ZeNmVzlww
SseecTqlN+eRIZ8T201oS8X4oCjpeT4ZWOjHC771JWM/2A/OaxWQwWWRRW/f
yEvsePqVNKZCMvz8e52gMJuAsbanZ5VRjDqNywM24rFEOxYq1SIyZNWHG9XT
P8cihDXIvyneU1i+b50lFouqUis3KCaDQ9LvWpHD0VivDyNTD8U5B/Z2/VKJ
wj6uxZfdJFPWb+7+OXWzMEzbQ7AwkeIbbeTgZo9gzE6ZbXWcYkIezd8bMf7Y
bEbxM8ESMmTszXU1ve2FNaT6uhlRfK35lqCqtwuWonGoJIziF9R/sQdaNlhZ
o9C1NxT7TqipxxhqY5dG/ZmqKK7GfW2ZihHKwzfO11A8kyVPx5xsgh5fjUsl
UzyU4Kt86JUTysrUv/eSYpU/vxIuPnRDxuWe1o8o/hVzeCEj0xe1MNxokqOY
rfLzi/ORgcjt7KojE8XyPx7frHYNQXvTT9k0UObvvcU3LGkYgcz7NCpsKf75
1Lpx9NQz9FXkvNoeih++kuAqOBiDqKidbyRR4rO/jNvaaV8c+uux5X6M4rzG
2bqrtPFIohVjfkGJr0xv0/6t1RdIje7TAjXFg2Mpxu+nEtHmUTEhQ8r6cDLd
It7qTUG2lrZ5K5T1LTnMq8/6JQ1FEhanhSjm49rW+vcnHUWbOUboUfIBF+jO
JXdnIPWf04PhlPyJKkEaBzoy0Yyax8toSn7pi+VvubRkIXfgqQx7TclnJX9V
8frXyM+2+pA2JR8bu6fXUqrfIIEUJuuzlHyNvqebQVWWg44IcPPOv6LsF4eL
yx/f5KH8Bo4/OmlkMI4ZeKkWXYTUQ7k+RSeSgXorUHAhvRgZ8/scHKDsr85S
jgEFHTKq4V2vOBRPBsfDdfb/LEpQzlu/QesYMpBnic+EnpQh/vZvLrqU/et7
6q7O7r5yZDwylXCRsr/VdIuPd8aXozOvNQXXg8gw16BZ4vS6Au1+w0vv+5Hh
YnxGV/nHKhTCzDzi8YgMVF+WXwYpV6N9ph+4/zykjL8rb6LVU42CaiImRJwp
41vNLq6OvEX7Za88LqWcR+QbNzjE6eoQ7cytXVrKeZYwP5lveAJHNtnQtiNL
6S+CnUXBDEdV14IWvKXIYMlHengpF0fj9RZ884gMovrRN2guvUd/+wT680Up
52HjtbZMaEBcazkWHmfIwJ0QODNq0Ii8q07PhhEp7ydcpN6R2Yjm6DV5L9KR
Ybz1e2XVWCMyHn+x8HS3GKqpBX1CHD6iiaMOFmnTxaBj83X/WZ8mZP52hM3v
UzEkkI5eskv9hJ6emSkwdiuGPBeum62/P6FNvTSudw7FUFfAoiB4pAXFtkQ4
UJsXw18eWqOJpBa0t9H0qrx6MZxdHXtmlvgZXUpbuNN5htK+uGTuXlwraveV
ZPndXQSOz07q8Mt0Iom2n3oBh4pgXfDYQK9pJ9J8tXFIZn8R+DcfMg0O7ETS
JKOERZoiiNthd/zvQydye9rMzzVZCG9tCSGZkl9RiS6XjUdVIdAoTFUdgy6k
87VUs0OlEGKpK7m4xbuRa0oou4ljAVxdT3R3uNeNBgWaed8aFsDPOa/fTT7d
6O+FnKQttQI4PiiT6dLYjd7w7bl361IBFNX3CH1T7kHP2Fi0Dsznw2ePZZko
w14kyTl03sguH6hWLj+kC+5DL3/IinHo5YH9ZFnnXOcvNIxd1efamwNn5XhX
76QNoT/DjRqRpEx4bzJKkxw5ikYCUoImP6UAHA3dm5s6iubo+F6dzU4BvE+Q
u7J4FNkmrv/x9aNY2el859dRtAQzqY5iKVB/bUubjnMMiWKdg8aFyVDDxFZo
mzqGxp9witS/SILSspvaN4vHUaxfa06oTyII2w8aKeLjaDOt9eXE/UQoEQiw
1f46jqocNHjMSIlATvnk57Q4jnhawlHxdgIUPdEoyL42gXgT7lrFeiVAnr4V
9T58AslunT9Q5v8CMmif5w90TqJbcWoNExnP4Va2oGHL4CTqH2oI/f7kOazI
NrCXz00ipk2pqD+2z0ExbNYrlOUf6sDqbUjXnsMCi6LaZbV/yJLV+axoWxxI
Hd1dCu34h7L22lQc24mFEVEr0pX2KfTxbO9484MYiPq5u3BsYAoFLU020NyN
AVHP+Dd7ZqbQydvPh7WlYyAC+8AyuHcaVXuO/lbjiIHLskeHw5SnUQvLlTHP
6mgI0vj2ZLB1GrFI1JVV0EYDn/3Nr+FfZtAyn9ueWr2nIHs9RZavfwbFnxih
thF+Svn+2K7FJ2dQ5fx/5Yp7nsKbl3WvlxlnkVQDbU9CTRQINIt7GsjPorS1
siTbI1Fw5rgYv8jHWVT9eZfY+y8COK2SSHYGc6i8WeFFfV4YvFZRchOzmEPt
d11un6bUF1cvb5YRHObQjH2aVRWl/tDa1TuT4T2H+lcec987EQbxz3nYv6fM
IfnCAP68l6HA1ZA4Ab/mkPr+O5oCz0OA+1BCHLvuPJL18OxMzAmGou9+TeFG
88i38+2t1JBgkImzWaOxnkcKmRLDHZT6yXkvujvvPo+iTLsj3p4Jhrbd/3jb
k+fRphfO+qowCPxHRMqeDM4j5zuTCzHvAmG6sOPrhsUC0tr/fjRuyx8Crd/S
OjsuIBPBUy7f//oDD3/mlYnHC+j1WEAWNPuDfLpr4vfQBWSY//hIcIw/ZMQc
MSrPX0CCj87T9J31B51HNnN2swuI8DNV19aYUk8CYf9f10XUl9rfxNjnAzNz
kxzN3ouIP91E4GGRD/C8aj9cGLyIFM1bTbmCfMCZOv6sW/wisqtSVCCI+MDJ
hlOyrJWL6I22eltgtDf4SUl6SSwvohkRdsZqHS8AWa9/rx4soeBX49Vc+zzA
dsVw4YnHEgqrqqtj/+cOCa+l1+0CllAi7eSmxCd3mGNgJojFLqEMpzuC5wLc
Ib355cmu0iUkNErSFt10g135al2ahSWkfTqNY33xMdQrLTYbOy6jLeESoYcM
j2Cui6Vp4fEykvb6Gxc66gq8ekKN/n7LKFLFuru9yRVCLK3wjJhlRGca9XHs
iSuoB/2pHipfRs8kp9qVmF1htP5LrvH6MnLnncxOP+IC+4Szwo39V9AKy6pE
ieEDgLfvQxfCVtCagiQzyD6AB/DniX/sCjp6tilqRfAB9KnwBGZkraCQFZOO
H6vOkGHzzHOoaQX1f6nucY52hqvZnnbGTKvoBOur2rovTmDAralqHLeKLLPy
PIX0HYEv1vakUfIq4jHa//mtrCPM7A1cNshaRaknHrYaCTuCN21Z0r3yVXQ/
hlmVsMcRUmdYxnW6V9G5LfEBORcH+NXY6qvKvobKBY500Ujag46TdOmNuDVk
cqJtJILGFo5P6QeJJ6+hI5lSTjcGbWDc/IGOWNYayo2bP3y43gYe3c3YuVa+
htbEKxqs3W0gXo5KSaR7DU3dzZu/uWwNPUfqhs+wr6OonAw9/0UrUP8swsEV
t4665H4ltbBYQs+P4k/TSevIpbXM+dmSBehMCHo2Zq6jWC22Pd59FnCPeGrY
qWwdeXa1ZramW4ClLHtJa9c6GnQ/W3FJxAJ8GpZu+bNuIHJYTuv0fXMoqKkI
nI7aQO3y0oc7O03hwudLoo3xG0hrdFmD+a0plP4o/PcydQMpNKoesXplCtVr
2eryRRtI4FIwOcDZFD5cjT+e2baB/vtgsXqN0xR+lrrW6TBvou3NJx9cTUyA
kH9t6UPoJnp5vcOSn90YnkVPp0rHbCKfob1czjtGwPM4U+Hjy00UNMq98mvc
CM7J7E9ryt9EZUayQWz1RqD+Z1ShpW0TDY19KVq1MoLUA/Fp7axbSHlIW9Wv
2RAuey4p/kjcQm+GV0ZLLhpAvXHesm7GFuoffR6ZwWwAcgqG6T/ztpBm3+mQ
T+P3QY+zdbm/dgs1HNS/XvbqPviSM9MHfm+h2391xzc47sOXEfWV4RPbKKo2
8c9+4j0wVi55NZO7jZh4tv4qsuiDH7/RiYGSbVTUYLl2e0kP0qlZX7W93Uak
HaNnPn168LvCMb2gZRvp9y/aKb/SA52jF9OsJ7ZRTjJhf9FlPVCeLUoeFdhB
/FccdTWNdUE0uuDFwJsd1OMWaTbwXRu0be5ytRfvIInQqVl1XBtcZZhfvKva
QRHyam1jOdpQtm4Tn9y8g5Kyz7Q5uWuDkLHgc70xSn8q52hpjmkDr0heTC/f
Lrrgv3x62k4L9vW8iWzP3kWtWZwpLSc0QSQ4ms6yaBfFjQu4qDBrUuojDw/q
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
/4NC3ub//Q/6P2VmLhQ=
             "]]}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, 
         PlotRange -> {All, All}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"c\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.32, 0.67, 0.78]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.32, 0.67, 0.78]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.32, 0.67, 0.78], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.21333333333333335`, 0.4466666666666667, 0.52], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.32, 0.67, 0.78]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.32, 0.67, 0.78]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.32, 0.67, 0.78], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
      DisplayFunction -> (GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ), 
      InterpretationFunction -> (RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
     "\" t:120\""},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TemplateBox[{
       GraphicsBox[{{{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.32, 0.67, 0.78]], 
            LineBox[CompressedData["
1:eJwt2nk4Fd//AHDXdq+S7FRa77WLkD6yzbvImiUia5YkZM2SJfsSWYoQWbOH
uCKEzKSIskchVEKy7/vyu7/n+f4z87yec+bMnPN+nzNznmdOWznr3qamoqIq
oBz+/6yuxqS4fZoBy5oNSxD+TgQOu4AFwgkGTJNP7Np5in9FLKRzHmXAAlRj
wrUoLim01CBxMmDake3nfSi+39KzIc7KgN3RkDWtpvjypGI+wsSA5Z2EXbp+
IjAR3uhpHmDAqJpvcdtQPMDPhzOhZ8DSRa+Wfqc4V+VZqS01Aybq+w41HiCC
8x2CqeceAfOjeq45T7HMQ2+G0C0Cdll11DBxkAj0BVNVcWsETJjtzejVH0To
bjaxzlwiYKdNtGc4hoiQNtHG8mqOgLXrM95foNiWXgGtnSJghvdvhw4NE2Hv
yqmj30YJ2Fl1u7P/fhKh9Xbcpz8jBExMOqON4TcREsKoPRYHCVhqe8iq7CgR
hJvGOhm/Uu5f2zjTO0aEtTF9v6OdBEy1PRmVnSBCI+0nIYEvBEyDcIS38i8R
DJVehil+IGBKAeavB6aIQLQ+KnkNJWDzYYk/w2eIMBcS9etmHQEbva5fdGWO
CGEfHGV9KghY42AWaWORCK8vSyyScwjYLSVjgvgWEfyscjIaMgmYGsPUg7s7
RFANZr/alkrALjaaF1XvEeHn+7X8v08JmKbSdQijIQHjpTrTE6EELIMs0rl6
iATfLUQOiAQSMCm+/KAGZhJkB6ZXX3xAwDjHlZlT2EhwEQtg1XcnYOPMP/pC
jpDABlFqibImYJmqpxLO8ZFA3PyNR4oFATPYaq+JECTBjj8fscCUgHlShY4t
iZDgaQPBv/E6ATtf3Wq7K0kCTL5dclOJMj6SQ93Tl0lwTM4g04aXgLFeDFmT
tCbBLRehaydPEzD20wMrzHYkKM7do+7nIWDDqxa5NE4kkD1UYKPGTsDqBjoQ
IS8SmIysnxWhIWBMH2Vi/GJIkBqYUr/4C49pzYnKK9eT4E+lo1PREB4TZhy3
D2kkgfC/S6du9eMxAS0equ8tJKi7NhXS24nH+LHuhPd9JPhxRlajugGPJc+3
/8hboDxf09DAgzQ8JsjrwFMtxAu3NslRUsl47MPyEUlLCV4oPhsmP/cUjx0z
DUs8I8MLsklnX5hH4TG2jNN+02q8YHLH3/ayDx5zSBzMeGbPC6kMp9bxhnhM
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
             
             "]]}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, 
         PlotRange -> {All, All}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"c\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.32, 0.67, 0.78]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.32, 0.67, 0.78]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.32, 0.67, 0.78], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.21333333333333335`, 0.4466666666666667, 0.52], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.32, 0.67, 0.78]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.32, 0.67, 0.78]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.32, 0.67, 0.78], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
      DisplayFunction -> (GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ), 
      InterpretationFunction -> (RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
     "\" t:150\""},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{
  3.752319958213903*^9, 3.75231998892281*^9, 3.752320053924498*^9, {
   3.7523200867792253`*^9, 3.752320134586351*^9}, 3.7523201821620827`*^9, {
   3.7523202685587187`*^9, 3.752320292991703*^9}, {3.752320328634531*^9, 
   3.7523203566319113`*^9}, 3.752320504755625*^9, 3.752320603106841*^9, 
   3.752320732098002*^9, 3.7523207982305117`*^9, {3.752320889223524*^9, 
   3.752320912450539*^9}, 3.752321253516602*^9, 3.7523212837019176`*^9, 
   3.752321318071669*^9, 3.752321369818326*^9, 3.752321753968668*^9, 
   3.752321812479745*^9, 3.752321850509863*^9, 3.752321922480194*^9, {
   3.752322446827376*^9, 3.752322465921739*^9}, {3.752322582058992*^9, 
   3.7523225940890713`*^9}, 3.752481356385798*^9, 3.752481478577919*^9, {
   3.752488975282551*^9, 3.752488995333014*^9}, {3.752489148568166*^9, 
   3.7524891761539087`*^9}, 3.752489210518301*^9, 3.752489325289981*^9, {
   3.752490206218266*^9, 3.752490249672962*^9}, {3.752490372248768*^9, 
   3.752490386933861*^9}, 3.752490440463286*^9, 3.752491121222312*^9, 
   3.7524913752772284`*^9, 3.7524914205399847`*^9, 3.7524915805407143`*^9, 
   3.752492029530768*^9, {3.752492127668788*^9, 3.752492175300931*^9}, 
   3.752492778985752*^9, 3.752492833855753*^9, 3.752492913852371*^9, 
   3.752492943951811*^9, 3.7524930075301933`*^9, {3.7524930664592123`*^9, 
   3.752493142244748*^9}, 3.752493286339967*^9, {3.752494752555896*^9, 
   3.752494761355472*^9}, 3.752494876836205*^9, 3.752494950252049*^9, 
   3.752495077511828*^9, 3.752495591371134*^9, 3.752840972640461*^9, {
   3.753092854022542*^9, 3.753092890862644*^9}, 3.753092936323403*^9, 
   3.753093329026698*^9, 3.753093631641162*^9, {3.753093880328156*^9, 
   3.7530939101735067`*^9}, 3.753093944021249*^9, 3.753094906670826*^9, 
   3.753095093569524*^9, 3.75310031142242*^9, 3.753101138214121*^9, 
   3.753101197275313*^9, {3.753101350925694*^9, 3.753101370125792*^9}, 
   3.7531020148904963`*^9, 3.7531024507465754`*^9, 3.753175136677162*^9, 
   3.753178845455201*^9, 3.753179098125248*^9, 3.753184391476821*^9, 
   3.753184537110992*^9, 3.753186036994556*^9, 3.75318652958635*^9, 
   3.753187213913907*^9, 3.753189743944647*^9, 3.753189947551135*^9, 
   3.7534209818426657`*^9, 3.7534213992538357`*^9, 3.753422059695402*^9, 
   3.7534234872570667`*^9, 3.753423526920788*^9, 3.753770233452092*^9, 
   3.753773408703002*^9, 3.7537735597943583`*^9, 3.753773972912734*^9, 
   3.7537740551351767`*^9, 3.753774860897767*^9, 3.7537825052105913`*^9, 
   3.7537911046002417`*^9, 3.7541532663015327`*^9, 3.754291038528327*^9, 
   3.756556095976844*^9, 3.758452596560069*^9, 3.7588943735205593`*^9, 
   3.758895943681838*^9, 3.758977338495541*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "extract", " ", "steady", " ", "state", " ", "to", " ", "continue", " ", 
    "solution", " ", "with", " ", "perturbation"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"csol", "=", " ", 
     RowBox[{"c", "/.", 
      RowBox[{"solss", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Mu]sol", " ", "=", " ", 
     RowBox[{"\[Mu]", "/.", 
      RowBox[{"solss", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Delta]\[Rho]sol", " ", "=", " ", 
     RowBox[{"\[Delta]\[Rho]", "/.", 
      RowBox[{"solss", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vsol", " ", "=", " ", 
     RowBox[{"v", "/.", 
      RowBox[{"solss", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.753095241352744*^9, 3.7530952467742147`*^9}, {
   3.753102388477716*^9, 3.75310239753656*^9}, {3.7531024608250504`*^9, 
   3.7531025622255774`*^9}, {3.7531745024639997`*^9, 3.753174535205513*^9}, {
   3.753192222427236*^9, 3.7531922421577377`*^9}, 3.7534239497494698`*^9, {
   3.753425074793084*^9, 3.753425075791916*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"css", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"Append", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"csol", "[", "\"\<Coordinates\>\"", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "}"}], ",", 
        RowBox[{
         RowBox[{"csol", "[", "\"\<ValuesOnGrid\>\"", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", 
           RowBox[{"-", "1"}]}], "]"}], "]"}]}], "]"}], "]"}], ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", 
      RowBox[{
       RowBox[{"csol", "[", "\"\<InterpolationOrder\>\"", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"csol", "[", "\"\<InterpolationMethod\>\"", "]"}]}], ",", 
     RowBox[{"PeriodicInterpolation", "\[Rule]", "True"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Mu]ss", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"Append", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Mu]sol", "[", "\"\<Coordinates\>\"", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "}"}], ",", 
        RowBox[{
         RowBox[{"\[Mu]sol", "[", "\"\<ValuesOnGrid\>\"", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", 
           RowBox[{"-", "1"}]}], "]"}], "]"}]}], "]"}], "]"}], ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", 
      RowBox[{
       RowBox[{"\[Mu]sol", "[", "\"\<InterpolationOrder\>\"", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"\[Mu]sol", "[", "\"\<InterpolationMethod\>\"", "]"}]}], ",", 
     RowBox[{"PeriodicInterpolation", "\[Rule]", "True"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]\[Rho]ss", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"Append", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Delta]\[Rho]sol", "[", "\"\<Coordinates\>\"", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "}"}], ",", 
        RowBox[{
         RowBox[{"\[Delta]\[Rho]sol", "[", "\"\<ValuesOnGrid\>\"", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", 
           RowBox[{"-", "1"}]}], "]"}], "]"}]}], "]"}], "]"}], ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", 
      RowBox[{
       RowBox[{"\[Delta]\[Rho]sol", "[", "\"\<InterpolationOrder\>\"", "]"}], 
       "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ",", 
     RowBox[{"Method", "->", 
      RowBox[{
      "\[Delta]\[Rho]sol", "[", "\"\<InterpolationMethod\>\"", "]"}]}], ",", 
     RowBox[{"PeriodicInterpolation", "\[Rule]", "True"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vss", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"Append", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"vsol", "[", "\"\<Coordinates\>\"", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "}"}], ",", 
        RowBox[{
         RowBox[{"vsol", "[", "\"\<ValuesOnGrid\>\"", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", 
           RowBox[{"-", "1"}]}], "]"}], "]"}]}], "]"}], "]"}], ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", 
      RowBox[{
       RowBox[{"vsol", "[", "\"\<InterpolationOrder\>\"", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ",", 
     RowBox[{"Method", "->", 
      RowBox[{"vsol", "[", "\"\<InterpolationMethod\>\"", "]"}]}], ",", 
     RowBox[{"PeriodicInterpolation", "\[Rule]", "True"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"see", " ", "stack", " ", "exchange", " ", "post", " ", 
      RowBox[{"https", ":"}]}], "//", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", 
         "questions"}], "/", "110377"}], "/", "extract"}], "-", "one", "-", 
      "dimension", "-", "from", "-", "an", "-", "n", "-", "dimensional", "-", 
      
      RowBox[{"interpolatingfunction", "?", "rq"}]}]}], "=", "1"}], " ", 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.753175348775238*^9, 3.753175392524118*^9}, {
  3.75317542283636*^9, 3.75317542611098*^9}, {3.753175504654467*^9, 
  3.753175564124907*^9}, {3.753175594130993*^9, 3.753175624036593*^9}, {
  3.753175662167672*^9, 3.753175668592408*^9}, {3.753175707473296*^9, 
  3.75317571110625*^9}, {3.75317576138323*^9, 3.753175827495844*^9}, {
  3.753176463217586*^9, 3.753176506284713*^9}, {3.753176839050778*^9, 
  3.753176902657097*^9}, {3.753185802865653*^9, 3.7531858120358267`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"set", " ", "and", " ", "plot", " ", "perturbation"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Tplus", " ", "=", " ", "20"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Theta]p", " ", "=", " ", 
     RowBox[{"Pi", "*", 
      RowBox[{"4", "/", "8"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sp", " ", "=", " ", "0.5"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"apply", " ", "perturbations"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Delta]\[Rho]p", "[", 
     RowBox[{"\[Theta]_", ",", "\[Theta]pp_", ",", "spp_"}], "]"}], ":=", " ", 
    RowBox[{"spp", "*", 
     RowBox[{"\[Delta]\[Rho]ss", "[", "0", "]"}], "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{"-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[Theta]", "-", "\[Theta]pp"}], ")"}], "^", "2"}]}], 
        "]"}], " ", "+", " ", 
       RowBox[{"Exp", "[", 
        RowBox[{"-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[Theta]", "-", 
            RowBox[{"(", 
             RowBox[{"\[Theta]pp", " ", "+", " ", 
              RowBox[{"2", "Pi"}]}], ")"}]}], ")"}], "^", "2"}]}], "]"}], "+",
        " ", 
       RowBox[{"Exp", "[", 
        RowBox[{"-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[Theta]", "-", 
            RowBox[{"(", 
             RowBox[{"\[Theta]pp", " ", "-", " ", 
              RowBox[{"2", "Pi"}]}], ")"}]}], ")"}], "^", "2"}]}], "]"}]}], 
      ")"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Delta]\[Rho]pp0", "[", 
     RowBox[{"\[Theta]_", ",", "\[Theta]pp_", ",", "spp_"}], "]"}], " ", ":=",
     " ", 
    RowBox[{
     RowBox[{"\[Delta]\[Rho]ss", "[", "\[Theta]", "]"}], "+", 
     RowBox[{"\[Delta]\[Rho]p", "[", 
      RowBox[{"\[Theta]", ",", "\[Theta]pp", ",", "spp"}], "]"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"vp", "[", 
      RowBox[{"\[Theta]_", ",", "\[Theta]pp_", ",", "spp_"}], "]"}], "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["\[PartialD]", "\[Theta]"], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[Alpha]"}], "*", 
            RowBox[{"\[Delta]\[Rho]p", "[", 
             RowBox[{"\[Theta]", ",", "\[Theta]pp", ",", "spp"}], "]"}]}], 
           " ", "+", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"\[Beta]", "/", 
              RowBox[{"R", "^", "2"}]}], ")"}], "*", 
            RowBox[{
             SubscriptBox["\[PartialD]", 
              RowBox[{"\[Theta]", ",", "\[Theta]"}]], 
             RowBox[{"\[Delta]\[Rho]p", "[", 
              RowBox[{"\[Theta]", ",", "\[Theta]pp", ",", "spp"}], 
              "]"}]}]}]}], ")"}]}], "/", "\[Xi]"}], " ", "/", "R"}], " ", "//.",
       "ssvars"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"vpp0", "[", 
      RowBox[{"\[Theta]_", ",", "\[Theta]pp_", ",", "spp_"}], "]"}], "=", 
     RowBox[{
      RowBox[{"vss", "[", "\[Theta]", "]"}], " ", "+", " ", 
      RowBox[{"vp", "[", 
       RowBox[{"\[Theta]", ",", "\[Theta]pp", ",", "spp"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"use", " ", "=", " ", 
     RowBox[{
      RowBox[{"instead", " ", "of"}], " ", ":=", " ", 
      RowBox[{
      "to", " ", "not", " ", "delay", " ", "evaluation", " ", "of", " ", 
       "derivative"}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Delta]\[Rho]pp0", "[", 
        RowBox[{"\[Theta]", ",", "\[Theta]p", ",", "sp"}], "]"}], ",", 
       RowBox[{"vpp0", "[", 
        RowBox[{"\[Theta]", ",", "\[Theta]p", ",", "sp"}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", 
       RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Delta]\[Rho]\>\"", ",", "\"\<v\>\""}], "}"}]}]}], "]"}],
    " "}]}]], "Input",
 CellChangeTimes->{{3.7534220038173113`*^9, 3.7534220110378637`*^9}, {
   3.7534221122346363`*^9, 3.7534221245759573`*^9}, {3.7534221570098553`*^9, 
   3.753422375487692*^9}, {3.753422602102683*^9, 3.753422619324247*^9}, {
   3.753422702933229*^9, 3.7534227036217337`*^9}, {3.753422741120264*^9, 
   3.753422817114449*^9}, {3.753422874728133*^9, 3.753422949134614*^9}, {
   3.75342298274054*^9, 3.753422991244163*^9}, {3.753423023983808*^9, 
   3.753423041397567*^9}, {3.753423148129428*^9, 3.753423196999816*^9}, {
   3.7534232956979218`*^9, 3.753423336872156*^9}, {3.7534235770338383`*^9, 
   3.753423577129835*^9}, {3.753423615946825*^9, 3.7534236170826607`*^9}, {
   3.7534236498217697`*^9, 3.753423650056736*^9}, {3.753423690130938*^9, 
   3.7534236902307787`*^9}, {3.7534237446941233`*^9, 3.753423788084022*^9}, {
   3.753423893892755*^9, 3.7534239069305067`*^9}, {3.753424347226419*^9, 
   3.753424347315261*^9}, {3.7534249940957603`*^9, 3.753425019935717*^9}, {
   3.753425079336488*^9, 3.753425081979712*^9}, {3.7534251199844007`*^9, 
   3.7534251408741093`*^9}, {3.753425196980195*^9, 3.7534251970971203`*^9}, {
   3.75342526864261*^9, 3.753425268733637*^9}, {3.7534253254444723`*^9, 
   3.753425325567025*^9}, {3.753425704490353*^9, 3.753425704601989*^9}, {
   3.75342575079592*^9, 3.7534257516834583`*^9}, {3.753425787279895*^9, 
   3.753425787402643*^9}, {3.753425822403068*^9, 3.7534258225337477`*^9}, {
   3.753427063253152*^9, 3.7534270660418243`*^9}, {3.7534271544127274`*^9, 
   3.7534271556711817`*^9}, {3.7534271976128187`*^9, 3.753427199141468*^9}, {
   3.7534272522645607`*^9, 3.7534272631546097`*^9}, {3.753427319201235*^9, 
   3.753427319379785*^9}, {3.753427395543889*^9, 3.753427395621093*^9}, {
   3.753427443548148*^9, 3.753427443985301*^9}, {3.753427497029627*^9, 
   3.753427497186706*^9}, {3.753427530859459*^9, 3.75342753188192*^9}, {
   3.75377158931664*^9, 3.7537716658612556`*^9}, {3.753782496882227*^9, 
   3.7537824972619123`*^9}, {3.75378259801503*^9, 3.753782598438178*^9}, {
   3.7537826925094757`*^9, 3.753782692947133*^9}, {3.753783071773643*^9, 
   3.753783075541883*^9}, {3.7537831139628067`*^9, 3.7537831141043863`*^9}, {
   3.753783263601244*^9, 3.753783265539221*^9}, {3.753784098821*^9, 
   3.7537840997759533`*^9}, {3.753784461229703*^9, 3.75378446200063*^9}, {
   3.75378458967645*^9, 3.75378459611882*^9}, {3.753784634278893*^9, 
   3.7537846744990473`*^9}, {3.753786203980733*^9, 3.753786204880828*^9}, {
   3.753786402834189*^9, 3.75378644263095*^9}, 3.753786534531358*^9, {
   3.753786799160972*^9, 3.753786880518352*^9}, {3.7537872243839693`*^9, 
   3.7537872337225723`*^9}, {3.753787331683116*^9, 3.7537873377595654`*^9}, {
   3.753787465050411*^9, 3.753787533703989*^9}, {3.753787703755508*^9, 
   3.753787724001384*^9}, {3.753787805862138*^9, 3.753787959455187*^9}, {
   3.753788038942213*^9, 3.753788172012002*^9}, {3.7537882965073967`*^9, 
   3.753788356297954*^9}, 3.753788574977519*^9, {3.7537886183325987`*^9, 
   3.753788640817676*^9}, {3.7537886738853407`*^9, 3.753788690511188*^9}, {
   3.753789168591942*^9, 3.753789170044941*^9}, {3.753789600460806*^9, 
   3.753789600927539*^9}, {3.753789660004746*^9, 3.75378966022458*^9}, 
   3.7537897047842607`*^9, {3.753789767434853*^9, 3.753789772907811*^9}, 
   3.753789836166724*^9, {3.753789873027165*^9, 3.753789875339789*^9}, {
   3.75379001983529*^9, 3.7537900233420677`*^9}, {3.7537908629510098`*^9, 
   3.7537908630615797`*^9}, {3.7537913451064663`*^9, 3.753791345316052*^9}, {
   3.753791413205875*^9, 3.7537914134361477`*^9}, {3.75379144499506*^9, 
   3.753791445224202*^9}, {3.7537915711235237`*^9, 3.7537915716529703`*^9}, {
   3.753791676948859*^9, 3.7537916906285763`*^9}, {3.7537920982830753`*^9, 
   3.753792098608801*^9}, {3.753792378088439*^9, 3.753792439231256*^9}, {
   3.753792476874897*^9, 3.753792548000794*^9}, 3.7541532496678877`*^9, {
   3.754153390194325*^9, 3.7541533946462383`*^9}, {3.754153441090929*^9, 
   3.754153441157587*^9}, 3.754295714033805*^9, {3.756556125317993*^9, 
   3.7565561255279922`*^9}, 3.7584523826520967`*^9, {3.758452464535994*^9, 
   3.75845246801199*^9}, {3.7588945593582563`*^9, 3.758894559675359*^9}, {
   3.758894605936284*^9, 3.758894606089266*^9}, {3.758894649344204*^9, 
   3.758894668943768*^9}, {3.7588959617067413`*^9, 3.758896081325163*^9}, {
   3.758896251194333*^9, 3.758896269393167*^9}, {3.758977345949712*^9, 
   3.758977348164041*^9}, {3.776151822958438*^9, 3.7761518306116467`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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

         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
o8Qc
         "]], 
        LineBox[{{1.5128053543339084`, -140.70999186560726`}, {
         1.5986548259940219`, 66.10134982156235}, {1.6343406418085167`, 
         150.29335469635052`}}]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
     NCache[{{-Pi, Pi}, {-140.70999186560726`, 
        150.29335469635052`}}, {{-3.141592653589793, 
       3.141592653589793}, {-140.70999186560726`, 150.29335469635052`}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Delta]\[Rho]\"", "\"v\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.753422801886876*^9, 3.753422821466283*^9}, {
   3.753422876015266*^9, 3.7534228858397293`*^9}, 3.7534229538916283`*^9, {
   3.7534230261590967`*^9, 3.753423043481386*^9}, 3.753423151389041*^9, {
   3.753423183095806*^9, 3.753423197485653*^9}, {3.753423298302696*^9, 
   3.753423303261856*^9}, 3.7534233379275093`*^9, 3.7534235779371567`*^9, 
   3.753423617496402*^9, 3.7534236505576773`*^9, 3.753423691625793*^9, {
   3.753423745566133*^9, 3.753423788716914*^9}, {3.753423895085442*^9, 
   3.753423913054628*^9}, 3.75342434776161*^9, {3.753424996892805*^9, 
   3.753425020576985*^9}, 3.7534250888995743`*^9, {3.753425120995224*^9, 
   3.75342514163503*^9}, 3.753425202235375*^9, 3.753425269341741*^9, {
   3.753425684736039*^9, 3.753425705297978*^9}, 3.753425753942999*^9, 
   3.753425788076077*^9, 3.7534258228615217`*^9, 3.7534270671535482`*^9, 
   3.753427156184512*^9, 3.75342720014907*^9, 3.753427263532076*^9, 
   3.753427319982502*^9, 3.7534273962128067`*^9, 3.753427444520629*^9, 
   3.753427497700704*^9, 3.753427532426265*^9, 3.753770246448976*^9, {
   3.753771645368273*^9, 3.7537716664134903`*^9}, 3.753773415144133*^9, 
   3.75377357002584*^9, 3.7537738039363728`*^9, 3.7537739843782578`*^9, 
   3.7537740583510036`*^9, 3.7537748649050093`*^9, 3.7537825096648483`*^9, 
   3.7537826501415443`*^9, 3.753782700170003*^9, 3.753783076184986*^9, 
   3.753783114764859*^9, 3.7537832683597393`*^9, 3.753784100455123*^9, 
   3.7537844627620173`*^9, 3.753784610567379*^9, {3.75378465956362*^9, 
   3.753784675201727*^9}, 3.753786205671608*^9, {3.753786406582282*^9, 
   3.753786443101472*^9}, {3.753786540034522*^9, 3.753786546674324*^9}, 
   3.753786842026284*^9, 3.753786881341921*^9, {3.753787228919003*^9, 
   3.753787234592223*^9}, {3.753787333362667*^9, 3.753787341381524*^9}, {
   3.753787459411193*^9, 3.753787466272401*^9}, {3.753787522602182*^9, 
   3.753787534331787*^9}, {3.753787704521254*^9, 3.753787730669911*^9}, {
   3.7537878180337467`*^9, 3.7537879600554857`*^9}, {3.753788075741816*^9, 
   3.753788108197937*^9}, {3.753788138680048*^9, 3.753788172583242*^9}, {
   3.7537883434164877`*^9, 3.753788356949339*^9}, 3.753788576152071*^9, {
   3.753788625635363*^9, 3.753788642242566*^9}, {3.753788684433919*^9, 
   3.7537886911843357`*^9}, 3.753788931130518*^9, 3.753789170976952*^9, 
   3.753789601420351*^9, 3.75378966132323*^9, 3.753789705805256*^9, 
   3.753789773495832*^9, 3.753789837039632*^9, 3.7537900412458963`*^9, 
   3.7537911257298937`*^9, 3.753791346288004*^9, 3.753791414527115*^9, 
   3.753791446818103*^9, {3.753791546193018*^9, 3.7537915730888157`*^9}, 
   3.753791705373011*^9, 3.753792296265849*^9, {3.753792412970558*^9, 
   3.7537924398917933`*^9}, 3.753792479563012*^9, {3.753792520180152*^9, 
   3.753792548791613*^9}, 3.7541532701386757`*^9, {3.7541534121425037`*^9, 
   3.7541534417061462`*^9}, 3.754291044142178*^9, {3.756556106072043*^9, 
   3.756556126026972*^9}, 3.758452603940781*^9, 3.758452737265047*^9, 
   3.7588943958579893`*^9, 3.758894560303235*^9, 3.758894606518524*^9, {
   3.758894650041255*^9, 3.758894669418003*^9}, 3.758896083367612*^9, {
   3.7588962520469713`*^9, 3.75889627516477*^9}, 3.75897734881499*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "now", " ", "solve", " ", "the", " ", "PDE", " ", "again", " ", "with", 
     " ", "initial", " ", "conditions", " ", "at", " ", "steady", " ", 
     "state"}], ",", " ", 
    RowBox[{"plus", " ", "a", " ", "perturbation"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"pdeSolvePerturb", "[", 
    RowBox[{"rdvariables_", ",", "\[Theta]pp_", ",", "spp_"}], "]"}], " ", ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "sol", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"sol", " ", "=", " ", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               SubscriptBox["\[PartialD]", "t"], 
               RowBox[{"\[Delta]\[Rho]", "[", 
                RowBox[{"\[Theta]", ",", " ", "t"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "/", "R"}], ")"}], "*", 
               RowBox[{
                SubscriptBox["\[PartialD]", "\[Theta]"], 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", "+", 
                    RowBox[{"\[Delta]\[Rho]", "[", 
                    RowBox[{"\[Theta]", ",", " ", "t"}], "]"}]}], ")"}], " ", 
                  "*", 
                  RowBox[{"v", "[", 
                   RowBox[{"\[Theta]", ",", " ", "t"}], "]"}]}], ")"}]}]}]}], 
             "\[Equal]", " ", 
             RowBox[{
              RowBox[{"-", "kd"}], "*", 
              RowBox[{"\[Delta]\[Rho]", "[", 
               RowBox[{"\[Theta]", ",", " ", "t"}], "]"}]}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              SubscriptBox["\[PartialD]", "\[Theta]"], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "\[Zeta]"}], "*", 
                 RowBox[{"\[Mu]", "[", 
                  RowBox[{"\[Theta]", ",", " ", "t"}], "]"}]}], " ", "-", 
                RowBox[{"\[Alpha]", "*", 
                 RowBox[{"\[Delta]\[Rho]", "[", 
                  RowBox[{"\[Theta]", ",", " ", "t"}], "]"}]}], " ", "+", " ", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"\[Beta]", "/", 
                   RowBox[{"R", "^", "2"}]}], ")"}], "*", 
                 RowBox[{
                  SubscriptBox["\[PartialD]", 
                   RowBox[{"\[Theta]", ",", "\[Theta]"}]], 
                  RowBox[{"\[Delta]\[Rho]", "[", 
                   RowBox[{"\[Theta]", ",", " ", "t"}], "]"}]}]}]}], ")"}]}], 
             " ", "\[Equal]", 
             RowBox[{"\[Xi]", " ", "*", "R", " ", "*", 
              RowBox[{"v", "[", 
               RowBox[{"\[Theta]", ",", " ", "t"}], "]"}]}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              SubscriptBox["\[PartialD]", "t"], 
              RowBox[{"c", "[", 
               RowBox[{"\[Theta]", ",", " ", "t"}], "]"}]}], "\[Equal]", " ", 
             
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"Dc", "/", 
                 RowBox[{"R", "^", "2"}]}], ")"}], "*", " ", 
               RowBox[{
                SubscriptBox["\[PartialD]", 
                 RowBox[{"\[Theta]", ",", "\[Theta]"}]], 
                RowBox[{"c", "[", 
                 RowBox[{"\[Theta]", ",", " ", "t"}], "]"}]}]}], "-", 
              RowBox[{"kon", "*", 
               RowBox[{"c", "[", 
                RowBox[{"\[Theta]", ",", " ", "t"}], "]"}]}], "+", 
              RowBox[{"koff", "*", 
               RowBox[{"\[Mu]", "[", 
                RowBox[{"\[Theta]", ",", " ", "t"}], "]"}]}]}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{
               SubscriptBox["\[PartialD]", "t"], 
               RowBox[{"\[Mu]", "[", 
                RowBox[{"\[Theta]", ",", " ", "t"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "/", "R"}], ")"}], "*", " ", 
               RowBox[{
                SubscriptBox["\[PartialD]", "\[Theta]"], 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Mu]", "[", 
                   RowBox[{"\[Theta]", ",", " ", "t"}], "]"}], "*", 
                  RowBox[{"v", "[", 
                   RowBox[{"\[Theta]", ",", " ", "t"}], "]"}]}], ")"}]}]}]}], 
             "\[Equal]", " ", 
             RowBox[{
              RowBox[{"kon", "*", 
               RowBox[{"c", "[", 
                RowBox[{"\[Theta]", ",", " ", "t"}], "]"}]}], "-", 
              RowBox[{"koff", "*", 
               RowBox[{"\[Mu]", "[", 
                RowBox[{"\[Theta]", ",", " ", "t"}], "]"}]}], " ", "+", " ", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"D\[Mu]", "/", 
                 RowBox[{"R", "^", "2"}]}], ")"}], "*", 
               RowBox[{
                SubscriptBox["\[PartialD]", 
                 RowBox[{"\[Theta]", ",", "\[Theta]"}]], 
                RowBox[{"\[Mu]", "[", 
                 RowBox[{"\[Theta]", ",", "t"}], "]"}]}]}]}]}], ",", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"c", "[", 
              RowBox[{"\[Theta]", ",", " ", "0"}], "]"}], "\[Equal]", " ", 
             RowBox[{"css", "[", "\[Theta]", "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"\[Mu]", "[", 
              RowBox[{"\[Theta]", ",", " ", "0"}], "]"}], " ", "\[Equal]", 
             RowBox[{"\[Mu]ss", "[", "\[Theta]", "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"\[Delta]\[Rho]", "[", 
              RowBox[{"\[Theta]", ",", "0"}], "]"}], "\[Equal]", 
             RowBox[{"\[Delta]\[Rho]pp0", "[", 
              RowBox[{"\[Theta]", ",", "\[Theta]pp", ",", "spp"}], "]"}]}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"v", "[", 
              RowBox[{"\[Theta]", ",", "0"}], "]"}], " ", "\[Equal]", " ", 
             RowBox[{"vpp0", "[", 
              RowBox[{"\[Theta]", ",", "\[Theta]pp", ",", " ", "spp"}], 
              "]"}]}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"\[Mu]", "[", 
              RowBox[{
               RowBox[{"-", "Pi"}], ",", " ", "t"}], "]"}], "\[Equal]", 
             RowBox[{"\[Mu]", "[", 
              RowBox[{"Pi", ",", " ", "t"}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"c", "[", 
              RowBox[{
               RowBox[{"-", "Pi"}], ",", " ", "t"}], "]"}], "\[Equal]", 
             RowBox[{"c", "[", 
              RowBox[{"Pi", ",", " ", "t"}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"\[Delta]\[Rho]", "[", 
              RowBox[{
               RowBox[{"-", "Pi"}], ",", " ", "t"}], "]"}], "\[Equal]", 
             RowBox[{"\[Delta]\[Rho]", "[", 
              RowBox[{"Pi", ",", " ", "t"}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"v", "[", 
              RowBox[{
               RowBox[{"-", "Pi"}], ",", "t"}], "]"}], "\[Equal]", 
             RowBox[{"v", "[", 
              RowBox[{"Pi", ",", "t"}], "]"}]}]}], "\[IndentingNewLine]", 
           "}"}], "//.", "rdvariables"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "\[Mu]", ",", " ", "c", ",", " ", "\[Delta]\[Rho]", ",", " ", "v"}],
           "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Theta]", ",", 
           RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", " ", "0", ",", "Tplus"}], "}"}], ",", " ", 
         RowBox[{"MaxStepFraction", "\[Rule]", 
          RowBox[{"1", "/", "100"}]}], ",", 
         RowBox[{"Method", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<MethodOfLines\>\"", ",", 
            RowBox[{"\"\<SpatialDiscretization\>\"", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"\"\<TensorProductGrid\>\"", ",", 
               RowBox[{"\"\<MaxPoints\>\"", "\[Rule]", "200"}]}], "}"}]}]}], 
           "}"}]}]}], "]"}]}], ";", " ", 
      RowBox[{"Return", "[", "sol", "]"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.753094819853725*^9, 3.7530948506430063`*^9}, {
   3.753095133309184*^9, 3.753095148531342*^9}, {3.753095182343223*^9, 
   3.753095238575818*^9}, {3.753095346476451*^9, 3.753095372268806*^9}, {
   3.753095501988652*^9, 3.753095517232686*^9}, {3.753095582011647*^9, 
   3.753095591230949*^9}, {3.7530956273812113`*^9, 3.7530956415782747`*^9}, {
   3.7530962358014793`*^9, 3.7530962542882137`*^9}, {3.75309704500181*^9, 
   3.753097058696703*^9}, {3.7530971038105717`*^9, 3.753097105448824*^9}, {
   3.753097159094042*^9, 3.75309717286735*^9}, {3.753097854429638*^9, 
   3.753097872300275*^9}, {3.753100332589077*^9, 3.753100355799527*^9}, {
   3.753101427447752*^9, 3.753101435209922*^9}, {3.753102206695663*^9, 
   3.753102224809052*^9}, {3.753102428549817*^9, 3.753102428705844*^9}, {
   3.753102565896204*^9, 3.753102607610797*^9}, 3.753174563418782*^9, {
   3.753174607299985*^9, 3.753174627157467*^9}, {3.75317529984699*^9, 
   3.753175327827881*^9}, {3.753177296016246*^9, 3.753177302539513*^9}, 
   3.753178953365918*^9, {3.7531790471208153`*^9, 3.753179074633334*^9}, {
   3.753179113258284*^9, 3.753179125593747*^9}, {3.753179201731379*^9, 
   3.753179231348884*^9}, {3.753179317716291*^9, 3.753179323323084*^9}, {
   3.7531797045501633`*^9, 3.753179711242711*^9}, {3.753184377243044*^9, 
   3.753184385547493*^9}, {3.75318449886178*^9, 3.753184503641708*^9}, {
   3.753184723691194*^9, 3.753184750472485*^9}, {3.7531848392633142`*^9, 
   3.753184850171914*^9}, {3.7531848978862123`*^9, 3.753184942033762*^9}, {
   3.753186106697904*^9, 3.75318610948253*^9}, {3.753186396585104*^9, 
   3.753186401612008*^9}, {3.75318662053732*^9, 3.7531867170461493`*^9}, 
   3.753186815538365*^9, {3.7531872360143843`*^9, 3.753187269374051*^9}, {
   3.753187302643847*^9, 3.753187335932946*^9}, {3.753187373588985*^9, 
   3.753187390515087*^9}, {3.7531874245755053`*^9, 3.7531875585324078`*^9}, {
   3.7531876002715693`*^9, 3.7531876704668493`*^9}, 3.753189681820428*^9, {
   3.753189733478876*^9, 3.753189737820641*^9}, {3.75319001320438*^9, 
   3.7531900393593388`*^9}, 3.75319008289799*^9, {3.753190113300837*^9, 
   3.753190122239973*^9}, {3.753190154528884*^9, 3.753190287661768*^9}, {
   3.753190328004903*^9, 3.753190393682734*^9}, {3.753190430674781*^9, 
   3.7531905831338253`*^9}, {3.753190614857995*^9, 3.753190630922852*^9}, {
   3.753190673191597*^9, 3.7531907289467382`*^9}, {3.753190777523404*^9, 
   3.753190849491136*^9}, {3.753190915629924*^9, 3.753190951157612*^9}, {
   3.753191008466785*^9, 3.753191021560288*^9}, 3.753191477619584*^9, {
   3.7531919680097017`*^9, 3.753192010656789*^9}, {3.753420935529591*^9, 
   3.753420970846086*^9}, 3.75342153600812*^9, {3.753421702167684*^9, 
   3.753421705520589*^9}, {3.753423353052668*^9, 3.753423356032413*^9}, {
   3.753425160080233*^9, 3.753425160191176*^9}, {3.753771683716814*^9, 
   3.753771706317461*^9}, {3.753784618148312*^9, 3.753784621163453*^9}, {
   3.7537846808999453`*^9, 3.7537846887634373`*^9}, {3.753788434390871*^9, 
   3.7537884562444963`*^9}, 3.753788514159892*^9, {3.753788922777964*^9, 
   3.7537889267645483`*^9}, {3.7537891735166893`*^9, 3.753789174207056*^9}, {
   3.753789487261087*^9, 3.753789488443881*^9}, {3.753789580362068*^9, 
   3.753789581269815*^9}, {3.75379004556733*^9, 3.7537900463576603`*^9}, {
   3.75379019429003*^9, 3.753790196781707*^9}, {3.753790865483809*^9, 
   3.7537908657374887`*^9}, {3.753791147441613*^9, 3.753791327800321*^9}, {
   3.753791373478942*^9, 3.7537914316755257`*^9}, {3.7537915366998568`*^9, 
   3.753791540443152*^9}, {3.753791596797374*^9, 3.7537916012683268`*^9}, {
   3.753791694931569*^9, 3.7537917015908546`*^9}, {3.753791922112061*^9, 
   3.753791922542837*^9}, {3.753792293599866*^9, 3.753792294030751*^9}, {
   3.754153462612377*^9, 3.754153462769454*^9}, {3.754153498174179*^9, 
   3.754153498657147*^9}, {3.754291026165889*^9, 3.7542910264845953`*^9}, 
   3.75429658749861*^9, {3.756555823828208*^9, 3.756555823959708*^9}, {
   3.756556137191139*^9, 3.756556137407683*^9}, {3.7584524391654997`*^9, 
   3.758452442877326*^9}, {3.758452711464184*^9, 3.7584527724870567`*^9}, {
   3.758452814433454*^9, 3.7584528319452553`*^9}, {3.758452926229375*^9, 
   3.758452929563711*^9}, {3.758453000703422*^9, 3.758453001289975*^9}, {
   3.758896096531765*^9, 3.7588961119366293`*^9}, {3.75889621173429*^9, 
   3.758896213015902*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solpp", " ", "=", " ", 
  RowBox[{"pdeSolvePerturb", "[", 
   RowBox[{"ssvars", ",", "\[Theta]p", ",", "sp"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7530952808333693`*^9, 3.753095285749991*^9}, {
  3.753102433593218*^9, 3.753102439194413*^9}, {3.753102632356502*^9, 
  3.7531026324989977`*^9}, {3.7537717172630453`*^9, 3.753771719737502*^9}, {
  3.753784699054078*^9, 3.753784699529354*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "pdord"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Some of the functions have zero differential order, so the \
equations will be solved as a system of differential-algebraic equations. \\!\
\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/pdord\\\", \
ButtonNote -> \\\"NDSolve::pdord\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.7531026333626423`*^9, 3.7531746327941732`*^9, 3.7531752315887623`*^9, 
   3.7531753316964483`*^9, 3.753176909317245*^9, 3.753177253265704*^9, 
   3.753177305320034*^9, 3.7531789316741543`*^9, 3.753178965536353*^9, {
   3.7531790826313477`*^9, 3.753179131579166*^9}, 3.753179326545992*^9, 
   3.7531794833951893`*^9, {3.753179688763701*^9, 3.7531797138083572`*^9}, 
   3.753184395551456*^9, 3.7531845416264563`*^9, 3.753184755733407*^9, 
   3.753184947640449*^9, 3.7531860802905617`*^9, 3.753186113382696*^9, 
   3.753186551134499*^9, {3.753186627188751*^9, 3.753186720008215*^9}, {
   3.7531872178806047`*^9, 3.753187257492031*^9}, {3.753187296603351*^9, 
   3.753187317614847*^9}, {3.753187363294422*^9, 3.7531873929505653`*^9}, {
   3.753187428140212*^9, 3.753187538184519*^9}, {3.753187589598878*^9, 
   3.75318765875452*^9}, 3.75318974771171*^9, 3.7531899547347918`*^9, {
   3.753190016189743*^9, 3.753190041279696*^9}, {3.7531901039276733`*^9, 
   3.7531901144807043`*^9}, 3.753190197189351*^9, {3.753190228025572*^9, 
   3.75319028885568*^9}, {3.7531903352545547`*^9, 3.753190395618148*^9}, {
   3.7531904910170794`*^9, 3.753190584523514*^9}, {3.7531906162386093`*^9, 
   3.753190632934517*^9}, {3.7531906803214607`*^9, 3.753190731206027*^9}, {
   3.753190784530674*^9, 3.753190852748461*^9}, {3.7531909263830767`*^9, 
   3.7531909531573563`*^9}, {3.753191011504283*^9, 3.753191023056575*^9}, 
   3.753191480632135*^9, {3.753191517530415*^9, 3.753191534467073*^9}, {
   3.753191972401992*^9, 3.7531919963969307`*^9}, 3.753420987252446*^9, 
   3.753421404762981*^9, 3.75342154011392*^9, 3.753421711168254*^9, 
   3.753422428265523*^9, 3.753423361680223*^9, 3.753423580322743*^9, 
   3.753423624341898*^9, 3.7534236566350203`*^9, 3.753423695878181*^9, {
   3.753423748989627*^9, 3.7534237942510242`*^9}, {3.7534238983098907`*^9, 
   3.753423915613885*^9}, 3.7534239652004957`*^9, 3.7534243502906857`*^9, {
   3.753425002968759*^9, 3.7534250233606253`*^9}, 3.7534250921387053`*^9, {
   3.753425122732459*^9, 3.753425161376088*^9}, 3.753425208031949*^9, 
   3.7534252714028263`*^9, {3.753425686434916*^9, 3.753425707224649*^9}, 
   3.7534257555184298`*^9, 3.753425789960265*^9, 3.753425824423348*^9, 
   3.753427072311886*^9, 3.753427159265086*^9, 3.753427203689495*^9, 
   3.753427266342102*^9, 3.753427321570959*^9, 3.753427400073604*^9, 
   3.753427462039865*^9, 3.753427499246894*^9, 3.7534275340880947`*^9, 
   3.7537702468041058`*^9, 3.753771721130948*^9, 3.753773415462734*^9, 
   3.753773575908437*^9, 3.753773991557515*^9, 3.753774058639813*^9, 
   3.7537748652125463`*^9, 3.753782510190116*^9, 3.7537826524039803`*^9, 
   3.75378270486425*^9, 3.7537830775881643`*^9, 3.753783115940652*^9, 
   3.753783270324353*^9, 3.7537841016474867`*^9, 3.753784700103965*^9, 
   3.7537864850459633`*^9, 3.753786548593301*^9, 3.753788180944159*^9, 
   3.7537883709090633`*^9, 3.7537885819960546`*^9, 3.753788644493217*^9, 
   3.75378869459568*^9, 3.753788933200263*^9, 3.753789175649885*^9, 
   3.753789490534135*^9, {3.753789586664639*^9, 3.753789606298458*^9}, 
   3.753789663642679*^9, 3.7537897089767933`*^9, 3.7537897759246397`*^9, 
   3.753789840173389*^9, 3.753790048034995*^9, 3.753790200073153*^9, {
   3.753791129392665*^9, 3.753791449744919*^9}, {3.7537915490186853`*^9, 
   3.753791605526795*^9}, 3.753791708679221*^9, 3.7537919284612627`*^9, 
   3.75379229813059*^9, 3.753792453011547*^9, 3.753792489755638*^9, 
   3.753792529154859*^9, 3.7537925613032627`*^9, 3.754153270384163*^9, {
   3.754153446025531*^9, 3.754153464511588*^9}, 3.754153529994959*^9, 
   3.754291044407544*^9, {3.756556108832406*^9, 3.756556138956833*^9}, {
   3.758452694248993*^9, 3.758452700524478*^9}, 3.75845274601612*^9, 
   3.758452858490893*^9, 3.7584529329806213`*^9, 3.758453003022718*^9, 
   3.7588944112459717`*^9, 3.758894561874578*^9, 3.758894607903607*^9, {
   3.758894651552762*^9, 3.7588946706404247`*^9}, 3.758896126536633*^9, 
   3.758896214400255*^9, 3.758896253289342*^9, 3.758977353482435*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "mxsst"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Using maximum number of grid points \
\[NoBreak]\\!\\(\\*RowBox[{\\\"200\\\"}]\\)\[NoBreak] allowed by the \
MaxPoints or MinStepSize options for independent variable \
\[NoBreak]\\!\\(\\*RowBox[{\\\"\[Theta]\\\"}]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/mxsst\\\", \
ButtonNote -> \\\"NDSolve::mxsst\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.7531026333626423`*^9, 3.7531746327941732`*^9, 3.7531752315887623`*^9, 
   3.7531753316964483`*^9, 3.753176909317245*^9, 3.753177253265704*^9, 
   3.753177305320034*^9, 3.7531789316741543`*^9, 3.753178965536353*^9, {
   3.7531790826313477`*^9, 3.753179131579166*^9}, 3.753179326545992*^9, 
   3.7531794833951893`*^9, {3.753179688763701*^9, 3.7531797138083572`*^9}, 
   3.753184395551456*^9, 3.7531845416264563`*^9, 3.753184755733407*^9, 
   3.753184947640449*^9, 3.7531860802905617`*^9, 3.753186113382696*^9, 
   3.753186551134499*^9, {3.753186627188751*^9, 3.753186720008215*^9}, {
   3.7531872178806047`*^9, 3.753187257492031*^9}, {3.753187296603351*^9, 
   3.753187317614847*^9}, {3.753187363294422*^9, 3.7531873929505653`*^9}, {
   3.753187428140212*^9, 3.753187538184519*^9}, {3.753187589598878*^9, 
   3.75318765875452*^9}, 3.75318974771171*^9, 3.7531899547347918`*^9, {
   3.753190016189743*^9, 3.753190041279696*^9}, {3.7531901039276733`*^9, 
   3.7531901144807043`*^9}, 3.753190197189351*^9, {3.753190228025572*^9, 
   3.75319028885568*^9}, {3.7531903352545547`*^9, 3.753190395618148*^9}, {
   3.7531904910170794`*^9, 3.753190584523514*^9}, {3.7531906162386093`*^9, 
   3.753190632934517*^9}, {3.7531906803214607`*^9, 3.753190731206027*^9}, {
   3.753190784530674*^9, 3.753190852748461*^9}, {3.7531909263830767`*^9, 
   3.7531909531573563`*^9}, {3.753191011504283*^9, 3.753191023056575*^9}, 
   3.753191480632135*^9, {3.753191517530415*^9, 3.753191534467073*^9}, {
   3.753191972401992*^9, 3.7531919963969307`*^9}, 3.753420987252446*^9, 
   3.753421404762981*^9, 3.75342154011392*^9, 3.753421711168254*^9, 
   3.753422428265523*^9, 3.753423361680223*^9, 3.753423580322743*^9, 
   3.753423624341898*^9, 3.7534236566350203`*^9, 3.753423695878181*^9, {
   3.753423748989627*^9, 3.7534237942510242`*^9}, {3.7534238983098907`*^9, 
   3.753423915613885*^9}, 3.7534239652004957`*^9, 3.7534243502906857`*^9, {
   3.753425002968759*^9, 3.7534250233606253`*^9}, 3.7534250921387053`*^9, {
   3.753425122732459*^9, 3.753425161376088*^9}, 3.753425208031949*^9, 
   3.7534252714028263`*^9, {3.753425686434916*^9, 3.753425707224649*^9}, 
   3.7534257555184298`*^9, 3.753425789960265*^9, 3.753425824423348*^9, 
   3.753427072311886*^9, 3.753427159265086*^9, 3.753427203689495*^9, 
   3.753427266342102*^9, 3.753427321570959*^9, 3.753427400073604*^9, 
   3.753427462039865*^9, 3.753427499246894*^9, 3.7534275340880947`*^9, 
   3.7537702468041058`*^9, 3.753771721130948*^9, 3.753773415462734*^9, 
   3.753773575908437*^9, 3.753773991557515*^9, 3.753774058639813*^9, 
   3.7537748652125463`*^9, 3.753782510190116*^9, 3.7537826524039803`*^9, 
   3.75378270486425*^9, 3.7537830775881643`*^9, 3.753783115940652*^9, 
   3.753783270324353*^9, 3.7537841016474867`*^9, 3.753784700103965*^9, 
   3.7537864850459633`*^9, 3.753786548593301*^9, 3.753788180944159*^9, 
   3.7537883709090633`*^9, 3.7537885819960546`*^9, 3.753788644493217*^9, 
   3.75378869459568*^9, 3.753788933200263*^9, 3.753789175649885*^9, 
   3.753789490534135*^9, {3.753789586664639*^9, 3.753789606298458*^9}, 
   3.753789663642679*^9, 3.7537897089767933`*^9, 3.7537897759246397`*^9, 
   3.753789840173389*^9, 3.753790048034995*^9, 3.753790200073153*^9, {
   3.753791129392665*^9, 3.753791449744919*^9}, {3.7537915490186853`*^9, 
   3.753791605526795*^9}, 3.753791708679221*^9, 3.7537919284612627`*^9, 
   3.75379229813059*^9, 3.753792453011547*^9, 3.753792489755638*^9, 
   3.753792529154859*^9, 3.7537925613032627`*^9, 3.754153270384163*^9, {
   3.754153446025531*^9, 3.754153464511588*^9}, 3.754153529994959*^9, 
   3.754291044407544*^9, {3.756556108832406*^9, 3.756556138956833*^9}, {
   3.758452694248993*^9, 3.758452700524478*^9}, 3.75845274601612*^9, 
   3.758452858490893*^9, 3.7584529329806213`*^9, 3.758453003022718*^9, 
   3.7588944112459717`*^9, 3.758894561874578*^9, 3.758894607903607*^9, {
   3.758894651552762*^9, 3.7588946706404247`*^9}, 3.758896126536633*^9, 
   3.758896214400255*^9, 3.758896253289342*^9, 3.7589773535267344`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "eerr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Warning: scaled local spatial error estimate of \[NoBreak]\
\\!\\(\\*RowBox[{\\\"55.98297844181687`\\\"}]\\)\[NoBreak] at \
\[NoBreak]\\!\\(\\*RowBox[{\\\"t\\\"}]\\)\[NoBreak] = \
\[NoBreak]\\!\\(\\*RowBox[{\\\"20.`\\\"}]\\)\[NoBreak] in the direction of \
independent variable \[NoBreak]\\!\\(\\*RowBox[{\\\"\[Theta]\\\"}]\\)\
\[NoBreak] is much greater than the prescribed error tolerance. Grid spacing \
with \[NoBreak]\\!\\(\\*RowBox[{\\\"201\\\"}]\\)\[NoBreak] points may be too \
large to achieve the desired accuracy or precision. A singularity may have \
formed or a smaller grid spacing can be specified using the MaxStepSize or \
MinPoints method options. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/eerr\\\", ButtonNote -> \
\\\"NDSolve::eerr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.7531026333626423`*^9, 3.7531746327941732`*^9, 3.7531752315887623`*^9, 
   3.7531753316964483`*^9, 3.753176909317245*^9, 3.753177253265704*^9, 
   3.753177305320034*^9, 3.7531789316741543`*^9, 3.753178965536353*^9, {
   3.7531790826313477`*^9, 3.753179131579166*^9}, 3.753179326545992*^9, 
   3.7531794833951893`*^9, {3.753179688763701*^9, 3.7531797138083572`*^9}, 
   3.753184395551456*^9, 3.7531845416264563`*^9, 3.753184755733407*^9, 
   3.753184947640449*^9, 3.7531860802905617`*^9, 3.753186113382696*^9, 
   3.753186551134499*^9, {3.753186627188751*^9, 3.753186720008215*^9}, {
   3.7531872178806047`*^9, 3.753187257492031*^9}, {3.753187296603351*^9, 
   3.753187317614847*^9}, {3.753187363294422*^9, 3.7531873929505653`*^9}, {
   3.753187428140212*^9, 3.753187538184519*^9}, {3.753187589598878*^9, 
   3.75318765875452*^9}, 3.75318974771171*^9, 3.7531899547347918`*^9, {
   3.753190016189743*^9, 3.753190041279696*^9}, {3.7531901039276733`*^9, 
   3.7531901144807043`*^9}, 3.753190197189351*^9, {3.753190228025572*^9, 
   3.75319028885568*^9}, {3.7531903352545547`*^9, 3.753190395618148*^9}, {
   3.7531904910170794`*^9, 3.753190584523514*^9}, {3.7531906162386093`*^9, 
   3.753190632934517*^9}, {3.7531906803214607`*^9, 3.753190731206027*^9}, {
   3.753190784530674*^9, 3.753190852748461*^9}, {3.7531909263830767`*^9, 
   3.7531909531573563`*^9}, {3.753191011504283*^9, 3.753191023056575*^9}, 
   3.753191480632135*^9, {3.753191517530415*^9, 3.753191534467073*^9}, {
   3.753191972401992*^9, 3.7531919963969307`*^9}, 3.753420987252446*^9, 
   3.753421404762981*^9, 3.75342154011392*^9, 3.753421711168254*^9, 
   3.753422428265523*^9, 3.753423361680223*^9, 3.753423580322743*^9, 
   3.753423624341898*^9, 3.7534236566350203`*^9, 3.753423695878181*^9, {
   3.753423748989627*^9, 3.7534237942510242`*^9}, {3.7534238983098907`*^9, 
   3.753423915613885*^9}, 3.7534239652004957`*^9, 3.7534243502906857`*^9, {
   3.753425002968759*^9, 3.7534250233606253`*^9}, 3.7534250921387053`*^9, {
   3.753425122732459*^9, 3.753425161376088*^9}, 3.753425208031949*^9, 
   3.7534252714028263`*^9, {3.753425686434916*^9, 3.753425707224649*^9}, 
   3.7534257555184298`*^9, 3.753425789960265*^9, 3.753425824423348*^9, 
   3.753427072311886*^9, 3.753427159265086*^9, 3.753427203689495*^9, 
   3.753427266342102*^9, 3.753427321570959*^9, 3.753427400073604*^9, 
   3.753427462039865*^9, 3.753427499246894*^9, 3.7534275340880947`*^9, 
   3.7537702468041058`*^9, 3.753771721130948*^9, 3.753773415462734*^9, 
   3.753773575908437*^9, 3.753773991557515*^9, 3.753774058639813*^9, 
   3.7537748652125463`*^9, 3.753782510190116*^9, 3.7537826524039803`*^9, 
   3.75378270486425*^9, 3.7537830775881643`*^9, 3.753783115940652*^9, 
   3.753783270324353*^9, 3.7537841016474867`*^9, 3.753784700103965*^9, 
   3.7537864850459633`*^9, 3.753786548593301*^9, 3.753788180944159*^9, 
   3.7537883709090633`*^9, 3.7537885819960546`*^9, 3.753788644493217*^9, 
   3.75378869459568*^9, 3.753788933200263*^9, 3.753789175649885*^9, 
   3.753789490534135*^9, {3.753789586664639*^9, 3.753789606298458*^9}, 
   3.753789663642679*^9, 3.7537897089767933`*^9, 3.7537897759246397`*^9, 
   3.753789840173389*^9, 3.753790048034995*^9, 3.753790200073153*^9, {
   3.753791129392665*^9, 3.753791449744919*^9}, {3.7537915490186853`*^9, 
   3.753791605526795*^9}, 3.753791708679221*^9, 3.7537919284612627`*^9, 
   3.75379229813059*^9, 3.753792453011547*^9, 3.753792489755638*^9, 
   3.753792529154859*^9, 3.7537925613032627`*^9, 3.754153270384163*^9, {
   3.754153446025531*^9, 3.754153464511588*^9}, 3.754153529994959*^9, 
   3.754291044407544*^9, {3.756556108832406*^9, 3.756556138956833*^9}, {
   3.758452694248993*^9, 3.758452700524478*^9}, 3.75845274601612*^9, 
   3.758452858490893*^9, 3.7584529329806213`*^9, 3.758453003022718*^9, 
   3.7588944112459717`*^9, 3.758894561874578*^9, 3.758894607903607*^9, {
   3.758894651552762*^9, 3.7588946706404247`*^9}, 3.758896126536633*^9, 
   3.758896214400255*^9, 3.758896253289342*^9, 3.7589773558100977`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Mu]", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.141592653589793`"}], ",", 
                    "3.141592653589793`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "20.`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.141592653589793`"}], ",", 
                    "3.141592653589793`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "20.`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"6", ",", "3"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"True", ",", "False"}], "}"}], "SummaryItem"]}]}},
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "InterpolatingFunction[{{\[Ellipsis], -3.14159, 3.14159, \
\[Ellipsis]}, {0., 20.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"c", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.141592653589793`"}], ",", 
                    "3.141592653589793`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "20.`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.141592653589793`"}], ",", 
                    "3.141592653589793`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "20.`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"6", ",", "3"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"True", ",", "False"}], "}"}], "SummaryItem"]}]}},
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "InterpolatingFunction[{{\[Ellipsis], -3.14159, 3.14159, \
\[Ellipsis]}, {0., 20.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"\[Delta]\[Rho]", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.141592653589793`"}], ",", 
                    "3.141592653589793`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "20.`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.141592653589793`"}], ",", 
                    "3.141592653589793`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "20.`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"6", ",", "3"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"True", ",", "False"}], "}"}], "SummaryItem"]}]}},
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "InterpolatingFunction[{{\[Ellipsis], -3.14159, 3.14159, \
\[Ellipsis]}, {0., 20.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"v", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.141592653589793`"}], ",", 
                    "3.141592653589793`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "20.`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.141592653589793`"}], ",", 
                    "3.141592653589793`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "20.`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"6", ",", "3"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"True", ",", "False"}], "}"}], "SummaryItem"]}]}},
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "InterpolatingFunction[{{\[Ellipsis], -3.14159, 3.14159, \
\[Ellipsis]}, {0., 20.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.756556110080229*^9, 3.7565561416126223`*^9}, {
   3.758452694676373*^9, 3.7584527008652697`*^9}, 3.758452747523938*^9, 
   3.7584528592154083`*^9, 3.758452933719401*^9, 3.758453004527232*^9, 
   3.758894413523653*^9, 3.7588945644738083`*^9, 3.758894610524757*^9, {
   3.758894653921837*^9, 3.7588946730587873`*^9}, 3.75889612721649*^9, 
   3.7588962166844683`*^9, 3.758896255603485*^9, 3.7589773558980207`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"rhomuplotpp", " ", "=", " ", 
  RowBox[{"plotSolrhoMu", "[", 
   RowBox[{"0", ",", "Tplus", ",", 
    RowBox[{"Tplus", "/", "5"}], ",", "solpp"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"velplotpp", " ", "=", " ", 
  RowBox[{"plotSolVel", "[", 
   RowBox[{"0", ",", "Tplus", ",", 
    RowBox[{"Tplus", "/", "5"}], ",", "solpp"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"cplotpp", " ", "=", " ", 
  RowBox[{"plotSolc", "[", 
   RowBox[{"0", ",", "Tplus", ",", 
    RowBox[{"Tplus", "/", "5"}], ",", "solpp"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.75317958725348*^9, 3.7531796529033957`*^9}, {
  3.75342407203787*^9, 3.753424077111381*^9}, {3.753425439538787*^9, 
  3.753425508771338*^9}, {3.753425556068016*^9, 3.753425556696837*^9}, {
  3.7534255889520073`*^9, 3.753425659411249*^9}, {3.756556259397684*^9, 
  3.756556260665259*^9}, {3.75889452597678*^9, 3.758894528831848*^9}, {
  3.7588961556698217`*^9, 3.7588961632343903`*^9}, {3.776151859328664*^9, 
  3.77615185987223*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{TemplateBox[{
       GraphicsBox[{{{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.84, 0.28, 0.62]], 
            LineBox[CompressedData["
1:eJwt23k8VN/7AHAzY/0k2SWiJClrqBR5rhZZCqGSXUkpIUlFVJIUKSrJWojI
EhIh59qzL0nWmcHY933nd7+v1+8vr/drxr3nOc85z3POH7PzkrPRFTITE9Nh
ChPT//7q6nAdX9nJgRt+aL8X8KgNCTg8nGQX48CfFHKWSL1oQ3T/ySjBbRz4
gydL23+8aUN3fzct7uflwNluWO/LSGhD8afep10jc+Dyec8jhWva0PrJHdta
ethxd/cXg/n87SjzmNLUtzh2PPzTv09+Ue3I61JcdGEMO657O742+3M70vbh
P10TwY4HbFbd357ajmhF8wkDb9jx9mejpeTCdsSpmW8h5suOVyQq7Gruakf2
cOJ3gB07vp/5B/2hSAcSUT8fY7+bHS8L9X6g/qoDXXbZd1Z8JzvOxas4lRva
gb7Gr5NbRdnx556bt+6L7kBqmxPtdfjZ8TBV/a/DKR3InLogJ0thx/Nrryn2
V3agiEcfCqbobHj0v02TDaROJFLW2fYgkg1PKWNxLXfoRJeXvgUcCGPDz43u
zp1w7kRf5Z4eHX/Dht+QPi+xxb0TqYXKfbIOYMMr0nhfK/p0IvOr3teOebDh
Lz4Lc2586EQRHDsW2EzZ8Gfi9vrNFcTz9S/zv+FjwwdJZcKpol0ozD/P/O0W
NvxP/sn35ju7kGAJT9y7TWy4KwpOJUt1IW5VfH8YhQ1fy5krP6LQhVglthtE
zbDiI2Y/Io01u9DkXMvzxD+seHH1WU0Fuy5UHqW7kf+GFR9IYS78Hd+FTrR+
0vr1ihV/KmoUGf6lCxXxLr0sDGDFh1UfitqndKGCZ4miRU9Y8c0OOySGs7pQ
xi3mI+W3WXGtC1ViicVdKPJkoVuDMSvucdQ9ZYXahVzH9g8z+FhxjROz+if4
qCik67zm8hZWfMUA0XQEqSiz1jNsCycrPnOCelhXmIqmUsu0jjCz4i0OLFfU
xKnIxeli3KtZFrymXdaIvo+KnCceWRz5y4Kr1fLpH9GkIsep+rpXoSy4ybP0
UvPrVBTYPbv7cwgL/hT92lbhSEUpjcJeeUEsuCGTIqu8MxWNZFyW6fNjweNG
FbLHb1PRddeFZ0fusuB2V1qE1b2oyGFGTLPvAgvuXpMlwvmKiuznbmYdEWbB
A6qvfP+STkXk5TmuFX4WvP0RksrPoKKYda/r+dwsuMpDilplFhW1sgXtVGdn
wd/vXLncmkNFutvSXh1dYMYvi35zKUFUJA/jN7C/zHh96VWJpjoqqjruXsHU
yIxr7eYu+dRARVe11yWKapjxkcKvjjebqOjjWa52zVJmfN9Hm5nFv1TEayev
fTyLGX+gfvd+dycVLfg7SWoFM+Mex4Lj1oao6O3L+YesL4nPFcc+vx6hIsUQ
745yf2ZcwGA3944xIt6IoJBTj4j3f6hRUpmkos7UNCYdZ2Zc72PaGaV5KsKb
xjv1zjDjp3kLPr8g0ZC/qPO7sxzMeE3S38QGARoy2+PhZ8bCjEvuFDw0IEhD
skpP714mMeNnv3seWBGioYZTERfvLFHwhovkVyLbaEjodsX2D0MU/Ixcu5iG
GA0lVIon0Csp+Lm16+ObpWjoXvO+90NlFHyHj6PCGmFd2gH/6SIK/pnj2Lbh
PTQ0Pqt3nTmPglv8OrdSsJeGDuy4Jy+dTMG1ntzQOyVHQ6XuDT+cX1DwUj81
/illGgp93JF4z494nrL88wIVGroW2B/22IeCP+eDrqcHaIgzdtXjjQcFb/11
XoH3EA0Z10pDznUKflDfq4nnCA317Hpcsa5LwctlZwvSgYa+ywfmsp2i4DpS
zm/MMBryO/w+ifs4Bf9oL32foklD+wxSAyTUKLhpWZqXwTEacvVoM9CSoeDH
Oa79bDhBQ6TG/a0vN1Hwhz0BVh46NGQ4GVOryUbBj2G35fl0aSh6C1fJHJmC
L/8aGUoirK4/nGq5TMZDzO8qNurRkHt17BO5ITJ+SoVhwqZPxDvMfb+bQcbl
+G62vyLM999Dp3d0Mm5zON1O0ICGvmmbX1z7R8bF2DzfbDekoeEyPoXacjKO
S7xN5TeiIdW+x5KPi8n4jQb3lJeEnzFPCh8oJOMi4l8qmI1pSPJ4DXNUNhkf
3HnaaoywNe7b7hhPxq3WI8y+nKOh5ry5p5w+ZNyMOXekwpSGJNove+JeZJw6
yL2w6yIN3VpqdHG7T8bb+s7reBPmUk0z73Qh4+rDT2rkzGhIJ9t+f4o1GW+W
Fgi+Z05DYc3NUjbmZLz0dqZQBeH+mWOi/BfI+NFV80U+CxryVRJne6BPxhuy
Fhq+EC5M/9epd5SMc3nwiSFLIp/1J5s2VMl4V9tqFpMVDZmPZ1VkqZDxI7NJ
2RjhRdnXmSKyZHz9dzFzAWHlZG3/kW1k/OTYwKaP1jTkU/nDK0aQjNfach35
S7hhUPK2MS8xP1rGDHYbGnLaQ7LK5yDjgZeZsm8Q/hL/UzlgkYSPtao+ELel
oQ/351SNZ0n45fY7FG3CL/T3a4hMknDFGN1dzoQdF79ofx0g4Skqnso/CVvW
Ms7c7iXhJ9f27ekkrB+7w1iNRsKPP96Wt0ZY8XSYZXULCX8XL1uqfomGdu5s
vvSmiYQbP/XSMCPMO7/lmnkdCT/z7LqVO+HZmGeuI2UkfM+45rtkwn1uJXez
iki46ZED6cWEW3Q2Hnj+IuFq3i1ubYR/zrg/25RNwoM2kTkol2ko+Xdm4J9v
JPy7q0u7AOHIqPHgiBQS/p7/nOUewi9d972//IWEx8cIvjlE2PuUfaRMPAnn
URfy0iLsLBr7aSaGhL9+9V3UhLDNVFdCfgQJpxSdum1D+Gy5cMqT9yS8wXe3
zw3CxyLOZei9IeGsj6J17xBWdgn+wfeKhAtPrNV6EZY8WZvf8YKEnxAL2PyU
sMA2jqI4PxJ+Z8z/vwDCrBMnym/4kPCuPwfKXxFeKHlUrexNwr16qzXfEB4M
K2hYuU/CP9Y88n5HuO3m4t+SOyT8bPdTr1DCVcdUOgJukfCqrezY/5wv5EI3
vknC//AqVrwlnDL6tU/EgYSLiUjwhxCOKhoY7rUj4W9l1/cEEQ4K3TX51YaE
R8/SKM8JP7xhPXfbgoRbtFC/+BB2wSKW1UxJOH1s81ZPwpcE/m1QTEi4qM0D
I1fCxsO8LDUGJFzgicrFa4RPIP3/3uoR8x+hLmdJ+ODbF1ssTpHw5PLQekPC
exzK+SWPk/CbQ5jmccJbNcjbRjVI+MFslScqhDn4NMS/HyHha0lXQyUJLw/c
l3xwkIRfEq725CPcGTwlzylPwlla/+BjRP5r7eVUmveScPdVLYn/rYdCNYfD
kbtJ+G09v4slhD/20Y/LbieeF/Hv9FvCwXmiOrNbSTg4h/7nSdjnlal+AT8J
3ybh+cmGsN3hBtPTnCT8enqPpTThc1ycVvzsJLwxZsr3P8Javacud1JI+KlE
Df8RYn1Lv0Q3HVeYcCzOWyqZ8Bg9zSdwmAlfU5H6K0yYv+Dm9qh+JvyReu/7
OWK/HXkvm5vaw4RnPr1j20DY70zyWF07E+4sxrvpCeEdeZ9NeaqZ8HzfM2Wd
xP7Vemc3s7OCCddwG6n+Rvimy64gpRImfL8iqesJ4TypTyXG+Ux4S5Tsjj2E
Td5Eyod+ZcK/q3IcuETUBw8n88qERCZ8So8pXJ7wJ51tdjlxTHiXiTHnMlFv
xjfef2iNYMKXDE9tCyLs7/iGWSSQCfd9bdabTNSn/JMv2mMcmfBuJRGbHKLe
9ezQufPtGhOumBr0040w+yobd5EdE567ML1rP2GTzKcneyyY8D+2m2UTiXo5
Lvb4m+QZJpwib8fp/7/6unjXL0mOCaeydW/bfp6GtP8c3Jm3lwn3f2MYWE3U
Y+e0ufyq3Uz4eKTVlvuEC+xuT41sZ8KP64rqNprQ0PlGJwt5LiY8OH/glTtR
z/nOVdvZd22gpBg3zbdEfzBT2RLX1byBIgVor2UIf+Qz7jap2UAOmWZlRUQ/
kW1qtzyev4G0TfQ6h4l+o2UwfH7Hhw3ElRyWq3CG6N86HDrtJhvIdiOw8QnR
3wqlzzw7e3oD+SYVnuAgzMweXPb7+AbyXFcLfalNrKfyrcdylDZQ8dOWxpBT
RP05Lq32lnsDBXdXh786SUNdR0/J6desozcVjrSzRH+V3B5wo6xkHe1xiRou
Jfrv9dW6JPX8dbR9RbjyIOH5vPNSMsnraNUialWQ6Nfcqvbi7P7r6OXTy7sr
1Yl6o/SUp/j4OpoWsfg6Q/T7RKmSuQP5a4h+FV+9SJwfTHk3W2tkrSGN/TM+
GbI09N/6+d9aX9dQpeJkLxthx7/D4Rci1tDRxnf7M/YR9dmXF7vvuYbCFj61
zRHnk9xu2xcFamvoW0omaEnQ0O9IJvHjBavIQSU+eIk4L9331/XX+76KmFSD
WvYS3uf2dso4ZRU5ufL8NuWnoUA96VK7yFXUw9uRlMlLnA+WDRz8HqwiZ4GR
A+e30FDrhZisSvVV1Mp4VmnGTkNDvBrahr9WEKPjs5veEhXRHHY1PspeQfZj
lPtGi1T0F2c3y0hdQTHflOcvLFBRkdOfG7zRK+hogetZqzkq+lB17VWz9wq6
JZyhZTpFRTo+b1pMsRV05V7J+PogFSVNDdrZliyjKIF32ZR/xPlWu24sOH8Z
Vd4N/NhMnD/fxWS5F2ctIzG2mi9xzVT0+Iy3/674ZVTGuEpRJ86rF5P4Uvp8
l9H9q3Xe52qpiMNWY8ZBaxmFCqWaSpcQ5+uGN49dK5dQkbjMh/2pVGRqCHxL
+BJ6ImLGF/OVirQbhuMf5i4hDfl/PzmSqUiqQfN3YOISMl7Qd21JoCJG/QRX
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
MFdrsdaCO23o/39/g0lKdEn+7/c3/wdQ/odG
             "]]}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.96, 0.7, 0.3]], 
            LineBox[CompressedData["
1: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
V/pDSf7/8/uoXuv/zu//D/AtWcM=
             "]]}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, 
         PlotRange -> {All, All}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Delta]\[Rho]\"", 
           "\"\[Mu](\\!\\(\\*SuperscriptBox[\\(10\\), \\(4\\)]\\))\""}, 
          "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.84, 0.28, 0.62]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.84, 0.28, 0.62]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.96, 0.7, 0.3]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.96, 0.7, 0.3]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.84, 0.28, 0.62], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.56, 0.1866666666666667, 0.41333333333333333`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.84, 0.28, 0.62]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.84, 0.28, 0.62]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.84, 0.28, 0.62], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.96, 0.7, 0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.64, 0.4666666666666667, 0.2], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.96, 0.7, 0.3]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.96, 0.7, 0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.96, 0.7, 0.3], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
      DisplayFunction -> (GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ), 
      InterpretationFunction -> (RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
     "\" t:0\""},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TemplateBox[{
       GraphicsBox[{{{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.84, 0.28, 0.62]], 
            LineBox[CompressedData["
1:eJwt23k4VN8bAHAzgxlLCKFV21eLLZXS5lzRoqKiRUqWZEnWorIkshUplKxZ
I0t2ieS99p25kX3fQpJ9X3635/n9Mc88n+fOzD3nPe97zrnPc2abnrnaXSoL
CwuVRr7I93PKPIqL2zhwdWOe08HNBKwzdhxjbOHAXzIP00NJd3mMhQpt4MAj
mpYTPpBO/KR7fqcQB77xuuzBcNKPyn7MyfBz4CGb0sMiSJ8cVIxBPBz4u1MX
RiNJ8zAy1VU4OXAu1wbRaNLNu8QoN9k5cDfj3Qc/ko4+8z7JiMqBbw9ZLx5D
2tyQcctmhYEXrX/OGkv6qPsTDpcFBv7AAOH/zB47/MVnhoHX5+y9/Yk0UXJT
P2yCgZeK7+j455CBqrWfRxn4vioGFkfaiF0ecoYZeGPZ9+f/fEAs+X7ZAAN/
+FQs7p9XTm3d0NDDwLte7En55/K7PqW9HQy8Q+mq/z+/daVaj7cw8C2eIlr/
rPPxwfbVBgZuoeXM9s/ixX213HUMXIni//rf/Wf6rjpsqGXgLOuvLf5rbwFr
6d7dlQx84lrR2X9+tVOuSbaUgYse6n70r78aSnGuioUMfOZrgse/eOzQ33Dg
MjBwpuQ2u3/xGn3u2XX7GwO/MX/8YhTpnKilV/ezGHiVwRzrv/i6Fpoes01n
4NxPz4X8G49LvR2D7skM/EPnrnVhpDfRLvm/S2DgVjHO5v/GM+3k/vGUKAZe
GGtSFkjaQS/qQ14YA19rtrvsPemzzoIXqoJJ31mKf0e6M38m5pcfA99Jqef3
IR3fbXhl+jUDz8iweu9N2obSTKF5MfCAylNLnqS5Fb7d2uLCwMXtiu66kW7U
keCUeMbA11/gu/ecdOSz0Kwj9gxcV59QeUb6CO7If/UhA69NpqU/IW2AlMo8
9Rn4I8XCv/dIy2hnWgfqkPF2mhs2IL30VGxH7C0GXln7IF+PtF8e42nBFQb+
ejaWQ5M0fqL6wLwSA99z15r9DGkvLfludgWyv0LG4wqkrzskewueYOD9au9y
jv+Lb67PkLQsA2/aqP1LhvTG49fCDP5j4OyK8Z82kL5jsfey6DYGzh9juyxA
OiF6hdq0iYFftJ2XWEP62JpYA2VBBk4Li1672kTAzY5ZSQka2d5K2kAX6Sj+
qs6+FTr+4T3feBPp36fDfUIX6LgZ/38Ek7Rd8tlpngk6fkRSkxcnHfwsMHe8
i46v9Mg5hJDuzTA1i2+j4+jURzE/0uJDClvvNNHxCquFyBekv10efl5fS8cF
FuvX2ZBu3X7sfFYeHcfUdvZcIL2xuK3ZPoSOq1odWx1vJPszn+IpG0DHp21n
GvpJJ0i6nhj1o+Mp5dGOzaSP+UtGaHvScf2ndidx0jcNnxqdtKXj16wDXDxJ
B3NsnaVr0PHcv4pJIqR7T0x9wtXp+HvDARMO0uJWZZpPLtJxwe3yM/MNZPta
LPKGT9Px4Vp3ixbSrQn5rtWydNxE32Q2gPRG1TuCfgJ0fOjlggQ36QCPnJtv
een4vcCHnQs/CRAqXBv1jouOj8UU6g6R5pPDZQJodPyZrF99MWn27Zsvhk6y
4+/G1tyzJz023fAito4d32+jw9FVT4DZPiniUy07XmVo6VtJ+vc9V5H4SnYc
v3Lu1xfSA50HYhML2XFz6cRJL9Kt5W+KUtPJ6zH7fQ+RLgk9t/rNjx1Xy+3O
c6wjQKkp4vT31+x4r9P7UUPS+fzzr/I82fHUtL7+i6Rz3WM35T9nx1kKcvaI
kk61ZD1a8oAdTxP6upjzg5yfTuU9ZKqz4yuzVha/CAKs/sgM9wmw4zYqpqVr
mQT4tl9TWOBlxxUPlf2eqCXrtdougJebHedeZGPWkR7/XHz6KCs7nvvOouEt
aQuzG1Gvp9hw7h28tQKkzf8+u3X0JxsefqmLm62GAO/Oj+kXCTbcxmRpobua
gKTaCs671Wy4fz5LVB7p0WTB7NfFbLh9eYjoI9JmFp/W9Wey4RWd3wv6qgi4
P15b89qfDd8teMkkrZKsp+6p/z76suGcIjN1L0knEusdcrzZcG+m45ge6d+p
d8T73djwhRxpRX7S96xm3Y8+YsNfqcViphUEGE9uUei/zobzSxK7BMvJep82
TT+6ng1/4D7wdnsJAdSFaZ5FQTZcY5+H+kgxAWErDve+8bHhhYy1sZmkm+je
244zyN+3Tec4Q/rchqTXJ2ZZcbP+fbH6RQRIoVET7Ccrzvm6+vXLAgIqFG1K
WQhWvK4s/rgKacOzK9vzq1jxz9Q0K17S4Zd5WhSKWPFLwzmPfPMJ4NeXOquY
zoqXizyr88UJmPUw23nahxWPS1933D6PXA9ezTiyv2LFT/n4ix8mvc/3aWuJ
BysuTJ19P/6d7G+wt++ZZ6z4iSnXXn3SbZ+TWJTNWfGjjVLip3LJ+enHaNt5
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
             "]]}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.96, 0.7, 0.3]], 
            LineBox[CompressedData["
1:eJwtm3c41l/4x+3nUch8SCKlXRo0UO5DEQqFSiJRGZVKylfFY69Ikey9ZWdl
no8RQlaSvZKVvbff8/tdv78+1+u6z/mc+9znfZ9xXeeIGj7VeMBAR0fHyEhH
979fFWWOC6uirMT2PcV+FteowGdqO0UWZiVsHhjglzTudZsKpQiyEsYblu9c
aJycYHBZjMJK7EBd5Dga/1fVtHSCm5UYL3sr1Uxj+eELccDBSmw6eO3n0qAC
BzlbU3ULKyE1ua1Dl8Zt+/fR32ZhJczY1HVzaRxzyT/VhIGVKHaPydylSYWn
xmRdyw0ycbHDfiSAxtKur1idVshEm6Y5yy4tKrDEj+Z4L5CJQ0DhyaFxY8Xt
++EzZGJ99YjA7etUCBms5UqZIBPZFA/hbTeoYMIii/NHyQTdfZFjTTTeUNgl
2NJPJuzmxD46a1Ph+wPvyj/dtPrGM0svb1HB15nh5XQ7mQhiTn/3UocKh78N
1LP9JBOb8k2mUbpUWBi4biNYTybY7Q3L6/WoUMpUeehADZkwLZJ+waZPBe2L
ic4XyshEtKX0aqYBFfbcF5S4hsmESbj+oPA9Kkw4evTeKSATxdpVaoH3qeBc
ZibzOpNMmHc5EYXGVPgif3I6PZpM5LWZq+InVLAxjA4rDicTIReJS/HPqKDk
wHulNphMDHFq8IY/p0JPyULc0EcyoThfe7XYkgpscgW6wk5kwnfXum+hLRV+
3z2y5YgdmRDL8bgj5kCFKLvQXClrMqF/7fKNECcqSBG23NdfkAl/s6d0Re5U
MIKLVR73yYTGoJBfqS8VTuhnvwy8S7MbnN+f4k+FNeq+PfG6tHhmxConBFHh
YzGZWqpF668uh2VDBBWI8z8kli+SiWrbha6RFCrsOHcj3GgvmWDNGfh5pYYK
954duiYiSiZK/MslQuupkBSzwdAqRCZYGE24GJqpIMMeb6TMSybWbv71Zu2i
wu3uxaNHGMmEO3djOdcUFaK5a3sGNkiEqVaROHmeCv8UI7xDV0jEb7n6Lzwr
VHiTpjTPMUMiTvss6zxksoVgu8DC6V4SsVKX/0xA0Bb+ZJk9+dxJIsp5/kzm
idjC4RG5XfdaScTiDrET5nttoeDaqGNzPYng1/vvmugJW+jYLXM5t5hErN8v
tHqrbAs7vnW2WYeQCJNjlba+VFu4t5zucSqARGT/V1QV4mwLSUedz098JBEB
552UCj1tQcbvaKS+B4n4Lz/vqlywLdw2pprIvyYRH/H0FaM8mn+suxZJ2iQi
/JPz1MkVmn/n5xIITRJx9pbrQz16Ozj8vErnlTqJ8KDQ/0hhtoOC9mfFo4ok
wpIcueMFhx10JJU4/zhFIuomtV4G7LKDHWr3eD/ykAi9Ieoh1Ut2EOCWf9t3
Gy0en7ZFkq/YAaWMK/rTVhJR3xxfUn/VDjjPEicCGEmErqHbKXsdO2DZvVM9
dJaFMG/y0Xv+xA6m5lvc43+yEBU/4pIDA+zgyXHxxoR6FoLv9OguSpgd/Hvo
LPC5hoU4HzoiFB5tB4M9EvHJZSyEWAj7UEsqzb/vH8ozMlmIxAwdo55vdlAR
qrJZ8JGF0Gz8bmOwYAcXWyMVi96zEGHiYl4pa3ZQwr38rtiDhVDepy9MYrSH
Qtd4oRJHFsL19S26P9vsIcOcSbrCgoVYd1kKhUP2EKJQ/KJBk4Vo1zOXDTaw
h+fjJ0YHeFgIo+AFfZ0Oe/DpuiG3so2FiPt9K1H9jz18+fEmYBsbCxGuKC6i
9c8eplO+KUozsRDi3opdb1ft4dmTW9Hv55iJfAX+igwhB3g6aacr/YuZkB7b
U7dg4ACPp+vr3vsxE0HHTw1OLTmAZ9/c3lgfZmILq7rfLIMjJDdut8n3YiY0
mxV2ktkd4V/GvcN/XZiJjIhkDmNRR3j4fNFV+j9mwlV1/65NFUcwnRWW+3uT
mbgjZOaaEukIRvNmmdLbmYm/H+5Lf9VzAoaVeY5VXmYie8ro5alHThC+YfOw
gJOZcKi39qixcoJWkpfoOTIzYVL3oUve1wlUBFPfn19kIvps3c8a1jqBOEw8
Qr+YCHs5nQhnOWdYdHsipujNRETtirtujVzA992CLcs7JmJHw0F2w2sucNyH
2lHhxkTQt7LUPDB0gYfBXj6X7JiIGyemuaucXKAzJZVO+SkT8cHEcH6t2gWI
ponOy6pMxOmuW3s19FzBTejpp2usTAQh70hhD3YDnf2vXXSYmQgHSrBsUqob
HDnp/N89eiaisCtGzLTUDRouBd96ucxIVLJ8+Xtx1A34LSp3Bo4wEqux7g/t
Zdwh7rtIXO93RuLgO/qlswPuUG7ZkPP0LSMx4IQIlqse4GffEW/lwkioJHqf
Wzf2ABPPwQB7B0bCJfHS2HY7D2CLWnv98TUjES0ZUlOR7gGaPw5A7kNGYiS4
Y3COxxP699hXbqgwElDDktvS5wn0jSda321lJF5n/tdvFOoFV6fCf8iRGImN
7Yv3OYq8IGwbR9k8A81fh7PCY51ecE5tNEVvhYEwWT0aennne7CsiXI8OsJA
uPtJVsdEvIfRbzzHflQwEH7ZdKvkWx+gOX/emc2BgeiWEjVRtPeG3e333hA2
DETw8SqZDl9vMF9ufPbiFQNh/e3kS+8Eb+A4m3q78xkDQXmxdc2wwRuUs41O
JOszENeOqsdEiPpAcdrvzsvnGYjoS++E8qt9ICEmT8JjiZ5wteD03SHlC4Gv
5s9qztETZf/ODfVd9YW3aidkd0zRE6QeT94GE194vJSglDRET0wcPsOxN9AX
jl8J0KtpoSeuS+3blrfqC3mzlq5bs+kJ8qEffpVVn6BaXrLDw5ye8Gp4d+u9
kz8U8D/r1TSjJ76ZUhx6Iv0heSzp7w5T2v+8TogaYH/w8tszlXSXnsja/Uh0
ZcUfNEe5mWvV6YkRKcW/ni8CoNN7WpxNnFa+iK3D2TwQxntTHTxH6YjEgcNF
zz8FA2+h2c7QQTpii3kgv1RuMEj7H/ma0k9HlOee0jjVFgwuqp/H69rpCJ7V
mK6GnSGwKz9Wm6uGjjimeSs1LDEEtD6GiPsl0RFjV0wP/asJhQKFt+3hj+mI
U+jIErdIBPTvUn6ZbkJHBIxu78+RiADyGomz5D4d0bnvxFNrpQjQ+uKs0K9L
R9QEDT8yex4BE8L26WKqdIRFNql7vDICdi/955J4lI5wNT2rEfUqEniu19w3
6trEdLuieGuWo0BHclt0V/Mmjm52eKDGFw0RPJp9WrWbWDxgJyPTiWg40tSu
d6FgE79TjOgmmUaDovrojV2Bm3h4/eoLakc0WCmzKrdrbWI2tYh1r+oYKD6g
6nrtyiY2VTjSZjYSA0xk729VFzZxXO83HxdyLHhXCMjnntzEGmkihcaXYuHz
hQMyvpyb2NBbmmWpMha6zl86qla7gS2+REs2NMeB2E6PR9/KNnDTitCuD4tx
8HCtLvFcwQZ26lOS/igYDwv5N/Yd/ryBew8rBD4wiKetF0YiZLcNPKDMWq86
Ew/yJ525Si9sYOHkPT9rRBMhfl/Z/KmCdTz06eltrqIk0OZm15fNXMe1PnR8
OYNJsGXjRpVi0jrev6FslMyZDI9/jQbdDF7HZdZeZ70fJMNxJ2706s061tv+
N12LJwW+9hm8LZRZx6b2Eqf8bFPB9EfSbLnEOlYNMNcrS00Fwbx53R+H1/Gp
zZJP17pTwfqD+7HuHeuYmpHg90k2DRBkNG+uruHT6Spr4/TpUBVCJ3KhcA1/
mWpjkmpMh1duKm6Xs9awlIHCA5GxdDj0wndaM3kNn8sRvohIGeB5+UD5/ZA1
PCbSqiUpmwFXV9RNXazXcJjNMa+V1AxovRme+f3cGmbV7eJOD/kCI9yySleL
VvHfrsZR5rQs6DHd02iXvYrjg3x5jjRlwS+CrJORsor9L9+Sjp/PgpInPx9x
h63iMtIescjz2RBYbfK+mbqKd3ZIrZU3ZoOyw8cWbbSK6QfDd/7bmgvQZqXv
fnYVh5k4XFmUzIVTx+8M5x1fxSFmFnZmd3JBtPvAiqDoKo5YTGQP+5ILy1LF
O7voV3H+fFGZzN2vkDg9fN+gbAXX3RNM6m3Mg3ClunHvghXsX/Bo+RpDPnwK
z7QszVzBt6012pUk8sFeleq2J2YFzzzyVar3y4dbiTzJf51WcF+ISIjV/QJg
NZCdNVVcwW1Kjs77hIpgM3ePdZAsrX6AlfTM9SKY52Blrjm9gq30l18bfyiC
vsKflCP7aXbHf0vapGLIEzCVniCtYArjJUr0ejGYNny0f/59GTPhK9v2uxKg
fRV4loll/OJulM1qMgFKDaMxtl+XcUtIkJr6TwL2NchVecYv4wG9+ggb0RIY
qJ/kiHdexosVDlskykvgbv3lkA65ZZzePPmdbW8ZXFVfPGootYyXnpvOjWqW
AdRH4eHjyzhia/b6E8cyEK5f7p8XWcZkud95FgNl0FEXf5BzYwkvHQsNwqnl
cKOOMfdi/hIuvF6ftWlUAYpqaUo1GUt4of2kRmhkBZyq02m/lkiz90bPcHVV
AG9dxvqdgCWcyn5B1utGJTT90L/4ynIJ6+cbaJ3WqgLVHwWNKSeXcIz7vsdu
NtVwTtX4nuShJXzFevG4emU1HPnBPZ8vuoQ9q/sHDnLXwJYfpgJVnEt46kLe
/iNJNVBVy6/fP7GIiyp52TtHa+FircUYJWkR26ob1TTH1EOY9t5E8ehFbKyS
IB+/Wg9LAy0PFIMXcRSzIrX5YAMkr0v1vPRYxI6nbXhjHRuA7xhdU/OjRWxS
l3o9X7YRBr09c32OLOJFnbsjzs1NgIRlX3wWW8T7fqc262/5CUGfJ4+XCi3i
KzI3mmbQT1Ar0/g8zbaII0ZVv11J/wm5cwKhV8cXcMNx+mSOgGZwuxnrwJG6
gA/J5e3F71qg/88N2Be3gEP4lHRONbTAuWfktfNhC1jPq9LKjec3TLk9emnm
tYA3V0/q1IX8hlv5J0xqnyxgK613ItvzW+HQzmLVt8cWMCWCfyJGtAOcEp9u
idq/gO1VbI8sP++A7lOilXkiC1g+u/yK2rcO+KjmhEa2LeDq/XVpjGadsGar
IqE0NY/VfjZ6tVZ1wY/+FgGWjHl81VjlNr1OL+wKUOu2SJjH2wnp+lvve+GF
akV0X/g8fvLlTYXut14Q+potXuQ1jy84XZszkuiDh+98L754TLPf5ClO4e8H
lrMaz/r3z+O7lSbma/QDoDP+/dRVkXmslJx+20l+AFKi5FaLKPO4WSmltdJx
ALTYT7gEMs9jn8VcIWfyX4jq3xZy9c8cntFs+TcpOAjw7kdlcdgcfuPsZ7j/
/jD4yCu8O+I3hz+O/L5Tlj4Mg4uFGkHv5rBU08HcvRvD4GWY3PXSeg4fDVHa
B8Ej0HnGY/aIzhx+H/ywtK57FKz6lUSC+eZw0puczI8e45BxptzyP89ZHHVI
QLC8aBpUtH/fZneaxTuVzf6GT05Dv9Uoin4zi4U+Z/xqE50B3nzOrfUPZ3FQ
l+WQkesMWJ7TC9+nPIuJtgcqnTdmQVpuofIX8yy+MHkqroNlHkpVDmyXtJ3B
0XWj/KnxS9Ck51kwZT6NT2pduGZwjw79ehtbw/9wGt82FtKkOtKh1tziDlnD
afw53gxlRNOhHq7pVU+NaXyvgk3r5gAdGvt2/dxBiWkcUnndPdCIHrGIixQZ
zE3h8QOrb8KeMCDpjYziJsspzH/R7kOfOxOSP5/maLo4gTvv4I6fLWQkM2KW
fW9wAldZkwROr5GR5KcjQ3q/JnDoDXMFX1FWtH88UUUjcwLnReQ4yj9mRWyh
MVwyTycwa5Eu3y36Lej3WmA429A4rqg2P8F0aCt6XOhUkNYyhv+7d1ZZ4Dk7
emByYTzx2xhuoawtcvqxozu8DCIxWWPYZvLn6kIeO7r22NYhwGcMh+xsvOZO
z4FOC71Wtlcbw6Z3/W0L3nMgeuunvzUq/uHv8hwby/HbkJ+Mzux89ii+XOiv
/r6fEz2g2/uGO24Us3JJF/yd5kSS3yYZjvmNYnm25BBxei7UqObMbWI5ig97
jIv7i3AhNsP0E+2nR/HcyekwfJsLObixPCvOHcE6I8Wtao1c6MmvL2MuecP4
u4F0y5t0bnQ+yOZFdOIwPjsZ96K7iBux6Sut4cBhnHXx7oNjNdwocbhr6/Ir
mh2OVQX/5UYDq+TDj6SHMVdCo0nwdh6ks1vfVL1gCHvN6L7ZSeVBl55uHeQv
GsTmHINeFmd5EdnF0LY3aRDP7LI1vX6RF1WH5AkkBg3iXtUXKcJXeZFatfFl
aatBzBzqvGlkzIu09pan60oMYl1RdVzjy4vudli/iUz8i41ZtpyvG+VFu2d+
8j4M+Is1KtMnt8/zoj/kw6knXf9iD0Fho8ubvMjodFtv2f2/mNFjL+jz8CEz
71OKgyJ/MUPzLgElaT70+tIE52G/AXw7+uzWrY586Nwdhc+zTgO48uB7swQP
PrT+IuRCocUAvir75ewhXz5kF6ViqXptAN9jyC9sj+FDrutxHU/ZBrB/nYnF
eDkfUuLdeHF29Q+2psvjSq7lQ1sOX+egH/2Dt8owuqo18yEvbUY5n8o/eJsx
e6bsHz7km6kfl+XwB7duTVaq3uRDN6pzwMb8D66UtG2OZaEg/j72NoW7f/AT
/src++wUFMRRuPX3+T/49W5dFU9BCoo0FTBfXurHaxMC/PYSFGRo93RL6VA/
jjbibH4pRUFi/hXRb1v68VeGo29UgYISyl+07Mjqx7fPeN+IVaGgVJFGGdmn
/ZhVb3NpXp+CVtj0eW/e6cdH7XfajtynIIWVsbGnqv1YhnQjhjCloM5mcljk
4X582XotdrsFBW15i+iYh/twtO/2ty+dKOjGf3WtO3/34QvtR7Y6u9H8u6+b
cbqiD5/ymv/7nycFnQUrQ5OYPvx8dOwtyZeCjObSymvu9mHuhpWGH5EU9KXv
fOiAeh/OffRYdzGGgtbral6uy/ZhMelhNqYECvJNHNp3bGcffqYaWlmRQkG9
fi83L7H14bcKPyqt0ynosBNj693VXsw0M9vKl0lBpXdE3H3aerHjl3Gh6VwK
4riSYpBU1YsVR2suSeRT0C0pGeny3F68vTTHQruQgmL2fefuiuvFIVI6oXeL
KWiK5+a/+U+9WL89puQyQUHn6P+WcTj3Yt3Myq7tpRTkOvE8ZP+LXvxJ6/Rk
dRkFCX/3Ur2l0Yu3BXON/KqgoIc5Qvuey9EYZ/w4VkVB2dGfN94e78XREUwR
j79TEJ332d/RIr2Ym1J9x7Oagq5QK9IKOXrxpW9MrO9rKOjY7wTOpNUevMN8
OfRFLQVVZJSXdLb14CcO4jvP/6AgPc/e5xxfe7DodTOXYRrPGa3tQX49WCai
pM2yjoI85AR+mb/owYHPX/EP03i3kKRLtEYPLjq2F52rp6C8BfUzv4734HRP
fy0LGl9tfDTMsq0HT3n+vf6OxkNJroFnx7vxK1sjhbc0prpEqzys6cbdq5li
D2lMMcCrwYnd2Koncf4IjVNkOpJ/uHbjCBWj/CZaexcpi3qbD7oxe5jyy9s0
7pzi3nbiYjc+a7VwoJLmr0WNOGG4uxs/bb7WykfjLXEq5r503dj1qKPLJVp/
I+2Mdld0d+FzkrOndWnxOHvb4ediYRf+fVd1XJMWr/pTYU4Hg7sw3LFNEafF
04gz/9TtV114hJT3ZqySpp/RX4OeN7twnfFj3Xe08fD9Nu1ffKoLO2apanF9
o+klgl15iqcLa6hrmljRxq/09cEV0ZlO/KA0O7S0hKaP6wpJmg2deAueXJ7E
ND0cM9B1Tu3EmzuKHeho+hD+G1A8/LATqzLeOFmTR0F3p2t36F/uxAqJr6+n
0PQWtU736tfhTlz1e5uVZTYF7aOYSpSOdeCHL6lNRTS9muwO/XD2RweWUbpC
OZdKQZ/FG8dTUzqwytOX5pFJFCR+SSoh+EkH9tf85yoaR0HPNM2YudU7MDu5
+Oq5aFq+6Ecauh3rwL3ri5dlIyjotBXrzpdT7fiYcvPCYiAFnU9s81Z73o5Z
Chzn5Wn5R81mnyzXaMe+Jq77A2j5SZTIXZGRaMcpU49rmmn5e7E9keXAXBum
O6/lyWRD0+PW12/oLduwl3/ivOxjCtI1E3yQ9aoVxyr67DmgSEFhr9RKD+m0
4iyFEYZlRMtHZweRSOlWzHE6fClDhoLuh422vVv9jZdmRG92HqegR/X5asY2
v7Hu/gMyvLT56/WJ22cF7Vvw62P1AkLDfKjw/PtPHwxa8NQBn/sv+vjQhnLZ
DIt8C7bykQ7NbudDDoaHU2YZWnAdNZdrlja/vv24KvrD6RfOsw7Nu53OhwLn
g7fauTXjd1ePyMw850NE7LCHmlEz1n7fOnDiIR8avn6KbefFZsy5/l/8TQM+
dDanji1/8yeuiStovq7Oh1os6TnmLH9i/463D0UO8SHuJSNOkwdN+OdNL1hv
50WeKyf4rso3YMt1ycDwQ7wo6zP1k/CuBlxeNRrQLMyLcrL9Drev1tPWKiPh
WW5edN3y+xFei3r84J2E9PgKD/JZFD/mZlCHL3+Vkmv7zoPYVpYlnsnW4qFL
fvUp93jQ5sb782ipEudML9HJuXGjmNJbfkZfKzFfLTWl6zU3UnbZM+lpVYlD
7hGfH5pxo4/suRFtSxX4y+c2wRsa3Gi/UDejxfI3nFhz6oXlDm6kLnWkOnal
DGtLt1WufOZCskMfUigrGJe8TSNvITiRTQN9bzJjOq4yESHBJ3Zk6NMddNU7
FV59Y330xoEZ0a85HZ6JSIPbJwOoP/WZUcMXvm5l7XRg3y7aeuY8M3omVPjk
n3EGMBY9Ed6/xITSJ8kfxF0zocfw6snkJ0zouF9UU9a3XHD+w1iacYcRBUyP
Jt0VJSDD1HUsUpUe0Xnycio/ICCHuaz5xlF6ZLJP9sWJRAISzeSN97LT0/Ld
+xzDiRKY+nCBl+sHbX9YfuZHNCoF9lC2PUfV6JBAgNPEoH45vAhlH/iYtAEB
ssInzMKqQCnfx/Lv8gp8fsl/vrarCq5dcl3sKl+BwmRO5cM7v8M/lW/6fB9W
oE+Q0WAk+Dv0eFZ6yO9fgUOLQx8eBFbDY87Gh5Hay1CYljGl51sLlo8GdMsq
F+HZh93a+xUa4Pt//A/y2+Zg+bBId8v9BogTrZqXTJkDh8od912cGkDFXC9g
0W4OfDd4n/0ta4B3kj1R1w/OQd5jklu0fCNU3Hx8xspmFhiUx3JFUBNoytCv
PZSYgY/0OfwCMs2Avh2X10iehNPLga+f6jXDz39W4Z/0J6F9yqarwrYZ0jvu
PnbgmYRdvQrRL8ubIbH5SscNmwlILf4l/lP1F+iUbHPs0R6H6jfzCl53WyBU
1EuB4dg/eGLRlvDXoQXMztyUjx0bBa5HRVvPx7ZAjcGVeyOfR0Fbx7nx30gL
2NZsaGocHIW/Z/n0lC1+g4HN4UafoyNAtyD5gsmlFaaatOR3aQ5BzLjA79sJ
rdAkUTz4WnAILv1dk8qsboUzMyKTpv2D4NVcvmmwrQ0Oro870L8YBKFMLQ8c
0EY7F7jZrIX+hTPPXkS9TmqHm190li6xDUC7sTZz0492WnxeN7/s/ANU/XMm
B6fawT1bVftAyh8oV2MSb5XsgPGHO/fyX/0DGkd9804Vd8CKHPn4RnA/PBnN
bJhq6ATWvoZ2+st9sCF5KDt+phO27daUy9rTB+9sIwLv8HbBdEv43K+1Xkjm
fWdYe7MLXpH6d91L74VRWaO5+O4uWCphT3cV6gXjjwIC+mPd8NU6Q20/Zzcs
dHmt8XH0QN2Jg5y2dV3gcoC5r/ZYDyhWW37xfdcFcUXTidIWPcBrzxk4zd4F
A0PVMpSVHribK6Ynzd8Jx8OK0wYde+Hzo6haDZV2sCpbFi317YW803ulQ3na
gRiW9A2N7YUDKpzBLl1toC6RZKVV2QsNIo+6xC3a4EmVv1zplj64OcgYGxXb
Cikzz36GeveBUWi0nOfe3zDHn6zwKqoP3F67XZ1apJ2vzw/lamX2gXNWgdXv
6haoddUL2fqrDwruZ4YceN4CY0IqD14J9IPmNCpMrPgFhy7tWdQK74djH87z
NTg3Q4imBg9HWj8E+FQJShk2w7a79scqi/uB3WROflO2GeaseoyluvsBDq/Y
hy3/hKLPwa07d/6BQV4Rti0WP+EqB2/+YNAfMNLdrpn4sglKBS+0hH/+A/x2
+Vfv32yCU/ufz2jn/wGejNjOR1JNIIgaDtW0/YF0BrMu3Y1G+GPuGZwmMAC3
vqfXJXs0guUvJhsrvwG49CvdEzIbYLhPIvBE3ABI/8xX1Q5sgNsThtmj2QNg
lkX5kWbbAIhUMq77awBKnoiM86s2AKuUzR05XpruzkRse/qrHkJC5mGLz1+Q
dhvas9egDkruDTKEvBuExa2XOy6W1wASdmdPDBuEo+h8m1RQDRCthwVy0gaB
g3GC1+cZjVXNjzY0DsKXGiZ+Y+EaKD6zdpOJMgRWw1EcdtRqyN/KnfI4bAiY
l32l7ql/B+mKrNxXaUOgsz9BbeXQd8izu1nqQgyBSfbTtT6W7/B1PuR3RP8Q
sL1S4QjHVZDTs5/h175h0E7bdStLsgq+ZJ6/eT5tGCK9ngi9PlIJJ5/0GqgQ
w5BuyHIgga0SMg44Pr7ZOAwpVRf3CYxXQHpolb357DAUXiuqzE+tgFRXzeTY
MyOw6Qp/5yQr4PNtU3oOYgTS7xTKBlz5BlGMn5K6G0ZBnTgTzhhTBldiD9/9
3jsKt071exV7lsGCYilv1tQojMkHC0a+LAOVt5M27pz/YFgr3bTjUhnMcKpc
lbz6D6xAbHL7RClcEN6cc6//BzXJu3c8kiuFgbOmsqfqxmCyqpSegb4EvNo3
Z0S6x0DOQDiIboKAs9Z+8VsmxuCy+tvzQh0EeOIyzl72cehf2QhIzCZAUlH4
z1vVcdiZNPKG7zEBzpo/XXtrx8FXoj9+oQDDvifnGz1qJkA1PYntT0IRKEqF
Ku7rmIDjoUvXO9yLwIhpvYAYnQCtVlOOjYdFEB9UGDfPOgla87+sSo4WwYFK
GWt9pUmwN2MQPZNdCAd3Se+X+DYJbx/d2xlQUwAU02BZM/0pSBXzdT3Omw9x
apdfSRtPwa+Oo139y3lwWnI1k/R0Clp0/WJyevLgxqbOwSjqFHw7Yh1UkpQH
fp8EeX+HTkERulpyRyEP+EsDR2ibYmjOVWh3on4FgR0Bvry3psG1w8GPh5QL
qb/tKzwMpiFnMhhHTuSAgu+jJYaH02D/KSNPvSUHnrOD7vTraSCfDbmwJS4H
fmz+3VMXMg2RN0+UzCrmgMOARKZr7zRsf6SV9dArG8ZT6htXjGeg4Hqile/J
LHB6mMf4/NkMTJAXjxfszALB/dGnRqxmQP2MK14lZ4FShGXgb/cZ2JbwtvB7
TyZE+ew0yEqaAatFaouvVyZo//doymxyBh7eu5X4beoLlCLStj7LWSAJzod/
rMiAialRvkrqLHyNFGzpzs4Awcg6oRSXWYjMUok7F5sBz+n9Dr3ymwW1XSVp
x5wyYHepmCJXzix0LDmnTslngP0FeRu5+VmYCiw98L0sHZCizb9Iizk4PSiT
ZxSTBo8X7s64vpmDqWDQUnJNg4C4i8tmjnPAavn6P+WHaTDFwkaS/jgHuttN
shOPp0FEZdDupi9z8ChZLqerOBU2lb7eYpiZg75Jvvbp3hQovjxbafhsHsbm
80lV0sm0dY6zYsZqHo5bXY4VF0mGPTri5Q7289B4r3gyizEZ3ExMiSifeViS
VB0Q+ZEEGs49X/uz5oE8T1Q/NEiCweKaRMPleWgfk7yb8f4zcJyM8TB0WIBa
F+ZP8/SJgPJK3GfeLoCA4Ndm5tEEsEA9rg4fF2Bo7TTziaYEaFUTdIqKWYA5
7cD031EJEPXog3V/xQJwrkk7GSokwOlYazPDrYvANPbR8Nr7eNAXuK5u6LsI
Fuu5J7+eioN9Hx/vNghZBLlHO+yUdsfBBLvTvH7MInz58nVkjCMOqIyZwXpZ
i3B/32a2+XAshE1wDms3L0L7vNRXk5BY6CyvtVPnXYJtjjFzS6RY0Da/+OWc
7xKI+bi0s41Hw66x284yIUuQHiHgvNARDcNGFtrSMUvwYB9X/HR1NPynG7Vx
JmsJ+l6VMgolRoPfJbrLEs1L0Gr4gARG0fBrZ+Gfg7zLcGUMlaX8iQKNagk+
ft9l2CEqppA2Ggm/2tKqxoOXYV/tkVeTHZGgPXLYujx6GSJC5dVlf0SCHlns
j3nmMtRwGkeT0iPBRJE3o7ZpGZ5dUzh3yTISbEvnrjhwrcB+y5TZx8yRkJyf
7TTutQL6DkPyY0cj4Fj1ibPlfivQRu8z/WdXBHxpS/kXFLYC93RYLIZ5IuDr
UqyGUuoKmIknmB+bC4ey0367on+sQLD6rvwdXuHQ/sWyUJttFfat9SkGVYQB
KenMXJn7KiSIfTloqxwKH7zHwy76rAL/rQOt1OOhIGgVrfwtaBU+K0QxB/KH
whGFbeEVSaug0lpuLDQYAho9g8rff6zCyMdEfl2nEAjj8Quv41qDi+313HHf
gkHSek6lLXANLmUlL0fpBEGx4ef5W1FrkHYoaEvhxSC4pHw3ov3zGpyOKj86
Jh4EOpTa+Y6CNWD+UK7gzRgEdunREd1dayCRUbn5LyUQagY0Fv6IrgMrj+L2
OpZAMFTNiJxIXIcPTSJEWJU/2O83EO3OWAeFZk2XLzn+EEHPFfkjbx0sLkS0
/I7xh67sZxHJ39ehda667oa9P2gLHw9/OLIOwUUJJ8Vk/EF1MjVk8MAGOH+L
yBjP8IOz3sn+3fEbcPtWZkJF0ie4+UiXvy5tA6a2pLSMBn8CSwU2/6LcDfg8
Fmkt7PkJMpcf+YVUboDxqe6ZzMefQNzw8CedoQ04JLTQ+Un8E+yR+OzTsm8T
UhSf2R3I9gWOX/Hv6mI3wc8mjHfPj48g4eLNZJK6CVYrez+NF30E7TNv3tDn
bkLj9kKRqtSPEB2oZipZtQkNbMkcKR8+wtk78xeDRjeBK5v7leT1j5BhIbrx
hZ8O9Wazjh3q84GOtSfZVF06ZF7W6a3A5ANPfv15VnOXDqXm1IVOL3gDXar2
EYEHdMi1uyUracQb9unLR2eY0SGFRdJ35XpveFbC5z1ApUNG14smDwd7A7NL
4WOVSDrUoncy5M0pbzi2bYsYZZAO+f9bWx60+AC7TmbUq43Soab5PXefmnwA
zuvab1wn6BDbZH8so94HmAqKa1paoEM5ZUS4uuIHSN93wb6DRI98vMTWLbZ/
gJOy1t0RB+nRoYL7AlWO70HSbCLgsBk9Sou7c2bPaS8Q+/Dp4n1zeqQaO7W2
IeoFvJnnpkJe0iP3J/+lTLJ7wdzS20scVHpkpWXxZtvgO8h22r8w5UWPvhbW
OSn6v4PTIXc1c9LpkdDXWmO7dU+Qqmlil5ujRwcyHVYDWj1gbmhhz4klevTa
R++TYJUHpDLtkBZdo53r9P/JJed6gJjsPSN6JgakZMYfsOnnAZwZs8UlPAwo
fWwq7P4NDxj0430mL8GAYlWOWu9ofQs+hjeaLjxnQFLluRXtg+6gavt6WMKS
Aa3u2X7xQqs7kEPCNva8ZkAz3qe35393B5tfg4eYHBgQp9xe/6ZkdzBR+s+x
3JsB+bUYW6dYuIOseICkQgYDerzAN7nJ6A7/ltv8FKcYUFAy3a1ScTc4xBCc
4DHHgHbGl8lU7XIDky26+Q1LDOieeaRkF7cbDAh2d+nQM6L/GqOOSS66QqdM
v9hTbkZ0OfcS9iVcodZm9Iu/JCOSL1fdzXvDFVLpV+uGrRhRaNfp26keLjDG
Wth71IYRnVsYiba2dYFD3DYzz+0ZkYgwoaNt4QJxuzf51t0ZUdd9kf4zt10g
7AKjHlcwI/quL8zid9gF3jtv/SdVxIjmPGuVy+uc4RmrEMmDngntS5ShBAo7
w6utOo6uzEwouCH/3RdeZ3BgD9h0ZGVCpxOk7Fq2OMNHLt4lay4mJG6emHV+
0QlytrONPBFlQobw67lbgxOsHVyr1pBjQrrOeA/Z2QncVDq9BO2ZkFkGF/XV
vCN4XxHcyu/MhDQfve9uGnOEIDVtVx53JnRxR1PJqQFHSNJotmXzZkKW0dfm
+H86Qp1O7bONCCY02CugoJrhCLyPCjX6CSZUSjL59PKpI4R7hFA+0zGjMM/z
014zDsDSyubow8SMctJTH5z45wCPxWwmX5OZ0bMYw9OdfxzgbJFe1WVOZkQJ
smhR+eUADRPCr8dFmJGh5wUrj68OwKAR2XUcmBGfpKz/JzsHMBKIi8m1YUaf
RZ4nJFIcoPY+hSvCnhklqMp/UOV0gJMZLjZuzsyo6Fm8xDKrA2wqG9+49Y4Z
JQ+oBRuv20PAmwPk1RBmpJuQ8zxiwB6quz8/ki1kRqPVuxyoWfYgHpt28tsK
rbzKxM/6W/Yg0FUYxLDJjEQtU6jjmvZAz1fNgBhZ0Nq9yyk8avbQ7DTQlL+V
BTFNvHV6JW8Pr+9vt0gXYkFLaneiPh+2h8o9jpnBsizIbExoJWzTDu5G3ZB8
7sCCHEzTtbNT7ECl/V5ImgsLCpwdrulIsAMJbnOm8bcsaEPD8vKWGDtgcfBo
Nv7Igpo5XO/ZBtlBsgHxQi+GBT1Xyoz97moHS7sOZStVsKCXinrkznt24B2+
fkpkCwmtHnSUHxK1A8VGVzIvBwn1l6qJXRG2gxUG7g4yNwmd3DFckStoB4ZG
++xmtpNQ88FLytE8dnDyqHr1t4MkxJU4IVLDbAfN+RF3HiuTUJ2RxOn8Fltw
Gzt0wkCVhPijONd1GmzhnHA2441rJBQ5Yr2HtdoWYuy/J8AtWnsc/W7vimzh
pdLMDLcpCQWoNHudjrUFSssF1zw3Egp/LeBO/s8Wqkl1t1I9SUheIDmbam4L
VCntI9EfSGiDonmC4bEtDIU8bvQMICGVyKO8Jwxs4eu9TzvuJpCQnoKSnfgV
W7g1PZjGUkVCbw+/nowXswWOPeYOqzUkRO/vRjcrYgulWqtaU/Uk5CN3yvDy
Dls49HXbSttvEooyvSooxm0LK9SzF1OGSGi8Z+7lSzpbCGF726pJIiN6r5mO
gB4qvN8paVm8lYyqKxlZLnVQwUG8m+cgJxkdbNjax/ybCsZXT6pvCJDRC8O8
rOw6Kpz0bf+WcIiMjpNOiHUXU2FvrNM9nmNklJlQv4+7gAoCOeL0VAkywnGj
MzdyqbD+2+Gc5jky2mUktMCdToWqHYcz11XJqFKrl/d6FBUKjvy6aqJBRqHz
a3XbwqmQet52oukGGYmVfn/eEUyFj/o/Dybok5HOyV732E9UuBP9JkLDnIwa
vQZsmN9S4WrWXtmil2TU/NWTTcmVChe+1Xfsf01GTZHLycFOVDgwtId/3YGM
Bqy8pCxtqTB7qPZdvC+tfyfx3uWXVBiUsTzMHUhG/h8q/pZbUKH1yq7v1qFk
dFIDD0WaU6H4yQsmjTgyEvZnr31vRoV0W+Gows9k9Pz2WkHEIypEf6iC/Wlk
9BlzsJaZUsHti9CbtVwyintz4beMERXelFUIGBeSUZs2u7HPfSo8aX6W00iQ
UcoeFfMVQypoLpRPx30no3/qAzyb+lRQJD19z1VHRreHVguC71DhrMD2o9ZN
ZKQkvLqurEcFYWkzk2sdtPi9j37WoUMFrsv8LIU9ZPSAQ/hL8S0qMOmWRO8b
IKP9T3anZWpTYeHxIznvYTJS/m3+LP8mFUZs+HpWx8jI7tr0xv/eP+/0wtZG
02Q0dCLx3vp1KtSFmwo2zpPRo/Rv8VI0Lknn+SqzQkasHP7NrlpUyCopuh63
QUbuBd6zQ5pUiG8ynuVkZEWudmocOjQO+sPl/YbEikaj3op3a1DBc65AfHAr
KyrhOHDnBY1tmY1qr3KyIkvq0XghGj+ncD4s4GVFVtEVPL+vUeH+/nzSvu2s
6Iz6xdRoGt88ez/2w05W5BYiZO9A4/9/H4Cstv/7v/cB/wND+7lB
             
             "]]}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, 
         PlotRange -> {All, All}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Delta]\[Rho]\"", 
           "\"\[Mu](\\!\\(\\*SuperscriptBox[\\(10\\), \\(4\\)]\\))\""}, 
          "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.84, 0.28, 0.62]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.84, 0.28, 0.62]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.96, 0.7, 0.3]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.96, 0.7, 0.3]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.84, 0.28, 0.62], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.56, 0.1866666666666667, 0.41333333333333333`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.84, 0.28, 0.62]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.84, 0.28, 0.62]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.84, 0.28, 0.62], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.96, 0.7, 0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.64, 0.4666666666666667, 0.2], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.96, 0.7, 0.3]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.96, 0.7, 0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.96, 0.7, 0.3], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
      DisplayFunction -> (GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ), 
      InterpretationFunction -> (RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
     "\" t:4\""},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TemplateBox[{
       GraphicsBox[{{{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.84, 0.28, 0.62]], 
            LineBox[CompressedData["
1:eJwt2nlYTN//APCZaZlpsbQoH0uIFiJLQlHnpCStVJJCizVESBTRviglJZUU
lUi7olR6X6VF+zIz2ndp174v3+v3/P6ZeV7PzLn3fd7v9znPuc9zN1ne1L9I
o1AoXeTHv2/NY8tV5zbxENxSVAWGJRtWWT0eZojxENp98a3zFmxo8xp+LbKG
h+iJO35mhPS94prp3YI8xGm5HHY96ZijL5Ou0HgImT7vkg+kF49sXMPuYBBb
Sza6KpP+eTGgqLOFQVyQH7DZRTrInXZ3pIFBpCSq7BYnLVPQVclfyyCEHsxv
4yJtrBbnrprPII46FywVm7Ph0+E9IynRDOLv7QkhDdKOltERuZGkP/tK7iet
4SKsXfaKvF7maT5J0q3fJ2P/BDKIm8rD6hyk+VWyz4i5MYgOr8ePs83YcAmp
FftcYBBmLoN54qTXHjKKvCTBIPiySiRLz7LhvM22Exs2MQgtz+j5VNLxMYu0
unUMgmfTnxchpA8ue3/pmDCDiMWtfBdJm7ZM7djOwSA0kz7PzJ5hwyun0JyR
NjqR83HQfw3pznTrGx+b6ESg5aTBgik5316Vjefr6ITIf39qW0lnn+hzZVbS
iaWWl/QY0o3iB7UycunED3WX/VtJry1oqn8YTidM/0g5SZqQ8c2k+MiH0ImB
J4N9nKTjd7grDQXSCUVxlWWdp8n4gne8NfOhEyf9BuwiSJtefnTlsAOdcCiq
qREg/Ypn4xTdmE5oGXrr9Z0ir697XjhQiE7slFg+bnaSDSFeWaZBK+hEncKg
/X7SIvkC0S/46ISrkeiX5aRXHiB2h3DQiT20r3o5hmzgFl+v93qMm4juObAg
RHp4gu39vpab2I21u9P12VD4WnMpO5CbCJLueZOlxwa1urfq3/y5CZMzNYe8
SH8XnHma68NNvD+yw/Uk6RzP9+u+u3IT5adOL/ury4bUW5yKhXe4ibXbnvGK
kQ4/kmtbZcBN/NB/pHRNmw23B3f3dQlxE9/P/f4AGmx43mykMruCm2gyPTfq
QvpT+YOQFfzchNfJlsYjpEcSC9QVObmJ7TztviVH2WBz43S0/zgXoXzqlnGl
Ohtu/nU6o8jiIt5eZIkVqrHh+khlhX8wF+GSqi94EbPBt31c4t1zLmKGN+rS
WtIJ1f85ZvlxEfnuPzSrERv6U8/L/PbgIsJ1lhMHSV+9PeWpeI+LEF52V4dP
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
             "]]}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.96, 0.7, 0.3]], 
            LineBox[CompressedData["
1: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
R1F/FQ/+7335/wMZ0yyc
             "]]}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, 
         PlotRange -> {All, All}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Delta]\[Rho]\"", 
           "\"\[Mu](\\!\\(\\*SuperscriptBox[\\(10\\), \\(4\\)]\\))\""}, 
          "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.84, 0.28, 0.62]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.84, 0.28, 0.62]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.96, 0.7, 0.3]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.96, 0.7, 0.3]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.84, 0.28, 0.62], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.56, 0.1866666666666667, 0.41333333333333333`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.84, 0.28, 0.62]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.84, 0.28, 0.62]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.84, 0.28, 0.62], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.96, 0.7, 0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.64, 0.4666666666666667, 0.2], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.96, 0.7, 0.3]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.96, 0.7, 0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.96, 0.7, 0.3], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
      DisplayFunction -> (GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ), 
      InterpretationFunction -> (RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
     "\" t:8\""},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TemplateBox[{
       GraphicsBox[{{{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.84, 0.28, 0.62]], 
            LineBox[CompressedData["
1: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
             "]]}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.96, 0.7, 0.3]], 
            LineBox[CompressedData["
1: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
XNcAIw==
             "]]}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, 
         PlotRange -> {All, All}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Delta]\[Rho]\"", 
           "\"\[Mu](\\!\\(\\*SuperscriptBox[\\(10\\), \\(4\\)]\\))\""}, 
          "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.84, 0.28, 0.62]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.84, 0.28, 0.62]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.96, 0.7, 0.3]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.96, 0.7, 0.3]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.84, 0.28, 0.62], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.56, 0.1866666666666667, 0.41333333333333333`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.84, 0.28, 0.62]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.84, 0.28, 0.62]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.84, 0.28, 0.62], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.96, 0.7, 0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.64, 0.4666666666666667, 0.2], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.96, 0.7, 0.3]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.96, 0.7, 0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.96, 0.7, 0.3], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
      DisplayFunction -> (GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ), 
      InterpretationFunction -> (RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
     "\" t:12\""},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TemplateBox[{
       GraphicsBox[{{{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.84, 0.28, 0.62]], 
            LineBox[CompressedData["
1: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
93/1/wGC+YWQ
             "]]}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.96, 0.7, 0.3]], 
            LineBox[CompressedData["
1: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
             "]]}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, 
         PlotRange -> {All, All}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Delta]\[Rho]\"", 
           "\"\[Mu](\\!\\(\\*SuperscriptBox[\\(10\\), \\(4\\)]\\))\""}, 
          "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.84, 0.28, 0.62]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.84, 0.28, 0.62]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.96, 0.7, 0.3]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.96, 0.7, 0.3]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.84, 0.28, 0.62], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.56, 0.1866666666666667, 0.41333333333333333`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.84, 0.28, 0.62]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.84, 0.28, 0.62]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.84, 0.28, 0.62], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.96, 0.7, 0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.64, 0.4666666666666667, 0.2], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.96, 0.7, 0.3]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.96, 0.7, 0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.96, 0.7, 0.3], Editable -> False, Selectable -> F\
alse]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
      DisplayFunction -> (GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ), 
      InterpretationFunction -> (RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
     "\" t:16\""},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TemplateBox[{
       GraphicsBox[{{{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.84, 0.28, 0.62]], 
            LineBox[CompressedData["
1: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
             "]]}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.96, 0.7, 0.3]], 
            LineBox[CompressedData["
1:eJwtm3k81c/3xy33XmTnuvWhQguVpZSkhTOyFELRIiWlEhWRUpGufQllS/Ys
IZGsLZJ5WyKyZ9+3kOz77ne/j8fvr/fj+ZiZMzPndd5n5vwx4qb39G+yMDEx
sbMyMf3vq6XJo7oszkH4r+6M2jrmDEIW9An2rRxEY+Bwp+eMM3R7TUTRhDmI
zq8PjJaXnOHRz7oFOQEOoqh0UJSZ3QXennidZs7CQYx8t6ry2uYCa+piwo29
7ERN6b6D/hddIPP4/sn0eHaiO7ok+3u1Cziaxkfnv2En3rMoSdKbXOCkC/VU
RQQ7sdY5MaPd5QJdBXOJg0HsxMbcljK2cRfgUvl2easbO/HXQseWg9cVzEDt
p88NdkLRvbRA6YwriBw7/8ZsJzuBZDpP5XS6wnXrPWdExdkJ+R0ypvlDrpDy
do2leTM7wRSmb9E45QpHuZPMNKnsROefz94H2NzgUue8jDQrO8FnxU7E73OD
CKewvMluNmL/8KsvFh5uIPKjveVpJBvRnC5BX1Nyh+uL6T4HQ9mIwzwTf0la
7pAi4640FsRGlBuevbj5vDscDZGJNfFhI0bd5148s3KHS7eemR+3Z7RX1RoJ
xLhDBIfYPJshG7H6QGLRk+IBIrrXqUGCbESa4xO9gz0eEOqVeymYl404/4n3
1YsxD6AV8ce/4mQjZneFty8sewCfIiEXyspG2BlOfmHa6AmUbVv0oqYpREVR
xZsuHU+YmG30TvpNIUaeCKkM53tCSZTW+rcgClE1qTjxJc0L1JpjNb6/pBCU
mXtD5/O9oEBg0S/fh0I0FFbpsld5QZ5n0uYCVwqxqy4pN2HUCzJsSEdKbCnE
5XNhNytlvCFSPf9BjQGFaHGLF+3L8Ib7o3LD/YIUokvpx+bSsucQ2HFeZYmX
QgScJl2La3sOmZUOobxcFKKOeooaNPocJj/80DhCohB+eQ4SOfw+YG11Mf7l
DJkQO774as3IB+6NO10+0sDgwDsT3yZ94O5kddXLEDIxXFk4GLDPD3x7ZnYm
BJIJto3rqtrqfpBa+59j7gsy8StaVnWLkR/8y7gu9ceDTLwvlwrndPOD2/fn
PY88IhOrTBoF1BY/sJjeqvLnApn4SfokOeX5AsxmLbOO/EcmZA9v2Jmy+BJY
lmZ5lqlkYqlnTq2Twx/erDne/sZHJhoaXmXO0/yhme2F+DF2MiG89lfQWM4f
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
2cdF2pokZCxd21F80AlE9898UztDQr6+Z6TL9jrB8SMjqQrXSOii/km+3Tuc
wEur/YWwMwkNUQ0pajxOEHBKmHOjOwn17/z2M4nTCcJ1DT0FvUloPl/kswCH
E6To19O5Akho9I8W3xqrE1QZVVivxZBQDUcMy7kZOlDv5On3EiQkY3UpP6Oa
Dlssl6o6i0mIKbJ9q/EvOkjcU9Ru+0lCX8+IxtFK6XDINlu1voaEzpjkkbPz
6WDkkCpf0k1CBlpP516n0eGNTyTtPRMZxff1XmQJoAOlmcs1kERGW9W+Tr/x
o8PdHY7j9uxkxHPn0LrWczoofjf+qc1HRlnq6EaZKx1qxrbaj4qSEblA5vCt
R3RQOPpyoGE7GSVxe++3fkCHSM91/XxJMsrI3hHgYUMHC7FuqZd7yUjUZeZx
2x06sOjHduwDMtIv+Ve78xodzKP5tf5TJSOtYx2/w67QoWrY+RPzCTJ66rBn
v8hlOkS4mr6s0yWj67usmTQu0EE+Z7vKgytkhGQ6q47q0iGcOfjDZVMyWvjn
HC18ig5MuiRhdTMyyg/Z/IOiRYfKgf4pISsyOvbJT4hNgw5mmxLffnYko2//
VeUmKdOh4gaNP8aZMZ+twuHJY3TYn+Hh6OVORhNf0rhOHqXDuuat8xf9yCjx
c3/mFkXG+JCmQpUAMnorU+MeqcAY33ti755XZHSAQzJt10E6hDrsYl+OJCOR
OU4mi/10WCsNfdAXw1iP0aE9W+TocIPK0fPrLRmtLbKndO6lg9yHv18jU8lo
+3XbTG8ZxvjFixLu6WT08tx/R2ylGePVywMts8mooZEufFuKDuWd7+8o55ER
b+jxIfpuOuyTEmmWIMiorUmkKXoXHUIe+ajxFpOR/buP4r8k6bBStJw+X0pG
w+5dP0kMvs53d0v3LzIaGwmv1JZg2Lvc7v2zmozsLnfti9nJsJd8ai79NxlJ
XvgyzczgkNk807AmMhq8ARttdjDsqchUO7eRUTA1MnJ0Ox1MX0Qdvd1FRicW
WN0fMfhnK/c7/T4ymsrIreVhsKzkM+rRQcZ65vjdsrbR4ZXtmNP2f2TE4moR
dZPBK/jKKOc4GQnt3Cu6k8GmXNUXZ6bIqCmvc8OUOMOeIZS0z5HRQWAxrWCw
bMLH/T+WyEjhi5xENoM3deSFs6yTkZpvFlcyg5mFylkQKwWV39n84wODh081
3XZko6CV6g9nChlc79Zfl8tJQd4ledkDDM7PmzyywEtBX2YzJoQZ8yfNrMUd
pFLQ2xgOdhMG+0tzcdpuoqDQFIPVTAbb3/jPNn0zBfnFHPhNY+zvRqRE26gY
BWm8uOr7nME69QdUpXZS0A+bBCkehr8UuFRSzHdT0KXp7qxYBoup6QomyjDm
u0Hepc7w74anlxz65CjIpmGTzwKDZ7LM+8QUKOjspoPd3xj6lG53zYpQpqCL
p/Ut7zP0Tb/kL9JynIIsR/6m3GToHx4U5Uo7QUEc2Z//mu+hgxXrF4MAPQri
9Fi1fsOIH8OjP75VGVDQgnxKQR0jvlRs67ZzGVIQ780lURoj/qh9I9MeVymo
Ya2IWsmIzzXhpUvFNyhovlAwCx2gw6A+WzGzBQWFTHy0KpanQ26hePBTGwoK
5j2nu3KIDlfjzsvfd2HsP9xKUhbooNV6PfKjBwWdCc6Q3K5ChwMCNqTR5xSU
ZnHZfJcqI9+4+NTfCqKgCdGF79dP0CH1GvHA+C0FPdiwTS36NCPewirbw99R
kMuliRohAzrQa1vVmlMpiPzkfEnUOTroq8xSDXIo6HOrJ1OXER0WxPbknCyh
IOHEs7qSZnToNTy0xaOcglLGJb5ts6DDL38196IqChIZGfgue5cO0Uwm55Sb
KMj5ilnU4/t0UOsOmj0wREFiO+zu19PpEPBm9aDoBjYke7N4T2YUHTRqPdmp
PGwoJPuP9YNYOiyxCLSxC7AhMTjjpp7AiFczCaep/9iQf/TqHuoHRv6Q0Sv/
sZsNafqzbL/xnRFvuTFX7mqyIYuTw7r13XTwGtkjd02HDSnsbDXy+EOHY1tz
WM+fYUNBfx5EnBimw1vnsndwkQ3pR1U3zk/T4eHJqSkBCzbU3H97nY3kBLRG
Vc+vXmxIcEqrLPA/Jyhnq7qY5suGbqY+l7612QmeHTaUjvdnQ+ZVZ8xURZ1g
MPJurW8ow95ctqXgTif4cv2VyNV3bIjr3yMQkHOCi5MDHyk/2dAGDpz8QssJ
IrmeNxuwsSPFScnTca6M83eLvF0+Jzva4SzJOurJOF9lOwV387Ej3qvL+4/7
OsGt0/v11jaxo33JxyS4XjnB/uDWH+/2sKOb74/vEU1ygp8iUlmrOuwo4tG4
wclKJ/gm3XDaXJ8djbKaGyvXOUGaEn2s7jw7mpDfbQJNjPPa5PfudybsiDXv
+V3THie4Eu8Qo2/DjnqPPw6TYdwfpvdU+CUFsyNnFu3SLnFnGDhqJyUQxo5o
uPCct6QzNJ8SK3saxY5yxjeYK8s4Q77VA5J+Ijuy+n1Y6RfjvuKVudlh5TM7
4jMRzrQ+7Qxbj1ian2ljR4JsvjDt7Az82hspeV3saPcZ1+cXvZyBdLkgXqKf
Hcktzsz+euEMfx2FupZH2FFh+MCFhghnyC74fi5xjR19HTC75/DJGZLqbk3z
sXIguctCf1S/O0N4H3+AAxsHelx/pWZTsTPQyWYVp/k4EJC/HBiqdYb7NL7b
36gc6JLgVEFvszPckMxlk/iPA51ZFpn62+UMFxRvJPhv4UDBJIfq1QFn+P/3
Buh4x62b/3tv8H+5dokm
             "]]}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, 
         PlotRange -> {All, All}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Delta]\[Rho]\"", 
           "\"\[Mu](\\!\\(\\*SuperscriptBox[\\(10\\), \\(4\\)]\\))\""}, 
          "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.84, 0.28, 0.62]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.84, 0.28, 0.62]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.96, 0.7, 0.3]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.96, 0.7, 0.3]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.84, 0.28, 0.62], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.56, 0.1866666666666667, 0.41333333333333333`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.84, 0.28, 0.62]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.84, 0.28, 0.62]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.84, 0.28, 0.62], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.96, 0.7, 0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.64, 0.4666666666666667, 0.2], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.96, 0.7, 0.3]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.96, 0.7, 0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.96, 0.7, 0.3], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
      DisplayFunction -> (GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ), 
      InterpretationFunction -> (RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
     "\" t:20\""},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7531796398853817`*^9, 3.753179693332499*^9, 3.753184278505821*^9, 
   3.753184595615938*^9, 3.75318482765732*^9, 3.7531860864060383`*^9, 
   3.7531865541248913`*^9, {3.753186630812541*^9, 3.75318670881885*^9}, {
   3.7531872188032503`*^9, 3.753187259873406*^9}, {3.7531873074981737`*^9, 
   3.7531873200581207`*^9}, {3.7531873780393*^9, 3.753187395331501*^9}, {
   3.753187431732424*^9, 3.7531875462826633`*^9}, {3.753187592162703*^9, 
   3.753187661428224*^9}, 3.7531897493586187`*^9, 3.75318995637671*^9, 
   3.75319002631898*^9, 3.753190200093437*^9, 3.753190230574441*^9, {
   3.753190498361513*^9, 3.753190588805739*^9}, {3.753190621151832*^9, 
   3.753190637039469*^9}, {3.753190683787693*^9, 3.753190735119484*^9}, {
   3.7531907896596193`*^9, 3.753190857345511*^9}, {3.753190930167099*^9, 
   3.753190956858706*^9}, {3.753191015301526*^9, 3.753191026915517*^9}, 
   3.753191485455038*^9, {3.753191521616253*^9, 3.753191538398967*^9}, 
   3.7531920006074257`*^9, 3.7534209888707027`*^9, 3.753421406326195*^9, 
   3.75342336831679*^9, {3.753423555145912*^9, 3.753423584802361*^9}, 
   3.753423628698626*^9, 3.753423660602457*^9, 3.753423700167604*^9, {
   3.7534237524388847`*^9, 3.753423775040831*^9}, 3.753423883282852*^9, 
   3.7534239212691927`*^9, 3.753423985239855*^9, 3.753424078313376*^9, 
   3.753424354050235*^9, {3.7534250113221397`*^9, 3.753425028266386*^9}, 
   3.753425095457407*^9, {3.7534251265337048`*^9, 3.753425147653977*^9}, 
   3.753425179848241*^9, 3.7534254636619062`*^9, 3.753425509963664*^9, 
   3.753425557899703*^9, {3.753425620157755*^9, 3.753425660834362*^9}, 
   3.753425723202633*^9, 3.753425769271769*^9, 3.753425811960441*^9, 
   3.753425851061913*^9, 3.7534270914546757`*^9, 3.7534271770300217`*^9, 
   3.753427242526596*^9, 3.753427289265573*^9, 3.75342734807189*^9, 
   3.753427426838222*^9, 3.753427482896563*^9, 3.753427521259961*^9, 
   3.753427580786623*^9, 3.753770265237158*^9, 3.753771793961858*^9, 
   3.753773434881215*^9, 3.7537736019199677`*^9, 3.7537740110409517`*^9, 
   3.7537740782167597`*^9, 3.753774883233934*^9, 3.753782537651023*^9, 
   3.7537826863732*^9, 3.753782720490012*^9, 3.753783282107379*^9, 
   3.7537841167593927`*^9, 3.753784713446762*^9, 3.753786526266313*^9, 
   3.7537865748392553`*^9, 3.753788384179276*^9, 3.753788592640956*^9, 
   3.753788664100762*^9, 3.753788732942449*^9, 3.753788945328249*^9, 
   3.753789189373168*^9, 3.753789629824863*^9, 3.753789691665002*^9, {
   3.753791135201021*^9, 3.7537914362835693`*^9}, {3.753791555416074*^9, 
   3.7537915776605377`*^9}, 3.753791608121526*^9, 3.7537920614356213`*^9, 
   3.753792302879883*^9, 3.753792459829215*^9, 3.753792566927129*^9, 
   3.754153274222694*^9, 3.756556144163477*^9, 3.7584527517376432`*^9, 
   3.758452862664836*^9, 3.758453006434968*^9, 3.758894415562251*^9, {
   3.758894542842504*^9, 3.758894569240321*^9}, 3.758894612472797*^9, {
   3.7588946560790157`*^9, 3.758894674420836*^9}, 3.758896219805608*^9, 
   3.7588962576531973`*^9, 3.75897735788144*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{TemplateBox[{
       GraphicsBox[{{{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.61, 0.79, 0.47]], 
            LineBox[CompressedData["
1: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
g///vytMHq6sNDRyg/8DAVKacA==
             "]]}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, 
         PlotRange -> {All, All}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"vel\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.61, 0.79, 0.47]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.61, 0.79, 0.47]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.61, 0.79, 0.47], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4066666666666667, 0.5266666666666667, 
                    0.31333333333333335`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.61, 0.79, 0.47]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.61, 0.79, 0.47]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.61, 0.79, 0.47], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
      DisplayFunction -> (GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ), 
      InterpretationFunction -> (RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
     "\" t:0\""},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TemplateBox[{
       GraphicsBox[{{{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.61, 0.79, 0.47]], 
            LineBox[CompressedData["
1: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
jY4b/vv+9j+WMvSb
             "]]}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, 
         PlotRange -> {All, All}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"vel\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.61, 0.79, 0.47]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.61, 0.79, 0.47]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.61, 0.79, 0.47], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4066666666666667, 0.5266666666666667, 
                    0.31333333333333335`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.61, 0.79, 0.47]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.61, 0.79, 0.47]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.61, 0.79, 0.47], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
      DisplayFunction -> (GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ), 
      InterpretationFunction -> (RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
     "\" t:4\""},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TemplateBox[{
       GraphicsBox[{{{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.61, 0.79, 0.47]], 
            LineBox[CompressedData["
1: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
//tf838MwvAv
             "]]}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, 
         PlotRange -> {All, All}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"vel\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.61, 0.79, 0.47]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.61, 0.79, 0.47]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.61, 0.79, 0.47], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4066666666666667, 0.5266666666666667, 
                    0.31333333333333335`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.61, 0.79, 0.47]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.61, 0.79, 0.47]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.61, 0.79, 0.47], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
      DisplayFunction -> (GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ), 
      InterpretationFunction -> (RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
     "\" t:8\""},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TemplateBox[{
       GraphicsBox[{{{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.61, 0.79, 0.47]], 
            LineBox[CompressedData["
1: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
PwMr9qU3w///X0OZaPIblPnVDP8HyX3o7Q==
             "]]}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, 
         PlotRange -> {All, All}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"vel\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.61, 0.79, 0.47]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.61, 0.79, 0.47]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.61, 0.79, 0.47], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4066666666666667, 0.5266666666666667, 
                    0.31333333333333335`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.61, 0.79, 0.47]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.61, 0.79, 0.47]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.61, 0.79, 0.47], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
      DisplayFunction -> (GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ), 
      InterpretationFunction -> (RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
     "\" t:12\""},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TemplateBox[{
       GraphicsBox[{{{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.61, 0.79, 0.47]], 
            LineBox[CompressedData["
1:eJwtmXk4Vd/3x4VCISQhKQ0SPpQoEutSREUaRFKkMk+hUVJKKUOTRJEGQzKH
yLRuyJR5KPM8XrN778E1/c73eX5/nef1rP2cs/de7/Xeaz9Hysrl1FV2Nja2
yBVsbP97HtXnPzQvxUN9rWKZairdDOvtvCe5JXmoXUZVU5FazdDlNxkhIs5D
1bt9vmXAvBlultbN7hHiob647vbJ/XUzRB15m2TLzkMV9Ssl/NhaYElni/jf
Hm5q2xc7lc8tLfBdW2kq5Qs3Vf2LQcizoDbYePBspPUOburh6tk+XmYnbDS8
LPx6HRf1/iO7S84xveA2tofWt24VNTA4+fltvkGwZjqlHRBbSS060Vx4w4wG
fhIub07ycFK12b18HnWNwYraPU2Bazion04Z8uv4T8LXqJ97/WdXUOtMjcMi
VadhrCvJJ4DGRrV52Blx9jcdhHOdNkUMsFF/HjYS7Sqnw4G38lmJPWzUqJDV
121q6PDY4NtYVQsb9eFFk98urXTYkh1tKviHjFsonbCeosOZ1+EKIfFs1PRN
P04NSjAgR+dZS6QjG1VKWFxRzI0B64z/XLFuX8Z/xPIXIWEmmCmv/dLesIwW
FmpWZ8WY8HHd6e4zFcv46JwGW4gkE+TrWi4cylnGVUU+6dy7mKB7gnZ2S9gy
ehjn9mdrMOGWPo9+y5ll/BirfEjfmgntGkf+M6xYQtHkdcN5aUzYvsnf4Xfh
Eg48Kjxpm8UE+4WquIM5S3hE6fhWvjwmENlnpeW+LWGZvGiBTjETBFStN3P7
LaHvovnVa01M0FbyFSw4tISHfFInouaZECtdyFTJWcQJNY8hbg0CTIX4LDTT
FlH0G8/ujxQCVi+dLdWNX8TXusfzdh8mwLGR9s7k/SLqbay5qnGMgN2PhCi3
PRdxuW3jOo5zBGR1X3qWq76IMQnlFrvdCbCrjKcX7V3EpwKCtadvECD+k2le
KbeIDw05bV1uE3D3xVPFjo2LSBlJzgzyJoACqQ3L8wt45SZ7soM/AaXhbJsP
5S5gumxRecAnAm77HfU7lr6AjJYwpkwUAbIewVOnExYw6fNmRk4MAQHHZIqu
hC/g4VcNa4vjCTBinbB7fHcB3/goq9hmELBiIKwuyGMBN+3mds3KJOB7ba/6
W8cF/Mt2/tfSTwKE427yfzVfwGmNvMNO+QQ0mUSmlR1cwLq6av7qYgKeHhqW
qFNeQL8OH6gsJeCA4t7HLfILWPrRPYdaTkD4qhLTEYkFdPjgJPukigDLjPFF
3sV5fFawnwhqJEDwk6rNeuY8nnjU90L5HwEFAT41m8bm0cn7YURVEwHbr4h8
UWifx8NhOe87WwkYFtLUM8qbRyOPXB63bgI67bbV3s+Yx36XvpLUHgIaqdxm
qYnzqJVjHdjfS8Av53oHoQ/zuPSHL09mgIDM31kM7ZB59LHXH98/SECixAcv
96B5DJjdmHFgiICwctvnDffm8f6PL8/FaQQ8lzIUXXlzHr9XjtnOkOx7a+8n
FZd5vPN4zqpkhADPalFZa5t59LQUs3w2SsA16aXvIRbz2FHmqk0ZI8DGq1e9
xGQeOZMYI0MkX2goLZo5MY+PeR01H40TcFouyUBGbx5dQ103Ck0QoO/z+q8p
ZR4rLVyuvCIZmm9ZPFUl455xLM5JAlR2Xxz6uXseuUqU0Y5kuSeHrtFk5vHa
p4VXVJKlOmRY4lLzyF7ofpZnioANKvwPj4nNY/U7edohkvkC6GvuCpLxDJaC
K8kcvU3BCTzzWOEvtzKI5Dm1/E3tK+bxR23/8QiSJ158ieFjsXCFqezA/7h/
0E9Rc5qFT5YbUp6T3KrpnOVMYyF/ekSAG8m1b05rRfawcL2b2DldkktGVcur
W1i4ziSHuZrkvEOSp9nqWbgnt1Hrf/NNe8fRtvsPC++dfy9hTXLc1NCVS4Us
fOG95eoCuf5IvaqxlzksjNUwZ/mQ/CYy7UZBGgsp2bty5sj98ydCl6fjWbj5
lv5jS5IfGNzz2xbFwuZUqwOZ5H7fjLoseCachWOdVRmLZH6c5vXePQpmoXok
/NtL8rm4dQn9j1hY/fG7rzOZ3xNsc8oiXix8y9SpdhsmQMekI0/3OgudZzlU
rUl97FkZVx17lYWGou6dYqSedpoHmTZdYGHxZc2W5j4CNqW5d3OfZSEoOTr6
kfrjuaRJt9Nl4UAWVqV0EbCcue3uO00WJh6kmsl2EsDk51n5Zx8LJRPamC/b
CejOrReR38nC2yl8tbItBPxb9zPSfDMLJ1o2V54n66HS/oNM4AYWfnm5zejO
XwJ+itodGOdiIdcVXyvvOgKSXQwLJdlYeO3UXOLVGgKii/cePzE7hwkv7WdV
yfp76bF0IWVoDrXrJDliykg/qnn9wK1sDjl132mHIOl3RrBujjqHd8WdWFG5
BOjV0KK8s+bQT+CmcDjpB9I1WqUBsXNYwXa6RDuNgL7qCf5Y3zmMGa/47BRN
QMOJ9x//85rDyFapnmzSnwqrdZXSPebQ5Yr5gYkIAj5XRxj/ujyHTYnhIbwh
pB9UHwtv1ZpD33NXc9b7kv50YuY/K7U5rKf/vPv2Pqn/6s84tHsO42qity17
EiBZPdfD3DyHLTH/Xnq7kfqrit0lsDSLEvpL4loXCThbxZF5OHsWg+TXtMft
JkDXMFnvT+osOnD9lLsjS9ZPlVnLybhZdLX0tFLYTvpbVerixdBZtGzbL629
gYC6SovDt2/M4jo61Up4gQkGlTm1iUqzKMMx3X6SyoSDBjaXlWXJ791yiT5L
njfylULMbKlZPAQFcpopTFhdaSdaKjCL7ZtyzmZEMqG0YoNFz/gMemx+q3/I
iwmHK9xHReJn0HRdUVGrEhM+mO6IU/gygyPTtRVp5Pk32/f3qu77GRy+3m7u
toUJCYtqndf9Z9CXfXb/Fz4mrFdkq2twmEGlML0NjQMMGHgZkPlKfgbf+bFM
nwQzwM8k2oc/icC8F5JCte106Ok9C9IxBD6xdnj5qZYOB125FzQ+EBhuEjFx
nuwHJv0crjsFEShW4rcQlECHc9l7bCucCfy8Nukr/TYdZDflGzxTJPBeWXVa
nwAdKnv+iq5KZeI1g+Aa9j3TsCXUsMP9KxOjKtfnaElNg4dB8ZfuSCa+ZX33
cxGcBomsDIW8ICbuzAhXDZuaAvvA4MMejkycaV60VUydglWqp1x7djJR/4/+
j5z/pgACK0vyPzAwgK0aeTZPQur+ohs3A+jIJetp7zcxAkdN/53ne0RHRQGj
3ZxVI9Bzi0b54knHArlle/+EERDOFlhTbU/HwxlRRvl2I3Dj4IVIaX06duoO
9hT20eCAFlHSuJKOahnShpntw1BwVEZM2XsaL7El9wp3DIKZg/pS2Y1pVC+4
xvibPwh0f8NeC+dpVOVo602JHITtlR6J/hem0Y3Wcj7x0iA8PvFLq1d9Grtr
A+WrBwbg6Bkz+1ezU6h5/9PfXmY/1F0IyJm8NoXwSe+yuUwfND6L/rPBfgoP
+0qsOsXfB02Z+a2aVlPYUup9yJLRC52CU/MBp6awmD3xWzG1F0Z/Gx/ctXcK
WTejc3PMemGVwua8S4xJPP1g/0291z1wYCk1v+7GJPL+bc+qEOkGDbk/VXPO
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
36GwBXgUmkg3w/8BVx1PUg==
             "]]}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, 
         PlotRange -> {All, All}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"vel\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.61, 0.79, 0.47]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.61, 0.79, 0.47]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.61, 0.79, 0.47], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4066666666666667, 0.5266666666666667, 
                    0.31333333333333335`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.61, 0.79, 0.47]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.61, 0.79, 0.47]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.61, 0.79, 0.47], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
      DisplayFunction -> (GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ), 
      InterpretationFunction -> (RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
     "\" t:16\""},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TemplateBox[{
       GraphicsBox[{{{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.61, 0.79, 0.47]], 
            LineBox[CompressedData["
1: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
             "]]}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, 
         PlotRange -> {All, All}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"vel\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.61, 0.79, 0.47]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.61, 0.79, 0.47]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.61, 0.79, 0.47], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4066666666666667, 0.5266666666666667, 
                    0.31333333333333335`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.61, 0.79, 0.47]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.61, 0.79, 0.47]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.61, 0.79, 0.47], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
      DisplayFunction -> (GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ), 
      InterpretationFunction -> (RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
     "\" t:20\""},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7531796398853817`*^9, 3.753179693332499*^9, 3.753184278505821*^9, 
   3.753184595615938*^9, 3.75318482765732*^9, 3.7531860864060383`*^9, 
   3.7531865541248913`*^9, {3.753186630812541*^9, 3.75318670881885*^9}, {
   3.7531872188032503`*^9, 3.753187259873406*^9}, {3.7531873074981737`*^9, 
   3.7531873200581207`*^9}, {3.7531873780393*^9, 3.753187395331501*^9}, {
   3.753187431732424*^9, 3.7531875462826633`*^9}, {3.753187592162703*^9, 
   3.753187661428224*^9}, 3.7531897493586187`*^9, 3.75318995637671*^9, 
   3.75319002631898*^9, 3.753190200093437*^9, 3.753190230574441*^9, {
   3.753190498361513*^9, 3.753190588805739*^9}, {3.753190621151832*^9, 
   3.753190637039469*^9}, {3.753190683787693*^9, 3.753190735119484*^9}, {
   3.7531907896596193`*^9, 3.753190857345511*^9}, {3.753190930167099*^9, 
   3.753190956858706*^9}, {3.753191015301526*^9, 3.753191026915517*^9}, 
   3.753191485455038*^9, {3.753191521616253*^9, 3.753191538398967*^9}, 
   3.7531920006074257`*^9, 3.7534209888707027`*^9, 3.753421406326195*^9, 
   3.75342336831679*^9, {3.753423555145912*^9, 3.753423584802361*^9}, 
   3.753423628698626*^9, 3.753423660602457*^9, 3.753423700167604*^9, {
   3.7534237524388847`*^9, 3.753423775040831*^9}, 3.753423883282852*^9, 
   3.7534239212691927`*^9, 3.753423985239855*^9, 3.753424078313376*^9, 
   3.753424354050235*^9, {3.7534250113221397`*^9, 3.753425028266386*^9}, 
   3.753425095457407*^9, {3.7534251265337048`*^9, 3.753425147653977*^9}, 
   3.753425179848241*^9, 3.7534254636619062`*^9, 3.753425509963664*^9, 
   3.753425557899703*^9, {3.753425620157755*^9, 3.753425660834362*^9}, 
   3.753425723202633*^9, 3.753425769271769*^9, 3.753425811960441*^9, 
   3.753425851061913*^9, 3.7534270914546757`*^9, 3.7534271770300217`*^9, 
   3.753427242526596*^9, 3.753427289265573*^9, 3.75342734807189*^9, 
   3.753427426838222*^9, 3.753427482896563*^9, 3.753427521259961*^9, 
   3.753427580786623*^9, 3.753770265237158*^9, 3.753771793961858*^9, 
   3.753773434881215*^9, 3.7537736019199677`*^9, 3.7537740110409517`*^9, 
   3.7537740782167597`*^9, 3.753774883233934*^9, 3.753782537651023*^9, 
   3.7537826863732*^9, 3.753782720490012*^9, 3.753783282107379*^9, 
   3.7537841167593927`*^9, 3.753784713446762*^9, 3.753786526266313*^9, 
   3.7537865748392553`*^9, 3.753788384179276*^9, 3.753788592640956*^9, 
   3.753788664100762*^9, 3.753788732942449*^9, 3.753788945328249*^9, 
   3.753789189373168*^9, 3.753789629824863*^9, 3.753789691665002*^9, {
   3.753791135201021*^9, 3.7537914362835693`*^9}, {3.753791555416074*^9, 
   3.7537915776605377`*^9}, 3.753791608121526*^9, 3.7537920614356213`*^9, 
   3.753792302879883*^9, 3.753792459829215*^9, 3.753792566927129*^9, 
   3.754153274222694*^9, 3.756556144163477*^9, 3.7584527517376432`*^9, 
   3.758452862664836*^9, 3.758453006434968*^9, 3.758894415562251*^9, {
   3.758894542842504*^9, 3.758894569240321*^9}, 3.758894612472797*^9, {
   3.7588946560790157`*^9, 3.758894674420836*^9}, 3.758896219805608*^9, 
   3.7588962576531973`*^9, 3.758977358785472*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{TemplateBox[{
       GraphicsBox[{{{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.32, 0.67, 0.78]], 
            LineBox[CompressedData["
1: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
             "]]}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, 
         PlotRange -> {All, All}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"c\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.32, 0.67, 0.78]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.32, 0.67, 0.78]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.32, 0.67, 0.78], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.21333333333333335`, 0.4466666666666667, 0.52], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.32, 0.67, 0.78]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.32, 0.67, 0.78]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.32, 0.67, 0.78], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
      DisplayFunction -> (GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ), 
      InterpretationFunction -> (RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
     "\" t:0\""},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TemplateBox[{
       GraphicsBox[{{{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.32, 0.67, 0.78]], 
            LineBox[CompressedData["
1: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
/9/3r/8HIV22Tg==
             "]]}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, 
         PlotRange -> {All, All}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"c\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.32, 0.67, 0.78]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.32, 0.67, 0.78]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.32, 0.67, 0.78], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.21333333333333335`, 0.4466666666666667, 0.52], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.32, 0.67, 0.78]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.32, 0.67, 0.78]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.32, 0.67, 0.78], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
      DisplayFunction -> (GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ), 
      InterpretationFunction -> (RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
     "\" t:4\""},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TemplateBox[{
       GraphicsBox[{{{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.32, 0.67, 0.78]], 
            LineBox[CompressedData["
1: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
//8/K/yXjq/LxfHB/wAOAH4q
             "]]}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, 
         PlotRange -> {All, All}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"c\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.32, 0.67, 0.78]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.32, 0.67, 0.78]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.32, 0.67, 0.78], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.21333333333333335`, 0.4466666666666667, 0.52], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.32, 0.67, 0.78]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.32, 0.67, 0.78]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.32, 0.67, 0.78], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
      DisplayFunction -> (GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ), 
      InterpretationFunction -> (RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
     "\" t:8\""},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TemplateBox[{
       GraphicsBox[{{{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.32, 0.67, 0.78]], 
            LineBox[CompressedData["
1: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
Qe6l9kV1Sj/4//+fBW/n9X6dXGH4H/lR0vs=
             "]]}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, 
         PlotRange -> {All, All}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"c\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.32, 0.67, 0.78]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.32, 0.67, 0.78]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.32, 0.67, 0.78], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.21333333333333335`, 0.4466666666666667, 0.52], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.32, 0.67, 0.78]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.32, 0.67, 0.78]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.32, 0.67, 0.78], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
      DisplayFunction -> (GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ), 
      InterpretationFunction -> (RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
     "\" t:12\""},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TemplateBox[{
       GraphicsBox[{{{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.32, 0.67, 0.78]], 
            LineBox[CompressedData["
1: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
zZ5o/u992/8DfP7ecA==
             "]]}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, 
         PlotRange -> {All, All}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"c\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.32, 0.67, 0.78]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.32, 0.67, 0.78]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.32, 0.67, 0.78], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.21333333333333335`, 0.4466666666666667, 0.52], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.32, 0.67, 0.78]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.32, 0.67, 0.78]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.32, 0.67, 0.78], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
      DisplayFunction -> (GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ), 
      InterpretationFunction -> (RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
     "\" t:16\""},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TemplateBox[{
       GraphicsBox[{{{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.32, 0.67, 0.78]], 
            LineBox[CompressedData["
1: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
pQYeZgY+njWkJEJykPWLzit4mNykvKy8xw9U7Z07lfp4MLg4VGe0ww/2J1Ts
M43woLg5csZvix+ky3mV7t/EQ5iFQDb9Oj8kUcYVmVnj4ajD2VrnVX6guILj
VLPDg0jau/rfy/xgl3Q/RMQBD4xlWwXuS/zwfXpq+b97ePjzVdmLZZEcT8rQ
Yt8VDwXma4KNC+R4fl9aph/gYdYiAYucJ6/nyMn66IOHdXn7eJM//NBqy8b0
JgAP//UhPWZz/CBZGuITFoyHdhvzLfdZfkjYW591eUrW9+PUQdoMPxxo3TYy
icDD2uFjc8O/yfHie+uUovHwkWBeIU7m1gkNMcGXeGDKlnR8NU2OJ1aRzJyI
hyU9eWpmMid4E2l3UvCwOHQ+4M0vfthvTLg/+QYPama008pktmWlG2/JItc7
tlBya4ofvll66bx/i4ehaBX7ejJLFM1+SinEg3MXfVg6mRO2TPiCSXj4oW4T
G0vmfbVvMU7v8ZCr0RieSGbbGLkDwwo8nCrociv7X7yRfMeLVWQ9qjW0x8ks
LnS8jw/DQ5DmLgsvOX/8w3DVow14+BQz3+FJ5t36HdJGIx4sb8uETJDZhvEu
11gLHrQ4mKQsyfv5Zjb0tOkHHjwCeweWyCyed3md9BMPvszU/q/IesSvVVkn
9uJBtln4rB5Zv10lkR8Bg3hIhsPfT5L1tY5MlXcYxQM+8vEjCrL+TQOH3+pP
4sHvuZv4OplF+X1Z5X+T/TxHWD4g1+ul+4I/7x88/BxyqeMi13MXvTlP/w8P
Rldosq+S623N8MNkdZms9ySkvvxHXp9dIvllGw/fhtmGzcn+4RiuSqI6wEPL
Yu4cJdlflP99owJqAjxcyi+uXuOHridTnZX0BKh5ctb5MdmfNVVLcptHCeBP
m+zhR/Zv7up+xjlWAtje99VOIvv7ke0xd9IJAsiZujmzUxHBNoVvcP40gfze
ONnqhSOCTpeUitBZAqzYBR1dJRDhtOoVlhwRAkTe2bspzkCERt6gsuSLBLgg
cflPE7kfSaZRx/uVCSDt/uDcH3K/JsWmBrFpEGBjoSTt7Eki3KOuMIi+SoCY
prSFiTPk+TT5dyXEkgAWIxIu/lJE2OfcNm2wJYDX+4eptueJ8FufpoHyDgF4
nFZFreSJUFnHHffYlQD5j4OzMsnzxTLDSNotkABhByXzVwyJoD1gk1ISQoCA
dfarGyZEkGJ2xc0/I0Cymvqtipvk+RMY3nU7lgAKuvmDT+yJUGiF3TfPIoDm
Rr6wpg8R4hO/DyW9JcBNXS7nj4FE8OsYUO0rJMCMhXcdEkYEfaU1VoNyAjzy
D/ueHEuEzdOC5ZpfCWAZyDMQWECEievnuUK+EeC88i+aqlIitESpBte3EQDn
FFB8pIIIaRQWhhd7CZBn2pRKQZ73qmOxa1IzBCCuF8ZyjJHPh9d7504dooFT
QffWzh4XAPWOUFrWIzSQMqge6EE+X7apmAdpmWmgnBTHOCIgANZ2fP7Lx2ig
sT7afpl8PkmKXP32RYAGlN87v5C4LgBdlW9u3tWigdOpMoFsyeTz6K+ghJUO
DcRf55wZzhQAhZPl1EZ6NCATu6pQXSgAWQHNbxETGpC/pblaXyMADzSXl5nv
0EAqm87tlUkBYOtRCf0URs73001/VlIQvtG0mRQ/p4F+NrHo84qC4HvhunBm
FA143SB2pWkIwu+Uux3PE2igwqChtMJMECpsXh63fEsDC14Pxo+HCYLJ0nQJ
oYkG7O5y65ROCkIKw7M+AxpaMA1vZikoFoIXXNIeNfS0YBvdmNtbLQSBoiMs
Aoy08OzPhRq+70JwW1fy6j4HLXxX/LEl/FcIJOMGvrwVpAUnHJvzsJAwNB0X
KtvToQWP9mqr+VJh+CzcrWuvTwunHuXE6NcLQ7Gi30KnES2c+y4VPNQlDLEW
PwXeWtBC0gN/LYtNYbiZ6f1G35UWpgp3X51REoEVwdaI3DhaeFFdl9LRLwLT
8h5CzIm0oJigk/5yXgT6Lp9ufpxKC48Iu6v+lKJQc+8+Tj+HFo4d3JJtExCF
sHcnvHc/0gKH9mtazceicFLOyV5vkBbqH/aUjRHFgOkSO6FqlBbihpy7RBEx
wJnVZvJN0QKNNytfrqEYzPr8N7rzl/z85kLc7EFi8L622jBnnxaMfG3/bI2K
QW7n7RVGajoQREsJrzfEIGmSKdqbhg6kfaeWP9KIgx/erlWXkQ7yvveMfjsl
Dm5sjA6fWengg2BL9JqQONjyV9LwHaMDzAyLlJEVB2NZ2+woLjrw3niwFKEq
Dv//vS206gx17eiKw/8B7hjkHw==
             "]]}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, 
         PlotRange -> {All, All}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"c\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.32, 0.67, 0.78]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.32, 0.67, 0.78]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.32, 0.67, 0.78], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.21333333333333335`, 0.4466666666666667, 0.52], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.32, 0.67, 0.78]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.32, 0.67, 0.78]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.32, 0.67, 0.78], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
      DisplayFunction -> (GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ), 
      InterpretationFunction -> (RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
     "\" t:20\""},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7531796398853817`*^9, 3.753179693332499*^9, 3.753184278505821*^9, 
   3.753184595615938*^9, 3.75318482765732*^9, 3.7531860864060383`*^9, 
   3.7531865541248913`*^9, {3.753186630812541*^9, 3.75318670881885*^9}, {
   3.7531872188032503`*^9, 3.753187259873406*^9}, {3.7531873074981737`*^9, 
   3.7531873200581207`*^9}, {3.7531873780393*^9, 3.753187395331501*^9}, {
   3.753187431732424*^9, 3.7531875462826633`*^9}, {3.753187592162703*^9, 
   3.753187661428224*^9}, 3.7531897493586187`*^9, 3.75318995637671*^9, 
   3.75319002631898*^9, 3.753190200093437*^9, 3.753190230574441*^9, {
   3.753190498361513*^9, 3.753190588805739*^9}, {3.753190621151832*^9, 
   3.753190637039469*^9}, {3.753190683787693*^9, 3.753190735119484*^9}, {
   3.7531907896596193`*^9, 3.753190857345511*^9}, {3.753190930167099*^9, 
   3.753190956858706*^9}, {3.753191015301526*^9, 3.753191026915517*^9}, 
   3.753191485455038*^9, {3.753191521616253*^9, 3.753191538398967*^9}, 
   3.7531920006074257`*^9, 3.7534209888707027`*^9, 3.753421406326195*^9, 
   3.75342336831679*^9, {3.753423555145912*^9, 3.753423584802361*^9}, 
   3.753423628698626*^9, 3.753423660602457*^9, 3.753423700167604*^9, {
   3.7534237524388847`*^9, 3.753423775040831*^9}, 3.753423883282852*^9, 
   3.7534239212691927`*^9, 3.753423985239855*^9, 3.753424078313376*^9, 
   3.753424354050235*^9, {3.7534250113221397`*^9, 3.753425028266386*^9}, 
   3.753425095457407*^9, {3.7534251265337048`*^9, 3.753425147653977*^9}, 
   3.753425179848241*^9, 3.7534254636619062`*^9, 3.753425509963664*^9, 
   3.753425557899703*^9, {3.753425620157755*^9, 3.753425660834362*^9}, 
   3.753425723202633*^9, 3.753425769271769*^9, 3.753425811960441*^9, 
   3.753425851061913*^9, 3.7534270914546757`*^9, 3.7534271770300217`*^9, 
   3.753427242526596*^9, 3.753427289265573*^9, 3.75342734807189*^9, 
   3.753427426838222*^9, 3.753427482896563*^9, 3.753427521259961*^9, 
   3.753427580786623*^9, 3.753770265237158*^9, 3.753771793961858*^9, 
   3.753773434881215*^9, 3.7537736019199677`*^9, 3.7537740110409517`*^9, 
   3.7537740782167597`*^9, 3.753774883233934*^9, 3.753782537651023*^9, 
   3.7537826863732*^9, 3.753782720490012*^9, 3.753783282107379*^9, 
   3.7537841167593927`*^9, 3.753784713446762*^9, 3.753786526266313*^9, 
   3.7537865748392553`*^9, 3.753788384179276*^9, 3.753788592640956*^9, 
   3.753788664100762*^9, 3.753788732942449*^9, 3.753788945328249*^9, 
   3.753789189373168*^9, 3.753789629824863*^9, 3.753789691665002*^9, {
   3.753791135201021*^9, 3.7537914362835693`*^9}, {3.753791555416074*^9, 
   3.7537915776605377`*^9}, 3.753791608121526*^9, 3.7537920614356213`*^9, 
   3.753792302879883*^9, 3.753792459829215*^9, 3.753792566927129*^9, 
   3.754153274222694*^9, 3.756556144163477*^9, 3.7584527517376432`*^9, 
   3.758452862664836*^9, 3.758453006434968*^9, 3.758894415562251*^9, {
   3.758894542842504*^9, 3.758894569240321*^9}, 3.758894612472797*^9, {
   3.7588946560790157`*^9, 3.758894674420836*^9}, 3.758896219805608*^9, 
   3.7588962576531973`*^9, 3.758977359157483*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Theta]f", " ", "=", " ", 
  RowBox[{"\[Theta]", "/.", 
   RowBox[{"Last", "[", 
    RowBox[{"FindMaximum", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"\[Mu]", "/.", 
          RowBox[{"solpp", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], " ", "]"}], "[", 
        RowBox[{"\[Theta]", ",", "Tplus"}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", "0"}], "}"}], "}"}]}], "]"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.75377027827*^9, 3.75377028857314*^9}, {
   3.7537703206823177`*^9, 3.753770365670905*^9}, {3.7537704495536118`*^9, 
   3.753770452785438*^9}, {3.7537705148712273`*^9, 3.753770518808569*^9}, {
   3.753770580381084*^9, 3.753770623862894*^9}, {3.753770705518293*^9, 
   3.753770778317918*^9}, 3.7537718318676853`*^9, {3.75377288154208*^9, 
   3.7537729266094017`*^9}, {3.7537730947978487`*^9, 3.753773136051693*^9}, {
   3.753773169320016*^9, 3.753773212912176*^9}, {3.753775046957383*^9, 
   3.7537750475644207`*^9}, {3.753789015488652*^9, 3.7537890185389347`*^9}, {
   3.7584530386330967`*^9, 3.758453039388829*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\)\[NoBreak] digits of \
working precision to meet these tolerances. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.758896263475792*^9}],

Cell[BoxData[
 RowBox[{"-", "0.12518562851330256`"}]], "Output",
 CellChangeTimes->{{3.7537732057095327`*^9, 3.753773213616373*^9}, 
   3.753773438217525*^9, 3.7537736117650642`*^9, 3.7537740175239277`*^9, 
   3.753774081072158*^9, 3.753774887022403*^9, 3.753775064205833*^9, 
   3.753782551267229*^9, 3.7537827251082993`*^9, 3.7537832867379427`*^9, 
   3.7537841204570293`*^9, 3.753784726845595*^9, {3.753789004503193*^9, 
   3.7537890194018803`*^9}, 3.7537891952807198`*^9, 3.7537895661878147`*^9, 
   3.753789635308894*^9, 3.7537896950194674`*^9, 3.753789731122357*^9, 
   3.753789826779365*^9, {3.7537911428359613`*^9, 3.753791184253605*^9}, {
   3.753791232844715*^9, 3.753791246011835*^9}, {3.753791295952841*^9, 
   3.7537913818260193`*^9}, {3.753791425856242*^9, 3.753791438920384*^9}, 
   3.753791582466054*^9, 3.753791614273137*^9, 3.7537924629052553`*^9, 
   3.75379249923522*^9, 3.753792537885182*^9, 3.753792569983601*^9, 
   3.754153277098702*^9, {3.758453012736458*^9, 3.758453040059949*^9}, 
   3.758894420370631*^9, 3.758894576052424*^9, 3.75889461628214*^9, {
   3.758894662685905*^9, 3.758894678131233*^9}, 3.7588962290804873`*^9, 
   3.758896263480115*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Theta]final", "[", 
   RowBox[{"\[Theta]pp_", ",", "spp_"}], "]"}], " ", ":=", " ", 
  RowBox[{"\[Theta]", "/.", 
   RowBox[{"Last", "[", 
    RowBox[{"FindMaximum", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"\[Mu]", "/.", 
          RowBox[{
           RowBox[{"pdeSolvePerturb", "[", 
            RowBox[{"ssvars", ",", "\[Theta]pp", ",", "spp"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], " ", "]"}], "[", 
        RowBox[{"\[Theta]", ",", "Tplus"}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", "0"}], "}"}], "}"}]}], "]"}], "]"}], 
   " "}]}]], "Input",
 CellChangeTimes->{{3.7537750855128593`*^9, 3.753775137868877*^9}, {
   3.75377518813634*^9, 3.753775236824788*^9}, {3.7537847321085577`*^9, 
   3.753784737936122*^9}, 3.7584530503516273`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sp", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]pList", " ", "=", " ", 
   RowBox[{"Pi", "*", 
    RowBox[{"Range", "[", 
     RowBox[{
      RowBox[{"1", "/", "8"}], ",", 
      RowBox[{"6", "/", "8"}], ",", 
      RowBox[{"1", "/", "16"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]fList", " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Theta]final", "[", 
       RowBox[{"#", ",", "sp"}], "]"}], "&"}], "/@", "\[Theta]pList"}]}], 
   ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "this", " ", "step", " ", "will", " ", "take", " ", "a", " ", "long", " ", 
    "time"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"muangleplot", " ", "=", " ", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"\[Theta]pList", ",", "\[Theta]pList"}], "}"}], "]"}], ",", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"\[Theta]pList", ",", "\[Theta]fList"}], "}"}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Dashing", "[", "Tiny", "]"}], ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "0", ",", "0"}], "]"}]}], "}"}], ",", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"1", ",", "0", ",", "0"}], "]"}]}], "}"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(perturb\)]\)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(final\)]\)\>\""}], "}"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.753770854554768*^9, 3.7537708552751617`*^9}, {
   3.753770891888567*^9, 3.753770924390257*^9}, {3.75377097668224*^9, 
   3.753771014718549*^9}, {3.753771052901045*^9, 3.7537710856828547`*^9}, {
   3.753771142327333*^9, 3.753771143553344*^9}, {3.753771224318969*^9, 
   3.753771326468843*^9}, {3.7537713730792522`*^9, 3.7537713778711967`*^9}, {
   3.753771427889377*^9, 3.753771449342223*^9}, {3.7537714864002447`*^9, 
   3.7537714869738083`*^9}, {3.753771818480998*^9, 3.7537718478321657`*^9}, {
   3.753771882572194*^9, 3.753771912262156*^9}, {3.7537720029921217`*^9, 
   3.7537720042054453`*^9}, 3.753772068624715*^9, {3.753772269360003*^9, 
   3.753772298091103*^9}, {3.753773627524068*^9, 3.753773631741493*^9}, {
   3.753774896151258*^9, 3.7537749680274563`*^9}, {3.753775282816423*^9, 
   3.753775295448752*^9}, {3.7537756135463667`*^9, 3.753775620464263*^9}, {
   3.75377569785504*^9, 3.7537757001037903`*^9}, 3.753776274658765*^9, {
   3.753777175745085*^9, 3.753777181706745*^9}, {3.7537773151242447`*^9, 
   3.753777325552318*^9}, 3.75378347942241*^9, {3.753783541499659*^9, 
   3.75378362350766*^9}, {3.7537836722865553`*^9, 3.7537836740341473`*^9}, 
   3.753784078913601*^9, {3.7537847457303047`*^9, 3.753784747166718*^9}, {
   3.753789915629043*^9, 3.7537899236922817`*^9}, {3.754153337106826*^9, 
   3.754153337499055*^9}, 3.7541533763145313`*^9, 3.756556262031448*^9, {
   3.758453144230933*^9, 3.758453191352208*^9}, {3.758464066182891*^9, 
   3.758464104919949*^9}, {3.758894211220031*^9, 3.758894223697138*^9}, {
   3.758894505332979*^9, 3.758894505451723*^9}, {3.758894744184864*^9, 
   3.758894744473606*^9}, 3.758896159007599*^9, {3.7588963343921633`*^9, 
   3.7588963344747477`*^9}, {3.758896446854084*^9, 3.758896446974596*^9}, {
   3.776151885186686*^9, 3.776151885593391*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "pdord"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Some of the functions have zero differential order, so the \
equations will be solved as a system of differential-algebraic equations. \\!\
\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/pdord\\\", \
ButtonNote -> \\\"NDSolve::pdord\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.753774941084422*^9, 3.753774968849066*^9}, 
   3.753775319436285*^9, 3.7537757191887217`*^9, 3.7537771866914186`*^9, 
   3.753782551767487*^9, 3.7537827313935823`*^9, 3.75378329194733*^9, 
   3.753784239535461*^9, 3.753784474904942*^9, 3.753789034460997*^9, 
   3.753789351005796*^9, 3.7537899628813*^9, 3.7541532772893476`*^9, 
   3.754153338733638*^9, 3.754153376885941*^9, 3.75845306145547*^9, {
   3.758453144858177*^9, 3.7584531916967154`*^9}, 3.7584640313331003`*^9, {
   3.75846406760741*^9, 3.758464084393249*^9}, 3.7584643532828493`*^9, 
   3.758894441170135*^9, 3.758894506283951*^9, 3.758894681161931*^9, 
   3.758894745153821*^9, 3.758896290307938*^9, 3.758896335278544*^9, 
   3.7588964475984163`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "mxsst"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Using maximum number of grid points \
\[NoBreak]\\!\\(\\*RowBox[{\\\"200\\\"}]\\)\[NoBreak] allowed by the \
MaxPoints or MinStepSize options for independent variable \
\[NoBreak]\\!\\(\\*RowBox[{\\\"\[Theta]\\\"}]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/mxsst\\\", \
ButtonNote -> \\\"NDSolve::mxsst\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.753774941084422*^9, 3.753774968849066*^9}, 
   3.753775319436285*^9, 3.7537757191887217`*^9, 3.7537771866914186`*^9, 
   3.753782551767487*^9, 3.7537827313935823`*^9, 3.75378329194733*^9, 
   3.753784239535461*^9, 3.753784474904942*^9, 3.753789034460997*^9, 
   3.753789351005796*^9, 3.7537899628813*^9, 3.7541532772893476`*^9, 
   3.754153338733638*^9, 3.754153376885941*^9, 3.75845306145547*^9, {
   3.758453144858177*^9, 3.7584531916967154`*^9}, 3.7584640313331003`*^9, {
   3.75846406760741*^9, 3.758464084393249*^9}, 3.7584643532828493`*^9, 
   3.758894441170135*^9, 3.758894506283951*^9, 3.758894681161931*^9, 
   3.758894745153821*^9, 3.758896290307938*^9, 3.758896335278544*^9, 
   3.758896447660722*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "eerr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Warning: scaled local spatial error estimate of \[NoBreak]\
\\!\\(\\*RowBox[{\\\"46.771632218834576`\\\"}]\\)\[NoBreak] at \
\[NoBreak]\\!\\(\\*RowBox[{\\\"t\\\"}]\\)\[NoBreak] = \
\[NoBreak]\\!\\(\\*RowBox[{\\\"20.`\\\"}]\\)\[NoBreak] in the direction of \
independent variable \[NoBreak]\\!\\(\\*RowBox[{\\\"\[Theta]\\\"}]\\)\
\[NoBreak] is much greater than the prescribed error tolerance. Grid spacing \
with \[NoBreak]\\!\\(\\*RowBox[{\\\"201\\\"}]\\)\[NoBreak] points may be too \
large to achieve the desired accuracy or precision. A singularity may have \
formed or a smaller grid spacing can be specified using the MaxStepSize or \
MinPoints method options. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/eerr\\\", ButtonNote -> \
\\\"NDSolve::eerr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.753774941084422*^9, 3.753774968849066*^9}, 
   3.753775319436285*^9, 3.7537757191887217`*^9, 3.7537771866914186`*^9, 
   3.753782551767487*^9, 3.7537827313935823`*^9, 3.75378329194733*^9, 
   3.753784239535461*^9, 3.753784474904942*^9, 3.753789034460997*^9, 
   3.753789351005796*^9, 3.7537899628813*^9, 3.7541532772893476`*^9, 
   3.754153338733638*^9, 3.754153376885941*^9, 3.75845306145547*^9, {
   3.758453144858177*^9, 3.7584531916967154`*^9}, 3.7584640313331003`*^9, {
   3.75846406760741*^9, 3.758464084393249*^9}, 3.7584643532828493`*^9, 
   3.758894441170135*^9, 3.758894506283951*^9, 3.758894681161931*^9, 
   3.758894745153821*^9, 3.758896290307938*^9, 3.758896335278544*^9, 
   3.758896450237051*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "pdord"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Some of the functions have zero differential order, so the \
equations will be solved as a system of differential-algebraic equations. \\!\
\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/pdord\\\", \
ButtonNote -> \\\"NDSolve::pdord\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.753774941084422*^9, 3.753774968849066*^9}, 
   3.753775319436285*^9, 3.7537757191887217`*^9, 3.7537771866914186`*^9, 
   3.753782551767487*^9, 3.7537827313935823`*^9, 3.75378329194733*^9, 
   3.753784239535461*^9, 3.753784474904942*^9, 3.753789034460997*^9, 
   3.753789351005796*^9, 3.7537899628813*^9, 3.7541532772893476`*^9, 
   3.754153338733638*^9, 3.754153376885941*^9, 3.75845306145547*^9, {
   3.758453144858177*^9, 3.7584531916967154`*^9}, 3.7584640313331003`*^9, {
   3.75846406760741*^9, 3.758464084393249*^9}, 3.7584643532828493`*^9, 
   3.758894441170135*^9, 3.758894506283951*^9, 3.758894681161931*^9, 
   3.758894745153821*^9, 3.758896290307938*^9, 3.758896335278544*^9, 
   3.758896450313744*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "mxsst"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Using maximum number of grid points \
\[NoBreak]\\!\\(\\*RowBox[{\\\"200\\\"}]\\)\[NoBreak] allowed by the \
MaxPoints or MinStepSize options for independent variable \
\[NoBreak]\\!\\(\\*RowBox[{\\\"\[Theta]\\\"}]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/mxsst\\\", \
ButtonNote -> \\\"NDSolve::mxsst\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.753774941084422*^9, 3.753774968849066*^9}, 
   3.753775319436285*^9, 3.7537757191887217`*^9, 3.7537771866914186`*^9, 
   3.753782551767487*^9, 3.7537827313935823`*^9, 3.75378329194733*^9, 
   3.753784239535461*^9, 3.753784474904942*^9, 3.753789034460997*^9, 
   3.753789351005796*^9, 3.7537899628813*^9, 3.7541532772893476`*^9, 
   3.754153338733638*^9, 3.754153376885941*^9, 3.75845306145547*^9, {
   3.758453144858177*^9, 3.7584531916967154`*^9}, 3.7584640313331003`*^9, {
   3.75846406760741*^9, 3.758464084393249*^9}, 3.7584643532828493`*^9, 
   3.758894441170135*^9, 3.758894506283951*^9, 3.758894681161931*^9, 
   3.758894745153821*^9, 3.758896290307938*^9, 3.758896335278544*^9, 
   3.758896450425499*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "eerr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Warning: scaled local spatial error estimate of \[NoBreak]\
\\!\\(\\*RowBox[{\\\"48.79176304210144`\\\"}]\\)\[NoBreak] at \
\[NoBreak]\\!\\(\\*RowBox[{\\\"t\\\"}]\\)\[NoBreak] = \
\[NoBreak]\\!\\(\\*RowBox[{\\\"20.`\\\"}]\\)\[NoBreak] in the direction of \
independent variable \[NoBreak]\\!\\(\\*RowBox[{\\\"\[Theta]\\\"}]\\)\
\[NoBreak] is much greater than the prescribed error tolerance. Grid spacing \
with \[NoBreak]\\!\\(\\*RowBox[{\\\"201\\\"}]\\)\[NoBreak] points may be too \
large to achieve the desired accuracy or precision. A singularity may have \
formed or a smaller grid spacing can be specified using the MaxStepSize or \
MinPoints method options. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/eerr\\\", ButtonNote -> \
\\\"NDSolve::eerr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.753774941084422*^9, 3.753774968849066*^9}, 
   3.753775319436285*^9, 3.7537757191887217`*^9, 3.7537771866914186`*^9, 
   3.753782551767487*^9, 3.7537827313935823`*^9, 3.75378329194733*^9, 
   3.753784239535461*^9, 3.753784474904942*^9, 3.753789034460997*^9, 
   3.753789351005796*^9, 3.7537899628813*^9, 3.7541532772893476`*^9, 
   3.754153338733638*^9, 3.754153376885941*^9, 3.75845306145547*^9, {
   3.758453144858177*^9, 3.7584531916967154`*^9}, 3.7584640313331003`*^9, {
   3.75846406760741*^9, 3.758464084393249*^9}, 3.7584643532828493`*^9, 
   3.758894441170135*^9, 3.758894506283951*^9, 3.758894681161931*^9, 
   3.758894745153821*^9, 3.758896290307938*^9, 3.758896335278544*^9, 
   3.758896452974412*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "pdord"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Some of the functions have zero differential order, so the \
equations will be solved as a system of differential-algebraic equations. \\!\
\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/pdord\\\", \
ButtonNote -> \\\"NDSolve::pdord\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.753774941084422*^9, 3.753774968849066*^9}, 
   3.753775319436285*^9, 3.7537757191887217`*^9, 3.7537771866914186`*^9, 
   3.753782551767487*^9, 3.7537827313935823`*^9, 3.75378329194733*^9, 
   3.753784239535461*^9, 3.753784474904942*^9, 3.753789034460997*^9, 
   3.753789351005796*^9, 3.7537899628813*^9, 3.7541532772893476`*^9, 
   3.754153338733638*^9, 3.754153376885941*^9, 3.75845306145547*^9, {
   3.758453144858177*^9, 3.7584531916967154`*^9}, 3.7584640313331003`*^9, {
   3.75846406760741*^9, 3.758464084393249*^9}, 3.7584643532828493`*^9, 
   3.758894441170135*^9, 3.758894506283951*^9, 3.758894681161931*^9, 
   3.758894745153821*^9, 3.758896290307938*^9, 3.758896335278544*^9, 
   3.758896453067178*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"NDSolve\\\", \\\"::\\\", \
\\\"pdord\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.753774941084422*^9, 3.753774968849066*^9}, 
   3.753775319436285*^9, 3.7537757191887217`*^9, 3.7537771866914186`*^9, 
   3.753782551767487*^9, 3.7537827313935823`*^9, 3.75378329194733*^9, 
   3.753784239535461*^9, 3.753784474904942*^9, 3.753789034460997*^9, 
   3.753789351005796*^9, 3.7537899628813*^9, 3.7541532772893476`*^9, 
   3.754153338733638*^9, 3.754153376885941*^9, 3.75845306145547*^9, {
   3.758453144858177*^9, 3.7584531916967154`*^9}, 3.7584640313331003`*^9, {
   3.75846406760741*^9, 3.758464084393249*^9}, 3.7584643532828493`*^9, 
   3.758894441170135*^9, 3.758894506283951*^9, 3.758894681161931*^9, 
   3.758894745153821*^9, 3.758896290307938*^9, 3.758896335278544*^9, 
   3.758896453072888*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "mxsst"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Using maximum number of grid points \
\[NoBreak]\\!\\(\\*RowBox[{\\\"200\\\"}]\\)\[NoBreak] allowed by the \
MaxPoints or MinStepSize options for independent variable \
\[NoBreak]\\!\\(\\*RowBox[{\\\"\[Theta]\\\"}]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/mxsst\\\", \
ButtonNote -> \\\"NDSolve::mxsst\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.753774941084422*^9, 3.753774968849066*^9}, 
   3.753775319436285*^9, 3.7537757191887217`*^9, 3.7537771866914186`*^9, 
   3.753782551767487*^9, 3.7537827313935823`*^9, 3.75378329194733*^9, 
   3.753784239535461*^9, 3.753784474904942*^9, 3.753789034460997*^9, 
   3.753789351005796*^9, 3.7537899628813*^9, 3.7541532772893476`*^9, 
   3.754153338733638*^9, 3.754153376885941*^9, 3.75845306145547*^9, {
   3.758453144858177*^9, 3.7584531916967154`*^9}, 3.7584640313331003`*^9, {
   3.75846406760741*^9, 3.758464084393249*^9}, 3.7584643532828493`*^9, 
   3.758894441170135*^9, 3.758894506283951*^9, 3.758894681161931*^9, 
   3.758894745153821*^9, 3.758896290307938*^9, 3.758896335278544*^9, 
   3.758896453179124*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"NDSolve\\\", \\\"::\\\", \
\\\"mxsst\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.753774941084422*^9, 3.753774968849066*^9}, 
   3.753775319436285*^9, 3.7537757191887217`*^9, 3.7537771866914186`*^9, 
   3.753782551767487*^9, 3.7537827313935823`*^9, 3.75378329194733*^9, 
   3.753784239535461*^9, 3.753784474904942*^9, 3.753789034460997*^9, 
   3.753789351005796*^9, 3.7537899628813*^9, 3.7541532772893476`*^9, 
   3.754153338733638*^9, 3.754153376885941*^9, 3.75845306145547*^9, {
   3.758453144858177*^9, 3.7584531916967154`*^9}, 3.7584640313331003`*^9, {
   3.75846406760741*^9, 3.758464084393249*^9}, 3.7584643532828493`*^9, 
   3.758894441170135*^9, 3.758894506283951*^9, 3.758894681161931*^9, 
   3.758894745153821*^9, 3.758896290307938*^9, 3.758896335278544*^9, 
   3.758896453184359*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "eerr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Warning: scaled local spatial error estimate of \[NoBreak]\
\\!\\(\\*RowBox[{\\\"50.76381738370315`\\\"}]\\)\[NoBreak] at \
\[NoBreak]\\!\\(\\*RowBox[{\\\"t\\\"}]\\)\[NoBreak] = \
\[NoBreak]\\!\\(\\*RowBox[{\\\"20.`\\\"}]\\)\[NoBreak] in the direction of \
independent variable \[NoBreak]\\!\\(\\*RowBox[{\\\"\[Theta]\\\"}]\\)\
\[NoBreak] is much greater than the prescribed error tolerance. Grid spacing \
with \[NoBreak]\\!\\(\\*RowBox[{\\\"201\\\"}]\\)\[NoBreak] points may be too \
large to achieve the desired accuracy or precision. A singularity may have \
formed or a smaller grid spacing can be specified using the MaxStepSize or \
MinPoints method options. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/eerr\\\", ButtonNote -> \
\\\"NDSolve::eerr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.753774941084422*^9, 3.753774968849066*^9}, 
   3.753775319436285*^9, 3.7537757191887217`*^9, 3.7537771866914186`*^9, 
   3.753782551767487*^9, 3.7537827313935823`*^9, 3.75378329194733*^9, 
   3.753784239535461*^9, 3.753784474904942*^9, 3.753789034460997*^9, 
   3.753789351005796*^9, 3.7537899628813*^9, 3.7541532772893476`*^9, 
   3.754153338733638*^9, 3.754153376885941*^9, 3.75845306145547*^9, {
   3.758453144858177*^9, 3.7584531916967154`*^9}, 3.7584640313331003`*^9, {
   3.75846406760741*^9, 3.758464084393249*^9}, 3.7584643532828493`*^9, 
   3.758894441170135*^9, 3.758894506283951*^9, 3.758894681161931*^9, 
   3.758894745153821*^9, 3.758896290307938*^9, 3.758896335278544*^9, 
   3.758896455822331*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"NDSolve\\\", \\\"::\\\", \
\\\"eerr\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.753774941084422*^9, 3.753774968849066*^9}, 
   3.753775319436285*^9, 3.7537757191887217`*^9, 3.7537771866914186`*^9, 
   3.753782551767487*^9, 3.7537827313935823`*^9, 3.75378329194733*^9, 
   3.753784239535461*^9, 3.753784474904942*^9, 3.753789034460997*^9, 
   3.753789351005796*^9, 3.7537899628813*^9, 3.7541532772893476`*^9, 
   3.754153338733638*^9, 3.754153376885941*^9, 3.75845306145547*^9, {
   3.758453144858177*^9, 3.7584531916967154`*^9}, 3.7584640313331003`*^9, {
   3.75846406760741*^9, 3.758464084393249*^9}, 3.7584643532828493`*^9, 
   3.758894441170135*^9, 3.758894506283951*^9, 3.758894681161931*^9, 
   3.758894745153821*^9, 3.758896290307938*^9, 3.758896335278544*^9, 
   3.75889645592666*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\)\[NoBreak] digits of \
working precision to meet these tolerances. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.753774941084422*^9, 3.753774968849066*^9}, 
   3.753775319436285*^9, 3.7537757191887217`*^9, 3.7537771866914186`*^9, 
   3.753782551767487*^9, 3.7537827313935823`*^9, 3.75378329194733*^9, 
   3.753784239535461*^9, 3.753784474904942*^9, 3.753789034460997*^9, 
   3.753789351005796*^9, 3.7537899628813*^9, 3.7541532772893476`*^9, 
   3.754153338733638*^9, 3.754153376885941*^9, 3.75845306145547*^9, {
   3.758453144858177*^9, 3.7584531916967154`*^9}, 3.7584640313331003`*^9, {
   3.75846406760741*^9, 3.758464084393249*^9}, 3.7584643532828493`*^9, 
   3.758894441170135*^9, 3.758894506283951*^9, 3.758894681161931*^9, 
   3.758894745153821*^9, 3.758896290307938*^9, 3.758896335278544*^9, 
   3.7588964665476017`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0, 0, 0], PointSize[0.019444444444444445`], AbsoluteThickness[
     1.6], Dashing[Tiny], 
     LineBox[{{0.39269908169872414`, 0.39269908169872414`}, {
      0.5890486225480862, 0.5890486225480862}, {0.7853981633974483, 
      0.7853981633974483}, {0.9817477042468103, 0.9817477042468103}, {
      1.1780972450961724`, 1.1780972450961724`}, {1.3744467859455345`, 
      1.3744467859455345`}, {1.5707963267948966`, 1.5707963267948966`}, {
      1.7671458676442586`, 1.7671458676442586`}, {1.9634954084936207`, 
      1.9634954084936207`}, {2.159844949342983, 2.159844949342983}, {
      2.356194490192345, 2.356194490192345}}]}, 
    {RGBColor[1, 0, 0], PointSize[0.019444444444444445`], AbsoluteThickness[
     1.6], LineBox[{{0.39269908169872414`, -0.25742616487247816`}, {
      0.5890486225480862, -0.358222613342141}, {
      0.7853981633974483, -0.4312884648858029}, {
      0.9817477042468103, -0.47481063014770125`}, {
      1.1780972450961724`, -0.4904126119718593}, {
      1.3744467859455345`, -0.4820420825113668}, {
      1.5707963267948966`, -0.4547869696631595}, {
      1.7671458676442586`, -0.41378388977970276`}, {
      1.9634954084936207`, -0.36353401945926894`}, {
      2.159844949342983, -0.30750196851033573`}, {
      2.356194490192345, -0.24812592130855857`}}]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(\[Theta]\\), \\(perturb\\)]\\)\"", 
     TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(\[Theta]\\), \\(final\\)]\\)\"", 
     TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 2.356194490192345}, {-0.4904126119718593, 
    2.356194490192345}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7537825892384367`*^9, 3.753782988750557*^9, 3.753783368240069*^9, 
   3.753784311232131*^9, 3.7537845431281757`*^9, 3.7537891015043697`*^9, 
   3.7537894137384253`*^9, 3.753790027447421*^9, 3.754153293954637*^9, 
   3.7541533627492523`*^9, 3.754153394366311*^9, 3.7584530720672894`*^9, 
   3.758453155453124*^9, {3.758453186482587*^9, 3.758453206695406*^9}, 
   3.758464044697069*^9, {3.758464078502474*^9, 3.758464099544002*^9}, 
   3.758464364148328*^9, 3.758894466815889*^9, 3.7588945337965517`*^9, 
   3.7588947088188877`*^9, 3.7588947705822573`*^9, 3.7588963160086937`*^9, 
   3.758896360933854*^9, 3.758896476643712*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Theta]p", " ", "=", " ", 
   RowBox[{"Pi", "*", 
    RowBox[{"1", "/", "4"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spList", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "0.01", ",", "0.1", ",", "0.2", ",", "0.3", ",", " ", "0.4", ",", "0.5"}],
     "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]fList", " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Theta]final", "[", 
       RowBox[{"\[Theta]p", ",", "#"}], "]"}], "&"}], "/@", "spList"}]}], 
   ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "this", " ", "step", " ", "will", " ", "take", " ", "a", " ", "long", " ", 
    "time"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"musplot", " ", "=", " ", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0.5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Theta]p", ",", "\[Theta]p"}], "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"spList", ",", "\[Theta]fList"}], "}"}], "]"}]}], "}"}], ",", 
    
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Dashing", "[", "Tiny", "]"}], ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "0", ",", "0"}], "]"}]}], "}"}], ",", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"1", ",", "0", ",", "0"}], "]"}]}], "}"}]}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(s\), \(perturb\)]\)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(final\)]\)\>\""}], "}"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.753770854554768*^9, 3.7537708552751617`*^9}, {
   3.753770891888567*^9, 3.753770924390257*^9}, {3.75377097668224*^9, 
   3.753771014718549*^9}, {3.753771052901045*^9, 3.7537710856828547`*^9}, {
   3.753771142327333*^9, 3.753771143553344*^9}, {3.753771224318969*^9, 
   3.753771326468843*^9}, {3.7537713730792522`*^9, 3.7537713778711967`*^9}, {
   3.753771427889377*^9, 3.753771449342223*^9}, {3.7537714864002447`*^9, 
   3.7537714869738083`*^9}, {3.753771818480998*^9, 3.7537718478321657`*^9}, {
   3.753771882572194*^9, 3.753771912262156*^9}, {3.7537720029921217`*^9, 
   3.7537720042054453`*^9}, 3.753772068624715*^9, {3.753772269360003*^9, 
   3.753772298091103*^9}, {3.753773627524068*^9, 3.753773631741493*^9}, {
   3.753774896151258*^9, 3.7537749680274563`*^9}, {3.753775282816423*^9, 
   3.753775295448752*^9}, {3.7537756135463667`*^9, 3.753775620464263*^9}, {
   3.75377569785504*^9, 3.7537757001037903`*^9}, 3.753776274658765*^9, {
   3.753777175745085*^9, 3.753777181706745*^9}, {3.7537773151242447`*^9, 
   3.753777325552318*^9}, 3.75378347942241*^9, {3.753783541499659*^9, 
   3.75378362350766*^9}, {3.7537836722865553`*^9, 3.7537836740341473`*^9}, 
   3.753784078913601*^9, {3.7537847457303047`*^9, 3.753784747166718*^9}, {
   3.753784779001123*^9, 3.753784868066043*^9}, {3.753784910991715*^9, 
   3.753785069263235*^9}, 3.753785287329327*^9, {3.753785402795785*^9, 
   3.753785417990617*^9}, {3.753785477420497*^9, 3.75378547840056*^9}, {
   3.753785573991663*^9, 3.753785575377245*^9}, {3.753789885474472*^9, 
   3.75378989798767*^9}, 3.7565562629529123`*^9, {3.7584641120221577`*^9, 
   3.7584641126812363`*^9}, {3.758464195105628*^9, 3.758464227694319*^9}, {
   3.758464264008607*^9, 3.758464270915041*^9}, {3.758464310375724*^9, 
   3.7584643209549*^9}, 3.75889616131415*^9, {3.758896396356153*^9, 
   3.75889640599023*^9}, {3.758896486670546*^9, 3.758896486786882*^9}, {
   3.7761518798092747`*^9, 3.776151880333529*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "pdord"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Some of the functions have zero differential order, so the \
equations will be solved as a system of differential-algebraic equations. \\!\
\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/pdord\\\", \
ButtonNote -> \\\"NDSolve::pdord\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7537850697574*^9, 3.753785483930297*^9, 
  3.7537898985541058`*^9, 3.754153294695118*^9, 3.7584530765372543`*^9, 
  3.758464113986842*^9, 3.758464271593939*^9, 3.758464322145502*^9, 
  3.758894805176585*^9, 3.75889636870689*^9, 3.75889641834732*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "mxsst"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Using maximum number of grid points \
\[NoBreak]\\!\\(\\*RowBox[{\\\"200\\\"}]\\)\[NoBreak] allowed by the \
MaxPoints or MinStepSize options for independent variable \
\[NoBreak]\\!\\(\\*RowBox[{\\\"\[Theta]\\\"}]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/mxsst\\\", \
ButtonNote -> \\\"NDSolve::mxsst\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7537850697574*^9, 3.753785483930297*^9, 
  3.7537898985541058`*^9, 3.754153294695118*^9, 3.7584530765372543`*^9, 
  3.758464113986842*^9, 3.758464271593939*^9, 3.758464322145502*^9, 
  3.758894805176585*^9, 3.75889636870689*^9, 3.758896418372203*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "eerr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Warning: scaled local spatial error estimate of \[NoBreak]\
\\!\\(\\*RowBox[{\\\"79.3098439047798`\\\"}]\\)\[NoBreak] at \[NoBreak]\\!\\(\
\\*RowBox[{\\\"t\\\"}]\\)\[NoBreak] = \
\[NoBreak]\\!\\(\\*RowBox[{\\\"20.`\\\"}]\\)\[NoBreak] in the direction of \
independent variable \[NoBreak]\\!\\(\\*RowBox[{\\\"\[Theta]\\\"}]\\)\
\[NoBreak] is much greater than the prescribed error tolerance. Grid spacing \
with \[NoBreak]\\!\\(\\*RowBox[{\\\"201\\\"}]\\)\[NoBreak] points may be too \
large to achieve the desired accuracy or precision. A singularity may have \
formed or a smaller grid spacing can be specified using the MaxStepSize or \
MinPoints method options. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/eerr\\\", ButtonNote -> \
\\\"NDSolve::eerr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7537850697574*^9, 3.753785483930297*^9, 
  3.7537898985541058`*^9, 3.754153294695118*^9, 3.7584530765372543`*^9, 
  3.758464113986842*^9, 3.758464271593939*^9, 3.758464322145502*^9, 
  3.758894805176585*^9, 3.75889636870689*^9, 3.758896420218975*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "pdord"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Some of the functions have zero differential order, so the \
equations will be solved as a system of differential-algebraic equations. \\!\
\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/pdord\\\", \
ButtonNote -> \\\"NDSolve::pdord\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7537850697574*^9, 3.753785483930297*^9, 
  3.7537898985541058`*^9, 3.754153294695118*^9, 3.7584530765372543`*^9, 
  3.758464113986842*^9, 3.758464271593939*^9, 3.758464322145502*^9, 
  3.758894805176585*^9, 3.75889636870689*^9, 3.7588964202642717`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "mxsst"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Using maximum number of grid points \
\[NoBreak]\\!\\(\\*RowBox[{\\\"200\\\"}]\\)\[NoBreak] allowed by the \
MaxPoints or MinStepSize options for independent variable \
\[NoBreak]\\!\\(\\*RowBox[{\\\"\[Theta]\\\"}]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/mxsst\\\", \
ButtonNote -> \\\"NDSolve::mxsst\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7537850697574*^9, 3.753785483930297*^9, 
  3.7537898985541058`*^9, 3.754153294695118*^9, 3.7584530765372543`*^9, 
  3.758464113986842*^9, 3.758464271593939*^9, 3.758464322145502*^9, 
  3.758894805176585*^9, 3.75889636870689*^9, 3.758896420291168*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "eerr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Warning: scaled local spatial error estimate of \[NoBreak]\
\\!\\(\\*RowBox[{\\\"73.93360143391865`\\\"}]\\)\[NoBreak] at \
\[NoBreak]\\!\\(\\*RowBox[{\\\"t\\\"}]\\)\[NoBreak] = \
\[NoBreak]\\!\\(\\*RowBox[{\\\"20.`\\\"}]\\)\[NoBreak] in the direction of \
independent variable \[NoBreak]\\!\\(\\*RowBox[{\\\"\[Theta]\\\"}]\\)\
\[NoBreak] is much greater than the prescribed error tolerance. Grid spacing \
with \[NoBreak]\\!\\(\\*RowBox[{\\\"201\\\"}]\\)\[NoBreak] points may be too \
large to achieve the desired accuracy or precision. A singularity may have \
formed or a smaller grid spacing can be specified using the MaxStepSize or \
MinPoints method options. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/eerr\\\", ButtonNote -> \
\\\"NDSolve::eerr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7537850697574*^9, 3.753785483930297*^9, 
  3.7537898985541058`*^9, 3.754153294695118*^9, 3.7584530765372543`*^9, 
  3.758464113986842*^9, 3.758464271593939*^9, 3.758464322145502*^9, 
  3.758894805176585*^9, 3.75889636870689*^9, 3.7588964225011997`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\)\[NoBreak] digits of \
working precision to meet these tolerances. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7537850697574*^9, 3.753785483930297*^9, 
  3.7537898985541058`*^9, 3.754153294695118*^9, 3.7584530765372543`*^9, 
  3.758464113986842*^9, 3.758464271593939*^9, 3.758464322145502*^9, 
  3.758894805176585*^9, 3.75889636870689*^9, 3.75889642258405*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "pdord"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Some of the functions have zero differential order, so the \
equations will be solved as a system of differential-algebraic equations. \\!\
\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/pdord\\\", \
ButtonNote -> \\\"NDSolve::pdord\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7537850697574*^9, 3.753785483930297*^9, 
  3.7537898985541058`*^9, 3.754153294695118*^9, 3.7584530765372543`*^9, 
  3.758464113986842*^9, 3.758464271593939*^9, 3.758464322145502*^9, 
  3.758894805176585*^9, 3.75889636870689*^9, 3.7588964226063423`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"NDSolve\\\", \\\"::\\\", \
\\\"pdord\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7537850697574*^9, 3.753785483930297*^9, 
  3.7537898985541058`*^9, 3.754153294695118*^9, 3.7584530765372543`*^9, 
  3.758464113986842*^9, 3.758464271593939*^9, 3.758464322145502*^9, 
  3.758894805176585*^9, 3.75889636870689*^9, 3.758896422624033*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "mxsst"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Using maximum number of grid points \
\[NoBreak]\\!\\(\\*RowBox[{\\\"200\\\"}]\\)\[NoBreak] allowed by the \
MaxPoints or MinStepSize options for independent variable \
\[NoBreak]\\!\\(\\*RowBox[{\\\"\[Theta]\\\"}]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/mxsst\\\", \
ButtonNote -> \\\"NDSolve::mxsst\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7537850697574*^9, 3.753785483930297*^9, 
  3.7537898985541058`*^9, 3.754153294695118*^9, 3.7584530765372543`*^9, 
  3.758464113986842*^9, 3.758464271593939*^9, 3.758464322145502*^9, 
  3.758894805176585*^9, 3.75889636870689*^9, 3.758896422651025*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"NDSolve\\\", \\\"::\\\", \
\\\"mxsst\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7537850697574*^9, 3.753785483930297*^9, 
  3.7537898985541058`*^9, 3.754153294695118*^9, 3.7584530765372543`*^9, 
  3.758464113986842*^9, 3.758464271593939*^9, 3.758464322145502*^9, 
  3.758894805176585*^9, 3.75889636870689*^9, 3.758896422668535*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "eerr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Warning: scaled local spatial error estimate of \[NoBreak]\
\\!\\(\\*RowBox[{\\\"67.90001205924523`\\\"}]\\)\[NoBreak] at \
\[NoBreak]\\!\\(\\*RowBox[{\\\"t\\\"}]\\)\[NoBreak] = \
\[NoBreak]\\!\\(\\*RowBox[{\\\"20.`\\\"}]\\)\[NoBreak] in the direction of \
independent variable \[NoBreak]\\!\\(\\*RowBox[{\\\"\[Theta]\\\"}]\\)\
\[NoBreak] is much greater than the prescribed error tolerance. Grid spacing \
with \[NoBreak]\\!\\(\\*RowBox[{\\\"201\\\"}]\\)\[NoBreak] points may be too \
large to achieve the desired accuracy or precision. A singularity may have \
formed or a smaller grid spacing can be specified using the MaxStepSize or \
MinPoints method options. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/eerr\\\", ButtonNote -> \
\\\"NDSolve::eerr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7537850697574*^9, 3.753785483930297*^9, 
  3.7537898985541058`*^9, 3.754153294695118*^9, 3.7584530765372543`*^9, 
  3.758464113986842*^9, 3.758464271593939*^9, 3.758464322145502*^9, 
  3.758894805176585*^9, 3.75889636870689*^9, 3.758896424950206*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"NDSolve\\\", \\\"::\\\", \
\\\"eerr\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7537850697574*^9, 3.753785483930297*^9, 
  3.7537898985541058`*^9, 3.754153294695118*^9, 3.7584530765372543`*^9, 
  3.758464113986842*^9, 3.758464271593939*^9, 3.758464322145502*^9, 
  3.758894805176585*^9, 3.75889636870689*^9, 3.758896424969194*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
     1.6], Dashing[Tiny], 
     LineBox[{{0., 0.7853981633974483}, {0.3, 0.7853981633974483}}]}, 
    {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
     1.6], LineBox[{{0.01, -0.012654756694205216`}, {
      0.1, -0.11629111362388457`}, {0.2, -0.21376679746840996`}, {
      0.3, -0.2969110729100186}, {0.4, -0.36869448506649644`}, {
      0.5, -0.4312884648858029}}]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(s\\), \\(perturb\\)]\\)\"", TraditionalForm], 
    
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(\[Theta]\\), \\(final\\)]\\)\"", 
     TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 0.5}, {-0.4312884648858029, 0.7853981633974483}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.753785048901888*^9, 3.753785127432641*^9, 
  3.753785559116033*^9, 3.753789962475513*^9, 3.75415331280236*^9, 
  3.7584530855556593`*^9, 3.758464120316516*^9, 3.758464277989427*^9, 
  3.758464328446517*^9, 3.758894815693584*^9, 3.7588963786985073`*^9, 
  3.758896432953394*^9}]
}, Open  ]]
},
WindowSize->{1280, 1395},
WindowMargins->{{Automatic, -519}, {900, Automatic}},
CellEpilog:>SelectionMove[
  EvaluationNotebook[], Next, Cell],
FrontEndVersion->"10.4 for Mac OS X x86 (32-bit, 64-bit Kernel) (April 11, \
2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 375, 9, 28, "Input"],
Cell[936, 31, 253, 4, 46, "Text"],
Cell[1192, 37, 4302, 79, 131, "Input"],
Cell[5497, 118, 266, 4, 46, "Text"],
Cell[5766, 124, 16239, 307, 325, "Input"],
Cell[22008, 433, 760, 18, 46, "Input"],
Cell[22771, 453, 6135, 135, 213, "Input"],
Cell[CellGroupData[{
Cell[28931, 592, 1816, 35, 80, "Input"],
Cell[30750, 629, 1863, 29, 24, "Message"],
Cell[32616, 660, 2005, 32, 42, "Message"],
Cell[34624, 694, 2393, 37, 59, "Message"],
Cell[37020, 733, 42374, 843, 116, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79431, 1581, 1348, 25, 63, "Input"],
Cell[80782, 1608, 206726, 3683, 314, "Output"],
Cell[287511, 5293, 102510, 1882, 303, "Output"],
Cell[390024, 7177, 114506, 2073, 325, "Output"]
}, Open  ]],
Cell[504545, 9253, 1300, 32, 97, "Input"],
Cell[505848, 9287, 4839, 121, 182, "Input"],
Cell[CellGroupData[{
Cell[510712, 9412, 8647, 175, 220, "Input"],
Cell[519362, 9589, 37867, 665, 242, "Output"]
}, Open  ]],
Cell[557244, 10257, 12907, 262, 362, "Input"],
Cell[CellGroupData[{
Cell[570176, 10523, 418, 7, 28, "Input"],
Cell[570597, 10532, 4496, 65, 24, "Message"],
Cell[575096, 10599, 4592, 67, 24, "Message"],
Cell[579691, 10668, 5026, 73, 59, "Message"],
Cell[584720, 10743, 40567, 817, 116, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[625324, 11565, 1023, 21, 63, "Input"],
Cell[626350, 11588, 261941, 4586, 313, "Output"],
Cell[888294, 16176, 109047, 1988, 305, "Output"],
Cell[997344, 18166, 137015, 2440, 319, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1134396, 20611, 1182, 25, 28, "Input"],
Cell[1135581, 20638, 702, 13, 41, "Message"],
Cell[1136286, 20653, 1176, 17, 28, "Output"]
}, Open  ]],
Cell[1137477, 20673, 917, 23, 28, "Input"],
Cell[CellGroupData[{
Cell[1138419, 20700, 3558, 75, 106, "Input"],
Cell[1141980, 20777, 1212, 20, 24, "Message"],
Cell[1143195, 20799, 1304, 22, 24, "Message"],
Cell[1144502, 20823, 1739, 28, 59, "Message"],
Cell[1146244, 20853, 1210, 20, 24, "Message"],
Cell[1147457, 20875, 1304, 22, 24, "Message"],
Cell[1148764, 20899, 1738, 28, 59, "Message"],
Cell[1150505, 20929, 1210, 20, 24, "Message"],
Cell[1151718, 20951, 1256, 22, 24, "Message"],
Cell[1152977, 20975, 1304, 22, 24, "Message"],
Cell[1154284, 20999, 1256, 22, 24, "Message"],
Cell[1155543, 21023, 1738, 28, 59, "Message"],
Cell[1157284, 21053, 1254, 22, 24, "Message"],
Cell[1158541, 21077, 1397, 23, 41, "Message"],
Cell[1159941, 21102, 3359, 69, 221, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1163337, 21176, 3838, 82, 106, "Input"],
Cell[1167178, 21260, 746, 13, 24, "Message"],
Cell[1167927, 21275, 841, 15, 24, "Message"],
Cell[1168771, 21292, 1274, 21, 59, "Message"],
Cell[1170048, 21315, 749, 13, 24, "Message"],
Cell[1170800, 21330, 841, 15, 24, "Message"],
Cell[1171644, 21347, 1277, 21, 59, "Message"],
Cell[1172924, 21370, 931, 16, 41, "Message"],
Cell[1173858, 21388, 749, 13, 24, "Message"],
Cell[1174610, 21403, 793, 15, 24, "Message"],
Cell[1175406, 21420, 841, 15, 24, "Message"],
Cell[1176250, 21437, 793, 15, 24, "Message"],
Cell[1177046, 21454, 1275, 21, 59, "Message"],
Cell[1178324, 21477, 792, 15, 24, "Message"],
Cell[1179119, 21494, 2153, 49, 221, "Output"]
}, Open  ]]
}
]
*)

